<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>s0uthwood&#39;s Blog</title>
  
  
  <link href="https://s0uthwood.github.io/atom.xml" rel="self"/>
  
  <link href="https://s0uthwood.github.io/"/>
  <updated>2021-03-04T08:47:58.076Z</updated>
  <id>https://s0uthwood.github.io/</id>
  
  <author>
    <name>s0uthwood</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>MRCTF2020 reverse writeups</title>
    <link href="https://s0uthwood.github.io/2021/03/04/MRCTF2020-reverse-writeups/"/>
    <id>https://s0uthwood.github.io/2021/03/04/MRCTF2020-reverse-writeups/</id>
    <published>2021-03-04T08:38:52.000Z</published>
    <updated>2021-03-04T08:47:58.076Z</updated>
    
    <content type="html"><![CDATA[<p>平台：BUUOJ</p><p>做题的时候懒了，没写思路，暂时先贴上代码吧</p><a id="more"></a><h1 id="Transform"><a href="#Transform" class="headerlink" title="Transform"></a>Transform</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">dword = [ <span class="number">9</span>, <span class="number">0xa</span>, <span class="number">0xf</span>, <span class="number">0x17</span>, <span class="number">0x7</span>, <span class="number">0x18</span>, <span class="number">0xc</span>, <span class="number">0x6</span>, <span class="number">0x1</span>, <span class="number">0x10</span>, <span class="number">0x3</span>, <span class="number">0x11</span>, <span class="number">0x20</span>, <span class="number">0x1D</span>, <span class="number">0x0b</span>, <span class="number">0x1e</span>, <span class="number">0x1b</span>, <span class="number">0x16</span>, <span class="number">0x4</span>, <span class="number">0x0d</span>, <span class="number">0x13</span>, <span class="number">0x14</span>, <span class="number">0x15</span>, <span class="number">0x2</span>, <span class="number">0x19</span>, <span class="number">0x5</span>, <span class="number">0x1f</span>, <span class="number">0x8</span>, <span class="number">0x12</span>, <span class="number">0x1a</span>, <span class="number">0x1c</span>, <span class="number">0xe</span>, <span class="number">0</span> ]</span><br><span class="line"></span><br><span class="line">flag = [ <span class="number">0x67</span>, <span class="number">0x79</span>, <span class="number">0x7b</span>, <span class="number">0x7f</span>, <span class="number">0x75</span>, <span class="number">0x2b</span>, <span class="number">0x3c</span>, <span class="number">0x52</span>, <span class="number">0x53</span>, <span class="number">0x79</span>, <span class="number">0x57</span>, <span class="number">0x5E</span>, <span class="number">0x5D</span>, <span class="number">0x42</span>, <span class="number">0x7B</span>, <span class="number">0x2D</span>, <span class="number">0x2A</span>, <span class="number">0x66</span>, <span class="number">0x42</span>, <span class="number">0x7E</span>, <span class="number">0x4C</span>, <span class="number">0x57</span>, <span class="number">0x79</span>, <span class="number">0x41</span>, <span class="number">0x6B</span>, <span class="number">0x7E</span>, <span class="number">0x65</span>, <span class="number">0x3C</span>, <span class="number">0x5C</span>, <span class="number">0x45</span>, <span class="number">0x6F</span>, <span class="number">0x62</span>, <span class="number">0x4D</span>, <span class="number">0x3f</span>]</span><br><span class="line">print(<span class="built_in">len</span>(dword), <span class="built_in">len</span>(flag))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(dword)):</span><br><span class="line">    flag[i] ^= dword[i]</span><br><span class="line"></span><br><span class="line">code = [ <span class="number">0</span> <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">33</span>)]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(dword)):</span><br><span class="line">    code[dword[i]] = flag[i]</span><br><span class="line"> </span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(code)):</span><br><span class="line">    print(<span class="built_in">chr</span>(code[i]), end = <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">print()</span><br></pre></td></tr></table></figure><p>flag: <code>MRCTF&#123;Tr4nsp0sltiON_Clph3r_1s_3z&#125;</code></p><h1 id="Xor"><a href="#Xor" class="headerlink" title="Xor"></a>Xor</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">flag = <span class="string">&#x27;MSAWB~FXZ:J:`tQJ&quot;N@ bpdd&#125;8g&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">27</span>):</span><br><span class="line">    print(<span class="built_in">chr</span>(<span class="built_in">ord</span>(flag[i]) ^ i), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">print()</span><br></pre></td></tr></table></figure><p>flag: <code>MRCTF&#123;@_R3@1ly_E2_R3verse!&#125;</code></p><h1 id="hello-world-go"><a href="#hello-world-go" class="headerlink" title="hello_world_go"></a>hello_world_go</h1><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">.rodata:00000000004D3C58 unk_4D3C58      db  66h ; f             ; DATA XREF: main_main:loc_49A40A↑o</span><br><span class="line">.rodata:00000000004D3C58                                         ; main_main+25C↑o</span><br><span class="line">.rodata:00000000004D3C59                 db  6Ch ; l</span><br><span class="line">.rodata:00000000004D3C5A                 db  61h ; a</span><br><span class="line">.rodata:00000000004D3C5B                 db  67h ; g</span><br><span class="line">.rodata:00000000004D3C5C                 db  7Bh ; &#123;</span><br><span class="line">.rodata:00000000004D3C5D                 db  68h ; h</span><br><span class="line">.rodata:00000000004D3C5E                 db  65h ; e</span><br><span class="line">.rodata:00000000004D3C5F                 db  6Ch ; l</span><br><span class="line">.rodata:00000000004D3C60                 db  6Ch ; l</span><br><span class="line">.rodata:00000000004D3C61                 db  6Fh ; o</span><br><span class="line">.rodata:00000000004D3C62                 db  5Fh ; _</span><br><span class="line">.rodata:00000000004D3C63                 db  77h ; w</span><br><span class="line">.rodata:00000000004D3C64                 db  6Fh ; o</span><br><span class="line">.rodata:00000000004D3C65                 db  72h ; r</span><br><span class="line">.rodata:00000000004D3C66                 db  6Ch ; l</span><br><span class="line">.rodata:00000000004D3C67                 db  64h ; d</span><br><span class="line">.rodata:00000000004D3C68                 db  5Fh ; _</span><br><span class="line">.rodata:00000000004D3C69                 db  67h ; g</span><br><span class="line">.rodata:00000000004D3C6A                 db  6Fh ; o</span><br><span class="line">.rodata:00000000004D3C6B                 db  67h ; g</span><br><span class="line">.rodata:00000000004D3C6C                 db  6Fh ; o</span><br><span class="line">.rodata:00000000004D3C6D                 db  67h ; g</span><br><span class="line">.rodata:00000000004D3C6E                 db  6Fh ; o</span><br><span class="line">.rodata:00000000004D3C6F                 db  7Dh ; &#125;</span><br></pre></td></tr></table></figure><h1 id="PixelShooter"><a href="#PixelShooter" class="headerlink" title="PixelShooter"></a>PixelShooter</h1><p>先使用NoxPlayer打开这个apk，发现游戏结束后有个flag信息，说得分不够高，说明flag会在游戏结束时根据得分获得</p><p>使用apktool解压</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ java -jar apktool_2.5.0.jar d PixelShooter.apk</span><br></pre></td></tr></table></figure><p>这个显然是unity3d逆向，找到 <code>/assets/bin/Data/Managed</code>，使用 dnSpy打开 <code>Assembly-CSharp.dll</code></p><p>看到有个gameController，其中有个gameOver</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">GameOver</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.isGameOver = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">this</span>.UI.GetComponent&lt;UIController&gt;().GameOver(<span class="keyword">this</span>.score, <span class="keyword">this</span>.bestScore);</span><br><span class="line"><span class="keyword">if</span> (PlayerPrefs.HasKey(<span class="string">&quot;bestScore&quot;</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.bestScore = Mathf.Max(<span class="keyword">this</span>.score, PlayerPrefs.GetInt(<span class="string">&quot;bestScore&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>.bestScore = <span class="keyword">this</span>.score;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">base</span>.GetComponent&lt;AudioSource&gt;().Stop();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有个获取ui的函数，查看</p><figure class="highlight c#"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">GameOver</span>(<span class="params"><span class="built_in">int</span> score, <span class="built_in">int</span> bestScore</span>)</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>.pad.SetActive(<span class="literal">false</span>);</span><br><span class="line">Time.timeScale = <span class="number">0f</span>;</span><br><span class="line"><span class="built_in">string</span> text = <span class="string">&quot;您的飞机已坠毁\n&quot;</span>;</span><br><span class="line"><span class="keyword">if</span> (bestScore &lt; score)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">string</span> text2 = text;</span><br><span class="line">text = <span class="built_in">string</span>.Concat(<span class="keyword">new</span> <span class="built_in">object</span>[]</span><br><span class="line">&#123;</span><br><span class="line">text2,</span><br><span class="line"><span class="string">&quot;获得最高分:&quot;</span>,</span><br><span class="line">score,</span><br><span class="line"><span class="string">&quot;!\n&quot;</span></span><br><span class="line">&#125;);</span><br><span class="line">PlayerPrefs.SetInt(<span class="string">&quot;bestScore&quot;</span>, score);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (score &lt; <span class="number">20</span>)</span><br><span class="line">&#123;</span><br><span class="line">text += <span class="string">&quot;少年继续努力！要拿到flag还差亿点点\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (score &lt; <span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line">text += <span class="string">&quot;战绩不错！但是要拿到flag还差亿点&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (score &lt; <span class="number">500</span>)</span><br><span class="line">&#123;</span><br><span class="line">text += <span class="string">&quot;惊人的成绩！！但是要拿到flag还差一点\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">text += <span class="string">&quot;MRCTF&#123;Unity_1S_Fun_233&#125;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (Time.time - <span class="keyword">this</span>.lastTime &lt; <span class="number">15f</span>)</span><br><span class="line">&#123;</span><br><span class="line">text += <span class="string">&quot;以及，别作死啊！\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (Time.time - <span class="keyword">this</span>.lastTime &lt; <span class="number">60f</span>)</span><br><span class="line">&#123;</span><br><span class="line">text += <span class="string">&quot;以及注意闪避！&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">this</span>.gameOverText.text = text;</span><br><span class="line"><span class="keyword">this</span>.gameOverUI.SetActive(<span class="literal">true</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>拿到flag</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;平台：BUUOJ&lt;/p&gt;
&lt;p&gt;做题的时候懒了，没写思路，暂时先贴上代码吧&lt;/p&gt;</summary>
    
    
    
    
    <category term="CTF" scheme="https://s0uthwood.github.io/tags/CTF/"/>
    
    <category term="Reverse" scheme="https://s0uthwood.github.io/tags/Reverse/"/>
    
  </entry>
  
  <entry>
    <title>GUETCTF2019 reverse writeups</title>
    <link href="https://s0uthwood.github.io/2021/03/04/GUETCTF2019-reverse-writeups/"/>
    <id>https://s0uthwood.github.io/2021/03/04/GUETCTF2019-reverse-writeups/</id>
    <published>2021-03-04T08:17:36.000Z</published>
    <updated>2021-03-04T08:29:02.117Z</updated>
    
    <content type="html"><![CDATA[<p>平台：buuoj</p><a id="more"></a><h1 id="re"><a href="#re" class="headerlink" title="re"></a>re</h1><h2 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h2><p>先upx脱壳</p><p>然后拖入ida</p><p>找到关键字符串</p><p>进入函数</p><p>发现是对每一位进行乘法然后判断</p><p>直接扔到python里算一下，发现 <code>a[6]</code> 缺失，以及有一位算不出来，可能出现了溢出</p><p>用c语言把这一位算出来，得到是 <code>a</code></p><p>对第7位进行暴力破解，发现1可以，得到flag</p><p><code>flag&#123;e165421110ba03099a1c039337&#125;</code></p><h2 id="脚本"><a href="#脚本" class="headerlink" title="脚本"></a>脚本</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">x = [ <span class="number">1629056</span>,  <span class="number">6771600</span>,  <span class="number">3682944</span>, <span class="number">10431000</span>,  <span class="number">3977328</span>,  <span class="number">5138336</span>,  <span class="number">7532250</span>,  <span class="number">5551632</span>,  <span class="number">3409728</span>, <span class="number">13013670</span>,  <span class="number">6088797</span>,  <span class="number">7884663</span>,  <span class="number">8944053</span>,  <span class="number">5198490</span>,  <span class="number">4544518</span>,   <span class="number">10115280</span>,<span class="number">3645600</span>,  <span class="number">9667504</span>,  <span class="number">5364450</span>, <span class="number">13464540</span>,  <span class="number">5488432</span>, <span class="number">14479500</span>,  <span class="number">6451830</span>,  <span class="number">6252576</span>,  <span class="number">7763364</span>,  <span class="number">7327320</span>,  <span class="number">8741520</span>,  <span class="number">8871876</span>,  <span class="number">4086720</span>,  <span class="number">9374400</span>, <span class="number">5759124</span> ]</span><br><span class="line">a = [ <span class="number">166163712</span> , <span class="number">731332800</span> , <span class="number">357245568</span> , <span class="number">1074393000</span>, <span class="number">489211344</span> , <span class="number">518971936</span> , <span class="number">406741500</span> , <span class="number">294236496</span> , <span class="number">177305856</span> ,  <span class="number">650683500</span>,  <span class="number">298351053</span>,  <span class="number">386348487</span>,  <span class="number">438258597</span>,  <span class="number">249527520</span>,  <span class="number">445362764</span>, <span class="number">981182160</span>, <span class="number">174988800</span>, <span class="number">493042704</span>,  <span class="number">257493600</span>,  <span class="number">767478780</span>,  <span class="number">312840624</span>,  <span class="number">140451150</span>,  <span class="number">316139670</span>,  <span class="number">619005024</span>,  <span class="number">372641472</span>,  <span class="number">373693320</span>,  <span class="number">498266640</span>,  <span class="number">452465676</span>,  <span class="number">208422720</span>,  <span class="number">515592000</span>,  <span class="number">719890500</span> ]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(x)):</span><br><span class="line">    <span class="keyword">if</span> (a[i] % x[i] == <span class="number">0</span>):</span><br><span class="line">        <span class="built_in">print</span> (<span class="built_in">chr</span>(a[i] // x[i]), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="built_in">print</span> (<span class="string">&#x27;\n&#x27;</span>, i)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\nfinish&#x27;</span>)</span><br></pre></td></tr></table></figure><p>输出为</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;e65421110ba03099</span><br><span class="line"> 21</span><br><span class="line">1c039337&#125;</span><br><span class="line">finish</span><br></pre></td></tr></table></figure><p>再写个c把这一位算一下（其实不如直接用c暴力破解了）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> x;</span><br><span class="line">    <span class="keyword">for</span> (x = <span class="number">0x21</span>; x &lt; <span class="number">0x7f</span>; x++)&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="number">14479500</span> * x == <span class="number">1404511500</span>)&#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c\n&quot;</span>, x);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;finish\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="number-game"><a href="#number-game" class="headerlink" title="number game"></a>number game</h1><p>先拖入ida进行静态分析，查看main函数核心代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">__isoc99_scanf(<span class="string">&quot;%s&quot;</span>, &amp;v5, a3);</span><br><span class="line"><span class="keyword">if</span> ( (<span class="keyword">unsigned</span> <span class="keyword">int</span>)check_input((<span class="keyword">const</span> <span class="keyword">char</span> *)&amp;v5) )<span class="comment">// 长度为10且只能是&quot;01234&quot;</span></span><br><span class="line">&#123;</span><br><span class="line">  v3 = sub_400758((__int64)&amp;v5, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">  sub_400807((__int64)v3, (__int64)&amp;v7);</span><br><span class="line">  v9 = <span class="number">0</span>;</span><br><span class="line">  sub_400881((<span class="keyword">char</span> *)&amp;v7);                    <span class="comment">// v7 = &quot;0421421430&quot;</span></span><br><span class="line">  <span class="keyword">if</span> ( (<span class="keyword">unsigned</span> <span class="keyword">int</span>)sub_400917() )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;TQL!&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;flag&#123;&quot;</span>, &amp;v7);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, &amp;v5);</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;&#125;&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;your are cxk!!&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输入的字符串需要通过两个if语句</p><p>先看第一个if语句对应的函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> ( <span class="built_in">strlen</span>(a1) == <span class="number">10</span> )</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">9</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( a1[i] &gt; <span class="number">52</span> || a1[i] &lt;= <span class="number">47</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;Wrong!&quot;</span>);</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  result = <span class="number">1L</span>L;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Wrong!&quot;</span>);</span><br><span class="line">  result = <span class="number">0L</span>L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这是对输入数据的简单要求，要求是10个0-4自成的字符串</p><p>再查看第二个if中的函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">v1 = <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">4</span>; ++i )</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">for</span> ( j = <span class="number">0</span>; j &lt;= <span class="number">4</span>; ++j )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span> ( k = j + <span class="number">1</span>; k &lt;= <span class="number">4</span>; ++k )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( *((_BYTE *)&amp;unk_601060 + <span class="number">5</span> * i + j) == *((_BYTE *)&amp;unk_601060 + <span class="number">5</span> * i + k) )</span><br><span class="line">        v1 = <span class="number">0</span>;</span><br><span class="line">      <span class="keyword">if</span> ( *((_BYTE *)&amp;unk_601060 + <span class="number">5</span> * j + i) == *((_BYTE *)&amp;unk_601060 + <span class="number">5</span> * k + i) )</span><br><span class="line">        v1 = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>要求在某条件下unk_601060中的两个字符不相同</p><p>再查看一下中间的几个函数</p><p>先查看 <code>sub_400881</code> 函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">__int64 __fastcall <span class="title">sub_400881</span><span class="params">(<span class="keyword">char</span> *a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  __int64 result; <span class="comment">// rax</span></span><br><span class="line"></span><br><span class="line">  byte_601062 = *a1;</span><br><span class="line">  byte_601067 = a1[<span class="number">1</span>];</span><br><span class="line">  byte_601069 = a1[<span class="number">2</span>];</span><br><span class="line">  byte_60106B = a1[<span class="number">3</span>];</span><br><span class="line">  byte_60106E = a1[<span class="number">4</span>];</span><br><span class="line">  byte_60106F = a1[<span class="number">5</span>];</span><br><span class="line">  byte_601071 = a1[<span class="number">6</span>];</span><br><span class="line">  byte_601072 = a1[<span class="number">7</span>];</span><br><span class="line">  byte_601076 = a1[<span class="number">8</span>];</span><br><span class="line">  result = (<span class="keyword">unsigned</span> __int8)a1[<span class="number">9</span>];</span><br><span class="line">  byte_601077 = a1[<span class="number">9</span>];</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>是将a1中的数据放到指定的内存位置上</p><p>查看这个内存地址</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">data:0000000000601060 unk_601060      db  31h ; 1</span><br><span class="line">.data:0000000000601061                 db  34h ; 4</span><br><span class="line">.data:0000000000601062 byte_601062     db 23h                  ; DATA XREF: sub_400881+F↑w</span><br><span class="line">.data:0000000000601063                 db  32h ; 2</span><br><span class="line">.data:0000000000601064                 db  33h ; 3</span><br><span class="line">.data:0000000000601065                 db  33h ; 3</span><br><span class="line">.data:0000000000601066                 db  30h ; 0</span><br><span class="line">.data:0000000000601067 byte_601067     db 23h                  ; DATA XREF: sub_400881+1D↑w</span><br><span class="line">.data:0000000000601068                 db  31h ; 1</span><br><span class="line">.data:0000000000601069 byte_601069     db 23h                  ; DATA XREF: sub_400881+2B↑w</span><br><span class="line">.data:000000000060106A                 db  30h ; 0</span><br><span class="line">.data:000000000060106B byte_60106B     db 23h                  ; DATA XREF: sub_400881+39↑w</span><br><span class="line">.data:000000000060106C                 db  32h ; 2</span><br><span class="line">.data:000000000060106D                 db  33h ; 3</span><br><span class="line">.data:000000000060106E byte_60106E     db 23h                  ; DATA XREF: sub_400881+47↑w</span><br><span class="line">.data:000000000060106F byte_60106F     db 23h                  ; DATA XREF: sub_400881+55↑w</span><br><span class="line">.data:0000000000601070                 db  33h ; 3</span><br><span class="line">.data:0000000000601071 byte_601071     db 23h                  ; DATA XREF: sub_400881+63↑w</span><br><span class="line">.data:0000000000601072 byte_601072     db 23h                  ; DATA XREF: sub_400881+71↑w</span><br><span class="line">.data:0000000000601073                 db  30h ; 0</span><br><span class="line">.data:0000000000601074                 db  34h ; 4</span><br><span class="line">.data:0000000000601075                 db  32h ; 2</span><br><span class="line">.data:0000000000601076 byte_601076     db 23h                  ; DATA XREF: sub_400881+7F↑w</span><br><span class="line">.data:0000000000601077 byte_601077     db 23h                  ; DATA XREF: sub_400881+8D↑w</span><br><span class="line">.data:0000000000601078                 db  31h ; 1</span><br></pre></td></tr></table></figure><p>发现与 <code>unk_601060</code> 对应</p><p>说明这个程序是将输入数据填到指定内存上，然后判断是否符合某个特殊条件</p><p>由于总共有25个字符，并且程序中出现了形如 <code>5 * i + j</code> 的值，以及题目名称 <code>number_game</code> 推测是一种类似数独的填数游戏，每行每列数字只能为01234且不能重复</p><p>查看已有的数字</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">14 23</span><br><span class="line">30 1 </span><br><span class="line">0 23 </span><br><span class="line"> 3  0</span><br><span class="line">42  1</span><br></pre></td></tr></table></figure><p>那么最后v7中应该为 <code>0421421430</code></p><p>简单查看了 <code>sub_400758</code> 和 <code>sub_400807</code> 后，确定这两个函数只进行了顺序的转换，只要得知其结果就可以</p><p>因此使用gdb进行动态调试，目的是找到这两个函数的顺序调换结果</p><p>首先 <code>start</code> 运行程序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gdb-peda$ start</span><br></pre></td></tr></table></figure><p>在 <code>0x40a62</code> 处打上断点（输入后，第一个if前）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gdb-peda$ b *0x400a62</span><br></pre></td></tr></table></figure><p>运行，并输入 <code>0123456789</code></p><p>接下来需要绕过第一个if判断</p><p>在调用函数前修改eip，直接跳到jz后面</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">gdb-peda$ set var $rip&#x3D;0x400a76</span><br></pre></td></tr></table></figure><p>接下来需要查看两个函数运行后的值，这个值是 <code>sub_400881</code> 的参数，因此在call这个函数前打上断点，并查看 rdi 寄存器的结果即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">gdb-peda$ b *0x400aae</span><br><span class="line">Breakpoint 3 at 0x400aae</span><br><span class="line">gdb-peda$ c</span><br><span class="line">Continuing.</span><br><span class="line">[----------------------------------registers-----------------------------------]</span><br><span class="line">RAX: 0x7ffffffedf40</span><br><span class="line">RBX: 0x400b20 --&gt; 0x41ff894156415741</span><br><span class="line">RCX: 0xe</span><br><span class="line">RDX: 0x7ffffffedf40</span><br><span class="line">RSI: 0x7ffffffedf40</span><br><span class="line">RDI: 0x7ffffffedf40</span><br><span class="line">RBP: 0x7ffffffedf60</span><br><span class="line">RSP: 0x7ffffffedf20</span><br><span class="line">RIP: 0x400aae --&gt; 0xb8fffffdcee8</span><br><span class="line">R8 : 0x6033d0 --&gt; 0x36 (&#39;6&#39;)</span><br><span class="line">R9 : 0x7c (&#39;|&#39;)</span><br><span class="line">R10: 0x4003ce --&gt; 0x5f00636f6c6c616d (&#39;malloc&#39;)</span><br><span class="line">R11: 0x7fffff78bbe0 --&gt; 0x6033e0 --&gt; 0x0</span><br><span class="line">R12: 0x4005e0 --&gt; 0x89485ed18949ed31</span><br><span class="line">R13: 0x7ffffffee050</span><br><span class="line">R14: 0x0</span><br><span class="line">R15: 0x0</span><br><span class="line">EFLAGS: 0x246 (carry PARITY adjust ZERO sign trap INTERRUPT direction overflow)</span><br><span class="line">[-------------------------------------code-------------------------------------]</span><br><span class="line">   0x400aa3:    mov    BYTE PTR [rbp-0x16],0x0</span><br><span class="line">   0x400aa7:    lea    rax,[rbp-0x20]</span><br><span class="line">   0x400aab:    mov    rdi,rax</span><br><span class="line">&#x3D;&gt; 0x400aae:    call   0x400881</span><br><span class="line">   0x400ab3:    mov    eax,0x0</span><br><span class="line">   0x400ab8:    call   0x400917</span><br><span class="line">   0x400abd:    test   eax,eax</span><br><span class="line">   0x400abf:    je     0x400afc</span><br><span class="line">Guessed arguments:</span><br><span class="line">arg[0]: 0x7ffffffedf40</span><br><span class="line">[------------------------------------stack-------------------------------------]</span><br><span class="line">Invalid $SP address: 0x7ffffffedf20</span><br><span class="line">[------------------------------------------------------------------------------]</span><br><span class="line">Legend: code, data, rodata, value</span><br><span class="line"></span><br><span class="line">Breakpoint 3, 0x0000000000400aae in ?? ()</span><br></pre></td></tr></table></figure><p>注意到 <code>RDI: 0x7ffffffedf40</code></p><p>因此查看这个内存地址下的值即可</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">gdb-peda$ x&#x2F;2x 0x7ffffffedf40</span><br><span class="line">0x7ffffffedf40: 0x3530343931383337      0x0000000000003632</span><br></pre></td></tr></table></figure><p>根据小端模式</p><p><code>0123456789</code> 被转换为 <code>7381940526</code></p><p>根据这个信息将 <code>0421421430</code> 还原，得到 <code>1134240024</code></p><p>运行程序</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ .&#x2F;number_game</span><br><span class="line">1134240024</span><br><span class="line">TQL!</span><br><span class="line">flag&#123;1134240024&#125;</span><br></pre></td></tr></table></figure><h1 id="encrypt"><a href="#encrypt" class="headerlink" title="encrypt"></a>encrypt</h1><p>拖入ida，查看主函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;please input your flag:&quot;</span>, a2, v19);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;s);</span><br><span class="line"><span class="built_in">memset</span>(&amp;v9, <span class="number">0</span>, <span class="number">0x408</span>uLL);</span><br><span class="line">sub_4006B6(&amp;v9, (__int64)&amp;v10, <span class="number">8</span>);</span><br><span class="line">v3 = <span class="built_in">strlen</span>(&amp;s);</span><br><span class="line">sub_4007DB(&amp;v9, (__int64)&amp;s, v3);</span><br><span class="line">v4 = <span class="built_in">strlen</span>(&amp;s);</span><br><span class="line">sub_4008FA((__int64)&amp;s, v4, v19, &amp;v6);</span><br><span class="line"><span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">50</span>; ++i )</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">if</span> ( v19[i] != byte_602080[i] )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Wrong&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;Good&quot;</span>);</span><br></pre></td></tr></table></figure><p>在进行判断前执行了三个函数</p><p>最后一个函数是一个类base64</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> ( v20 &lt; a2 )</span><br><span class="line">&#123;</span><br><span class="line">  v4 = v20++;</span><br><span class="line">  v17 = *(_BYTE *)(v4 + a1);</span><br><span class="line">  <span class="keyword">if</span> ( v20 &gt;= a2 )</span><br><span class="line">  &#123;</span><br><span class="line">    v6 = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    v5 = v20++;</span><br><span class="line">    v6 = *(_BYTE *)(v5 + a1);</span><br><span class="line">  &#125;</span><br><span class="line">  v18 = v6;</span><br><span class="line">  <span class="keyword">if</span> ( v20 &gt;= a2 )</span><br><span class="line">  &#123;</span><br><span class="line">    v8 = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    v7 = v20++;</span><br><span class="line">    v8 = *(_BYTE *)(v7 + a1);</span><br><span class="line">  &#125;</span><br><span class="line">  v9 = v8;</span><br><span class="line">  v10 = v19;</span><br><span class="line">  v11 = v19 + <span class="number">1</span>;</span><br><span class="line">  a3[v10] = ((v17 &gt;&gt; <span class="number">2</span>) &amp; <span class="number">0x3F</span>) + <span class="number">61</span>;</span><br><span class="line">  v12 = v11++;</span><br><span class="line">  a3[v12] = ((((v18 &amp; <span class="number">0xFF</span>) &gt;&gt; <span class="number">4</span>) | <span class="number">16</span> * v17) &amp; <span class="number">0x3F</span>) + <span class="number">61</span>;</span><br><span class="line">  a3[v11] = ((((v9 &amp; <span class="number">0xFF</span>) &gt;&gt; <span class="number">6</span>) | <span class="number">4</span> * v18) &amp; <span class="number">0x3F</span>) + <span class="number">61</span>;</span><br><span class="line">  v13 = v11 + <span class="number">1</span>;</span><br><span class="line">  v19 = v11 + <span class="number">2</span>;</span><br><span class="line">  a3[v13] = (v9 &amp; <span class="number">0x3F</span>) + <span class="number">61</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ( a2 % <span class="number">3</span> == <span class="number">1</span> )</span><br><span class="line">&#123;</span><br><span class="line">  a3[--v19] = <span class="number">61</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> ( a2 % <span class="number">3</span> != <span class="number">2</span> )</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">goto</span> LABEL_15;</span><br><span class="line">&#125;</span><br><span class="line">a3[v19 - <span class="number">1</span>] = <span class="number">61</span>;</span><br></pre></td></tr></table></figure><p>将每一位减少61后映射到base64的字符串上就可以得到base64结果</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">str</span> = <span class="string">&#x27;Z`TzzTrD|fQP[_VVL|yneURyUmFklVJgLasJroZpHRxIUlH\\vZE&#x27;</span> <span class="comment"># 注意转义字符</span></span><br><span class="line">base = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="built_in">map</span> = <span class="string">&#x27;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&#x27;</span></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">    base += <span class="built_in">map</span>[<span class="built_in">ord</span>(c) - <span class="number">61</span>]</span><br><span class="line"><span class="built_in">print</span> (base)</span><br><span class="line"><span class="comment"># base = &#x27;djX99X1H/pUTeiZZP/8xoYV8YwJuvZNqPk2N1ydzLV7MYvLf5dI&#x27;</span></span><br><span class="line"><span class="comment"># 最后再补充一个 &#x27;=&#x27; 即可</span></span><br></pre></td></tr></table></figure><p>破解完这个函数后再查看上两个函数</p><p>根据调用判断第一个函数为第二个函数提供密钥，这个应该是固定结果，动态调试即可得到</p><p>查看第二个函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; a3; ++i ) &#123;</span><br><span class="line">  v7 = (<span class="keyword">unsigned</span> __int8)(v7 + <span class="number">1</span>);</span><br><span class="line">  v3 = *(_DWORD *)(<span class="number">4L</span>L * v7 + v9);</span><br><span class="line">  v8 = (<span class="keyword">unsigned</span> __int8)(v8 + v3);</span><br><span class="line">  v4 = *(_DWORD *)(<span class="number">4L</span>L * v8 + v9);</span><br><span class="line">  *(_DWORD *)(v9 + <span class="number">4L</span>L * v7) = v4;</span><br><span class="line">  *(_DWORD *)(v9 + <span class="number">4L</span>L * v8) = v3;</span><br><span class="line">  *(_BYTE *)(i + a2) ^= *(_BYTE *)(<span class="number">4L</span>L * (<span class="keyword">unsigned</span> __int8)(v3 + v4) + v9);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这对输入的每一位做了个异或运算，异或的数字也是固定的，直接进行动态调试即可（根据经验猜测是RC4或者与其类似）</p><p>根据base64的位数得知flag最多有39位</p><p>进行动态调试</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br></pre></td><td class="code"><pre><span class="line">gdb-peda$ start</span><br><span class="line">gdb-peda$ c</span><br><span class="line">Continuing.</span><br><span class="line">please input your flag:flag&#123;abcdefghijklmnopqrstuvwxyz0123456&#125;</span><br><span class="line">[----------------------------------registers-----------------------------------]</span><br><span class="line">RAX: 0x27 (&quot;&#39;&quot;)</span><br><span class="line">RBX: 0x0</span><br><span class="line">RCX: 0x0</span><br><span class="line">RDX: 0x7ffffffed9c0 (&quot;flag&#123;abcdefghijklmnopqrstuvwxyz0123456&#125;&quot;)</span><br><span class="line">RSI: 0x7ffffffed9b0 --&gt; 0x4010202030302010</span><br><span class="line">RDI: 0x7ffffffed9e0 --&gt; 0x7d363534333231 (&#39;123456&#125;&#39;)</span><br><span class="line">RBP: 0x7ffffffeded0 --&gt; 0x400c80 --&gt; 0x41ff894156415741</span><br><span class="line">RSP: 0x7ffffffed590 --&gt; 0x0</span><br><span class="line">RIP: 0x400bbc --&gt; 0xfffaf08d8d48c289</span><br><span class="line">R8 : 0x0</span><br><span class="line">R9 : 0x0</span><br><span class="line">R10: 0x3</span><br><span class="line">R11: 0x7fffff18ee90 (&lt;__memset_avx2_unaligned_erms&gt;:    vmovd  xmm0,esi)</span><br><span class="line">R12: 0x4005c0 --&gt; 0x89485ed18949ed31</span><br><span class="line">R13: 0x7ffffffedfb0 --&gt; 0x1</span><br><span class="line">R14: 0x0</span><br><span class="line">R15: 0x0</span><br><span class="line">EFLAGS: 0x206 (carry PARITY adjust zero sign trap INTERRUPT direction overflow)</span><br><span class="line">[-------------------------------------code-------------------------------------]</span><br><span class="line">   0x400bad:    lea    rax,[rbp-0x510]</span><br><span class="line">   0x400bb4:    mov    rdi,rax</span><br><span class="line">   0x400bb7:    call   0x400550 &lt;strlen@plt&gt;</span><br><span class="line">&#x3D;&gt; 0x400bbc:    mov    edx,eax</span><br><span class="line">   0x400bbe:    lea    rcx,[rbp-0x510]</span><br><span class="line">   0x400bc5:    lea    rax,[rbp-0x930]</span><br><span class="line">   0x400bcc:    mov    rsi,rcx</span><br><span class="line">   0x400bcf:    mov    rdi,rax</span><br><span class="line">[------------------------------------stack-------------------------------------]</span><br><span class="line">0000| 0x7ffffffed590 --&gt; 0x0</span><br><span class="line">0008| 0x7ffffffed598 --&gt; 0x5f4f636d (&#39;mcO_&#39;)</span><br><span class="line">0016| 0x7ffffffed5a0 --&gt; 0x0</span><br><span class="line">0024| 0x7ffffffed5a8 --&gt; 0x31000000b0</span><br><span class="line">0032| 0x7ffffffed5b0 --&gt; 0x7000000075 (&#39;u&#39;)</span><br><span class="line">0040| 0x7ffffffed5b8 --&gt; 0xdf000000f8</span><br><span class="line">0048| 0x7ffffffed5c0 --&gt; 0x3c00000007</span><br><span class="line">0056| 0x7ffffffed5c8 --&gt; 0x7100000078 (&#39;x&#39;)</span><br><span class="line">[------------------------------------------------------------------------------]</span><br><span class="line">Legend: code, data, rodata, value</span><br><span class="line"></span><br><span class="line">Breakpoint 2, 0x0000000000400bbc in ?? ()</span><br><span class="line">gdb-peda$ x&#x2F;10x $rdx</span><br><span class="line">0x7ffffffed9c0: 0x6362617b67616c66      0x6b6a696867666564</span><br><span class="line">0x7ffffffed9d0: 0x737271706f6e6d6c      0x307a797877767574</span><br><span class="line">0x7ffffffed9e0: 0x007d363534333231      0x0000000000000000</span><br><span class="line">0x7ffffffed9f0: 0x0000000000000000      0x0000000000000000</span><br><span class="line">0x7ffffffeda00: 0x0000000000000000      0x0000000000000000</span><br><span class="line">gdb-peda$ c</span><br><span class="line">Continuing.</span><br><span class="line">[----------------------------------registers-----------------------------------]</span><br><span class="line">RAX: 0x7ffffffed5a0 --&gt; 0x1c00000027</span><br><span class="line">RBX: 0x0</span><br><span class="line">RCX: 0x138</span><br><span class="line">RDX: 0x1c</span><br><span class="line">RSI: 0x7d (&#39;&#125;&#39;)</span><br><span class="line">RDI: 0x7ffffffed5a0 --&gt; 0x1c00000027</span><br><span class="line">RBP: 0x7ffffffeded0 --&gt; 0x400c80 --&gt; 0x41ff894156415741</span><br><span class="line">RSP: 0x7ffffffed590 --&gt; 0x0</span><br><span class="line">RIP: 0x400bd7 --&gt; 0x48fffffaf0858d48</span><br><span class="line">R8 : 0x0</span><br><span class="line">R9 : 0x0</span><br><span class="line">R10: 0x3</span><br><span class="line">R11: 0x7fffff18ee90 (&lt;__memset_avx2_unaligned_erms&gt;:    vmovd  xmm0,esi)</span><br><span class="line">R12: 0x4005c0 --&gt; 0x89485ed18949ed31</span><br><span class="line">R13: 0x7ffffffedfb0 --&gt; 0x1</span><br><span class="line">R14: 0x0</span><br><span class="line">R15: 0x0</span><br><span class="line">EFLAGS: 0x246 (carry PARITY adjust ZERO sign trap INTERRUPT direction overflow)</span><br><span class="line">[-------------------------------------code-------------------------------------]</span><br><span class="line">   0x400bcc:    mov    rsi,rcx</span><br><span class="line">   0x400bcf:    mov    rdi,rax</span><br><span class="line">   0x400bd2:    call   0x4007db</span><br><span class="line">&#x3D;&gt; 0x400bd7:    lea    rax,[rbp-0x510]</span><br><span class="line">   0x400bde:    mov    rdi,rax</span><br><span class="line">   0x400be1:    call   0x400550 &lt;strlen@plt&gt;</span><br><span class="line">   0x400be6:    mov    esi,eax</span><br><span class="line">   0x400be8:    lea    rcx,[rbp-0x93c]</span><br><span class="line">[------------------------------------stack-------------------------------------]</span><br><span class="line">0000| 0x7ffffffed590 --&gt; 0x0</span><br><span class="line">0008| 0x7ffffffed598 --&gt; 0x5f4f636d (&#39;mcO_&#39;)</span><br><span class="line">0016| 0x7ffffffed5a0 --&gt; 0x1c00000027</span><br><span class="line">0024| 0x7ffffffed5a8 --&gt; 0x67000000b0</span><br><span class="line">0032| 0x7ffffffed5b0 --&gt; 0x4b000000b8</span><br><span class="line">0040| 0x7ffffffed5b8 --&gt; 0xe000000069</span><br><span class="line">0048| 0x7ffffffed5c0 --&gt; 0x3f000000b9</span><br><span class="line">0056| 0x7ffffffed5c8 --&gt; 0xc5000000ec</span><br><span class="line">[------------------------------------------------------------------------------]</span><br><span class="line">Legend: code, data, rodata, value</span><br><span class="line"></span><br><span class="line">Breakpoint 3, 0x0000000000400bd7 in ?? ()</span><br><span class="line">gdb-peda$ x&#x2F;10x 0x7ffffffed9c0</span><br><span class="line">0x7ffffffed9c0: 0xc6ad437df5fd3576      0xa862a26e0d237b16</span><br><span class="line">0x7ffffffed9d0: 0x2c84ae7c0c342488      0x5e656c6895cb5d7c</span><br><span class="line">0x7ffffffed9e0: 0x00e699b5d8f9689b      0x0000000000000000</span><br><span class="line">0x7ffffffed9f0: 0x0000000000000000      0x0000000000000000</span><br><span class="line">0x7ffffffeda00: 0x0000000000000000      0x0000000000000000</span><br></pre></td></tr></table></figure><p>将输入在函数执行前后两次的结果进行异或即可得到异或的数字，再与base64解码的结果进行异或即可，注意大小端问题</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> libnum <span class="keyword">import</span> n2s, s2n</span><br><span class="line"></span><br><span class="line">before = <span class="number">0x7d363534333231307a797877767574737271706f6e6d6c6b6a6968676665646362617b67616c66</span></span><br><span class="line">after = <span class="number">0xe699b5d8f9689b5e656c6895cb5d7c2c84ae7c0c342488a862a26e0d237b16c6ad437df5fd3576</span></span><br><span class="line">flag = <span class="string">b&quot;v5\xfd\xf5&#125;G\xfe\x95\x13z&amp;Y?\xff1\xa1\x85|c\x02n\xbd\x93j&gt;M\x8d\xd7&#x27;s-^\xccb\xf2\xdf\xe5\xd2&quot;</span>[::<span class="number">-1</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> (<span class="built_in">len</span>(flag))</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> (n2s(s2n(flag) ^ before ^ after)[::<span class="number">-1</span>])</span><br><span class="line"><span class="comment"># b&#x27;flag&#123;e10adc3949ba59abbe56e057f20f883e&#125;\x9b&#x27;</span></span><br></pre></td></tr></table></figure><p>得到flag</p><p><code>flag&#123;e10adc3949ba59abbe56e057f20f883e&#125;</code></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;平台：buuoj&lt;/p&gt;</summary>
    
    
    
    
    <category term="CTF" scheme="https://s0uthwood.github.io/tags/CTF/"/>
    
    <category term="Reverse" scheme="https://s0uthwood.github.io/tags/Reverse/"/>
    
  </entry>
  
  <entry>
    <title>HGAME2021 week3 FAKE writeup</title>
    <link href="https://s0uthwood.github.io/2021/02/28/HGAME2021-week3-FAKE-writeup/"/>
    <id>https://s0uthwood.github.io/2021/02/28/HGAME2021-week3-FAKE-writeup/</id>
    <published>2021-02-28T07:31:36.000Z</published>
    <updated>2021-02-28T07:53:33.142Z</updated>
    
    <content type="html"><![CDATA[<p>from HGAME2021</p><a id="more"></a><h1 id="step-0：错误的做法"><a href="#step-0：错误的做法" class="headerlink" title="step 0：错误的做法"></a>step 0：错误的做法</h1><p>拖入ida</p><p>进入主函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">__int64 __usercall main@&lt;rax&gt;(<span class="keyword">char</span> **a1@&lt;rsi&gt;, <span class="keyword">char</span> **a2@&lt;rdx&gt;, __int64 a3@&lt;rbp&gt;)</span><br><span class="line">&#123;</span><br><span class="line">  __int64 v3; <span class="comment">// rdx</span></span><br><span class="line">  __int64 v4; <span class="comment">// rdx</span></span><br><span class="line">  __int64 v6; <span class="comment">// [rsp-D8h] [rbp-D8h]</span></span><br><span class="line">  __int64 flag; <span class="comment">// [rsp-48h] [rbp-48h]</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> i; <span class="comment">// [rsp-Ch] [rbp-Ch]</span></span><br><span class="line">  __int64 v9; <span class="comment">// [rsp-8h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  __asm &#123; endbr64 &#125;</span><br><span class="line">  v9 = a3;</span><br><span class="line">  print(<span class="string">&quot;Give me your true flag:&quot;</span>, a1, a2);</span><br><span class="line">  scan(<span class="string">&quot;%50s&quot;</span>, &amp;flag);</span><br><span class="line">  <span class="keyword">if</span> ( length(&amp;flag) != <span class="number">36</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    print(<span class="string">&quot;Wrong length.&quot;</span>, &amp;flag, v3);</span><br><span class="line">    sub_401120();</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">35</span>; ++i )</span><br><span class="line">    *((_DWORD *)&amp;v9 + i - <span class="number">52</span>) = *((<span class="keyword">char</span> *)&amp;v9 + i - <span class="number">64</span>);<span class="comment">// v9 - 64 = flag, flag往前偏移12个字节</span></span><br><span class="line">  <span class="keyword">if</span> ( (<span class="keyword">unsigned</span> <span class="keyword">int</span>)sub_401216((__int64)&amp;v6) == <span class="number">1</span> )<span class="comment">// 动态调试结果显示，v6就是输入的flag</span></span><br><span class="line">    print(<span class="string">&quot;Ohhhhhhhhhh!&quot;</span>, &amp;flag, v4);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    print(<span class="string">&quot;Wrong flag. Keep looking!&quot;</span>, &amp;flag, v4);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现对于输入的flag，进行一个函数的判断</p><p>进入函数，发现一串如下的代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">v2 = <span class="number">-37</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">4</span>)</span><br><span class="line">   + <span class="number">-58</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">132</span>)</span><br><span class="line">   + <span class="number">17</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">28</span>)</span><br><span class="line">   + <span class="number">26</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">124</span>)</span><br><span class="line">   + <span class="number">-20</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">48</span>)</span><br><span class="line">   + <span class="number">-56</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">104</span>)</span><br><span class="line">   + <span class="number">70</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">76</span>)</span><br><span class="line">   + <span class="number">29</span> * *(_DWORD *)*(v1 - <span class="number">3</span>)</span><br><span class="line">   + <span class="number">-42</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">68</span>)</span><br><span class="line">   + <span class="number">67</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">140</span>)</span><br><span class="line">   + <span class="number">11</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">24</span>)</span><br><span class="line">   + <span class="number">66</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">60</span>)</span><br><span class="line">   + <span class="number">53</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">44</span>)</span><br><span class="line">   - <span class="number">53</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">12</span>)</span><br><span class="line">   + <span class="number">63</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">128</span>)</span><br><span class="line">   - <span class="number">65</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">84</span>)</span><br><span class="line">   + <span class="number">9</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">36</span>)</span><br><span class="line">   - <span class="number">50</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">112</span>)</span><br><span class="line">   - <span class="number">48</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">32</span>)</span><br><span class="line">   - <span class="number">70</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">88</span>)</span><br><span class="line">   + <span class="number">48</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">52</span>);</span><br><span class="line"><span class="keyword">if</span> ( <span class="number">-35</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">8</span>)</span><br><span class="line">   + <span class="number">89</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">96</span>)</span><br><span class="line">   + <span class="number">-49</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">64</span>)</span><br><span class="line">   + <span class="number">-19</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">16</span>)</span><br><span class="line">   + <span class="number">88</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">100</span>)</span><br><span class="line">   + <span class="number">-7</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">120</span>)</span><br><span class="line">   + *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">108</span>)</span><br><span class="line">   + <span class="number">-33</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">80</span>)</span><br><span class="line">   + <span class="number">-23</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">92</span>)</span><br><span class="line">   + <span class="number">90</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">56</span>)</span><br><span class="line">   + <span class="number">-99</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">40</span>)</span><br><span class="line">   + <span class="number">30</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">116</span>)</span><br><span class="line">   + v2</span><br><span class="line">   - <span class="number">68</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">136</span>)</span><br><span class="line">   - <span class="number">14</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">20</span>)</span><br><span class="line">   - <span class="number">67</span> * *(_DWORD *)(*(v1 - <span class="number">3</span>) + <span class="number">72</span>) != <span class="number">-874</span> )</span><br><span class="line">  <span class="keyword">goto</span> LABEL_42;</span><br></pre></td></tr></table></figure><p>用gdb调试看了一下，发现 <code>*(v1 - 3) + 4 * i</code> 就对应 <code>input[i]</code></p><p>总共有36个方程，使用z3求解</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">s = Solver()</span><br><span class="line"></span><br><span class="line">f = [ Int(<span class="string">&#x27;f%d&#x27;</span> % i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">36</span>) ]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">36</span>):</span><br><span class="line">    s.add(f[i] &gt; <span class="number">0x20</span>)</span><br><span class="line">    s.add(f[i] &lt; <span class="number">0x7f</span>)</span><br><span class="line"></span><br><span class="line">s.add(f[ <span class="number">0</span>] == <span class="built_in">ord</span>(<span class="string">&#x27;h&#x27;</span>))</span><br><span class="line">s.add(f[ <span class="number">1</span>] == <span class="built_in">ord</span>(<span class="string">&#x27;g&#x27;</span>))</span><br><span class="line">s.add(f[ <span class="number">2</span>] == <span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>))</span><br><span class="line">s.add(f[ <span class="number">3</span>] == <span class="built_in">ord</span>(<span class="string">&#x27;m&#x27;</span>))</span><br><span class="line">s.add(f[ <span class="number">4</span>] == <span class="built_in">ord</span>(<span class="string">&#x27;e&#x27;</span>))</span><br><span class="line">s.add(f[ <span class="number">5</span>] == <span class="built_in">ord</span>(<span class="string">&#x27;&#123;&#x27;</span>))</span><br><span class="line">s.add(f[<span class="number">35</span>] == <span class="built_in">ord</span>(<span class="string">&#x27;&#125;&#x27;</span>))</span><br><span class="line"></span><br><span class="line">s.add(<span class="number">-37</span> * f[<span class="number">1</span>] + <span class="number">-58</span> * f[<span class="number">33</span>] + <span class="number">17</span> * f[<span class="number">7</span>] + <span class="number">26</span> * f[<span class="number">31</span>] + <span class="number">-20</span> * f[<span class="number">12</span>] + <span class="number">-56</span> * f[<span class="number">26</span>] + <span class="number">70</span> * f[<span class="number">19</span>] + <span class="number">29</span> * f[<span class="number">0</span>] + <span class="number">-42</span> * f[<span class="number">17</span>] + <span class="number">67</span> * f[<span class="number">35</span>] + <span class="number">11</span> * f[<span class="number">6</span>] + <span class="number">66</span> * f[<span class="number">15</span>] + <span class="number">53</span> * f[<span class="number">11</span>] - <span class="number">53</span> * f[<span class="number">3</span>] + <span class="number">63</span> * f[<span class="number">32</span>] - <span class="number">65</span> * f[<span class="number">21</span>] + <span class="number">9</span> * f[<span class="number">9</span>] - <span class="number">50</span> * f[<span class="number">28</span>] - <span class="number">48</span> * f[<span class="number">8</span>] - <span class="number">70</span> * f[<span class="number">22</span>] + <span class="number">48</span> * f[<span class="number">13</span>] <span class="number">-35</span> * f[<span class="number">2</span>] + <span class="number">89</span> * f[<span class="number">24</span>] + <span class="number">-49</span> * f[<span class="number">16</span>] + <span class="number">-19</span> * f[<span class="number">4</span>] + <span class="number">88</span> * f[<span class="number">25</span>] + <span class="number">-7</span> * f[<span class="number">30</span>] + f[<span class="number">27</span>] + <span class="number">-33</span> * f[<span class="number">20</span>] + <span class="number">-23</span> * f[<span class="number">23</span>] + <span class="number">90</span> * f[<span class="number">14</span>] + <span class="number">-99</span> * f[<span class="number">10</span>] + <span class="number">30</span> * f[<span class="number">29</span>] - <span class="number">68</span> * f[<span class="number">34</span>] - <span class="number">14</span> * f[<span class="number">5</span>] - <span class="number">67</span> * f[<span class="number">18</span>] == <span class="number">-874</span>)</span><br><span class="line">s.add(<span class="number">64</span> * f[<span class="number">18</span>] + <span class="number">-57</span> * f[<span class="number">15</span>] + <span class="number">90</span> * f[<span class="number">21</span>] + <span class="number">57</span> * f[<span class="number">4</span>] + <span class="number">-63</span> * f[<span class="number">13</span>] + <span class="number">13</span> * f[<span class="number">2</span>] + <span class="number">10</span> * f[<span class="number">35</span>] + <span class="number">-56</span> * f[<span class="number">8</span>] + <span class="number">56</span> * f[<span class="number">31</span>] + <span class="number">-40</span> * f[<span class="number">0</span>] + <span class="number">-91</span> * f[<span class="number">27</span>] + <span class="number">57</span> * f[<span class="number">23</span>] + <span class="number">62</span> * f[<span class="number">10</span>] + <span class="number">90</span> * f[<span class="number">9</span>] + <span class="number">-92</span> * f[<span class="number">17</span>] + <span class="number">-5</span> * f[<span class="number">29</span>] + <span class="number">60</span> * f[<span class="number">22</span>] - <span class="number">13</span> * f[<span class="number">12</span>] + <span class="number">5</span> * f[<span class="number">28</span>] - <span class="number">63</span> * f[<span class="number">32</span>] + <span class="number">5</span> * f[<span class="number">26</span>] <span class="number">-41</span> * f[<span class="number">25</span>] + <span class="number">-47</span> * f[<span class="number">16</span>] + f[<span class="number">14</span>] + <span class="number">67</span> * f[<span class="number">34</span>] + <span class="number">-20</span> * f[<span class="number">1</span>] + <span class="number">47</span> * f[<span class="number">33</span>] + <span class="number">-79</span> * f[<span class="number">19</span>] + <span class="number">-17</span> * f[<span class="number">6</span>] + <span class="number">30</span> * f[<span class="number">5</span>] + <span class="number">70</span> * f[<span class="number">3</span>] + <span class="number">41</span> * f[<span class="number">7</span>] + <span class="number">71</span> * f[<span class="number">24</span>] + <span class="number">15</span> * f[<span class="number">11</span>] + <span class="number">42</span> * f[<span class="number">20</span>] == <span class="number">21163</span>)</span><br><span class="line">s.add(<span class="number">28</span> * f[<span class="number">13</span>] + <span class="number">77</span> * f[<span class="number">19</span>] + <span class="number">2</span> * f[<span class="number">7</span>] + <span class="number">-53</span> * f[<span class="number">10</span>] + <span class="number">-61</span> * f[<span class="number">4</span>] + <span class="number">12</span> * f[<span class="number">17</span>] + <span class="number">93</span> * f[<span class="number">11</span>] + <span class="number">-13</span> * f[<span class="number">32</span>] + <span class="number">53</span> * f[<span class="number">9</span>] + <span class="number">29</span> * f[<span class="number">16</span>] + <span class="number">-77</span> * f[<span class="number">14</span>] + <span class="number">77</span> * f[<span class="number">33</span>] + <span class="number">74</span> * f[<span class="number">34</span>] + <span class="number">-100</span> * f[<span class="number">30</span>] - <span class="number">99</span> * f[<span class="number">27</span>] - <span class="number">87</span> * f[<span class="number">25</span>] + <span class="number">36</span> * f[<span class="number">6</span>] + <span class="number">59</span> * f[<span class="number">3</span>] + <span class="number">81</span> * f[<span class="number">21</span>] + <span class="number">28</span> * f[<span class="number">28</span>] + <span class="number">7</span> * f[<span class="number">0</span>] + <span class="number">73</span> * f[<span class="number">26</span>] + <span class="number">50</span> * f[<span class="number">20</span>] + <span class="number">88</span> * f[<span class="number">35</span>] + <span class="number">49</span> * f[<span class="number">1</span>] + <span class="number">34</span> * f[<span class="number">23</span>] + <span class="number">58</span> * f[<span class="number">29</span>] + <span class="number">69</span> * f[<span class="number">24</span>] + <span class="number">54</span> * f[<span class="number">22</span>] - <span class="number">5</span> * f[<span class="number">31</span>] - <span class="number">41</span> * f[<span class="number">2</span>] + <span class="number">5</span> * f[<span class="number">18</span>] - <span class="number">93</span> * f[<span class="number">15</span>] + <span class="number">10</span> * f[<span class="number">12</span>] - <span class="number">27</span> * f[<span class="number">8</span>] + <span class="number">24</span> * f[<span class="number">5</span>] == <span class="number">45615</span>)</span><br><span class="line">s.add(<span class="number">-46</span> * f[<span class="number">20</span>] + <span class="number">-61</span> * f[<span class="number">6</span>] + <span class="number">-46</span> * f[<span class="number">19</span>] + <span class="number">51</span> * f[<span class="number">4</span>] + <span class="number">-76</span> * f[<span class="number">34</span>] + <span class="number">-17</span> * f[<span class="number">31</span>] + <span class="number">8</span> * f[<span class="number">28</span>] + <span class="number">94</span> * f[<span class="number">30</span>] + <span class="number">23</span> * f[<span class="number">8</span>] + <span class="number">-61</span> * f[<span class="number">29</span>] + <span class="number">-52</span> * f[<span class="number">35</span>] + <span class="number">81</span> * f[<span class="number">33</span>] + <span class="number">-44</span> * f[<span class="number">1</span>] + <span class="number">75</span> * f[<span class="number">32</span>] + <span class="number">-9</span> * f[<span class="number">24</span>] - <span class="number">96</span> * f[<span class="number">12</span>] + <span class="number">5</span> * f[<span class="number">26</span>] + <span class="number">2</span> * f[<span class="number">25</span>] + <span class="number">31</span> * f[<span class="number">22</span>] + <span class="number">43</span> * f[<span class="number">15</span>] - <span class="number">2</span> * f[<span class="number">0</span>] - <span class="number">17</span> * f[<span class="number">23</span>] + <span class="number">53</span> * f[<span class="number">21</span>] + <span class="number">51</span> * f[<span class="number">13</span>] + <span class="number">58</span> * f[<span class="number">17</span>] + <span class="number">-52</span> * f[<span class="number">10</span>] + <span class="number">-77</span> * f[<span class="number">7</span>] + <span class="number">86</span> * f[<span class="number">11</span>] + <span class="number">-77</span> * f[<span class="number">16</span>] + <span class="number">-100</span> * f[<span class="number">18</span>] + <span class="number">-61</span> * f[<span class="number">2</span>] - <span class="number">92</span> * f[<span class="number">14</span>] + <span class="number">13</span> * f[<span class="number">5</span>] - <span class="number">99</span> * f[<span class="number">3</span>] + <span class="number">63</span> * f[<span class="number">27</span>] + <span class="number">8</span> * f[<span class="number">9</span>] == <span class="number">-37017</span>)</span><br><span class="line">s.add(<span class="number">9</span> * f[<span class="number">16</span>] + <span class="number">59</span> * f[<span class="number">3</span>] + <span class="number">-29</span> * f[<span class="number">14</span>] + <span class="number">32</span> * f[<span class="number">18</span>] + <span class="number">-69</span> * f[<span class="number">26</span>] + <span class="number">-81</span> * f[<span class="number">33</span>] + <span class="number">-69</span> * f[<span class="number">9</span>] + <span class="number">60</span> * f[<span class="number">19</span>] + <span class="number">-35</span> * f[<span class="number">21</span>] + <span class="number">40</span> * f[<span class="number">11</span>] + <span class="number">-44</span> * f[<span class="number">7</span>] + <span class="number">78</span> * f[<span class="number">22</span>] + <span class="number">68</span> * f[<span class="number">28</span>] + <span class="number">70</span> * f[<span class="number">29</span>] + <span class="number">3</span> * f[<span class="number">2</span>] + <span class="number">61</span> * f[<span class="number">6</span>] + <span class="number">37</span> * f[<span class="number">35</span>] - <span class="number">36</span> * f[<span class="number">27</span>] + <span class="number">40</span> * f[<span class="number">34</span>] + <span class="number">23</span> * f[<span class="number">17</span>] + <span class="number">81</span> * f[<span class="number">12</span>] - <span class="number">25</span> * f[<span class="number">4</span>] + <span class="number">91</span> * f[<span class="number">0</span>] + <span class="number">-43</span> * f[<span class="number">32</span>] + <span class="number">17</span> * f[<span class="number">13</span>] + <span class="number">9</span> * f[<span class="number">15</span>] + f[<span class="number">1</span>] * <span class="number">64</span>  + <span class="number">69</span> * f[<span class="number">30</span>] - <span class="number">9</span> * f[<span class="number">23</span>] - <span class="number">75</span> * f[<span class="number">25</span>] - <span class="number">62</span> * f[<span class="number">20</span>] + <span class="number">56</span> * f[<span class="number">31</span>] + <span class="number">96</span> * f[<span class="number">5</span>] + <span class="number">69</span> * f[<span class="number">8</span>] + <span class="number">80</span> * f[<span class="number">10</span>] + <span class="number">99</span> * f[<span class="number">24</span>] == <span class="number">72092</span>)</span><br><span class="line">s.add(<span class="number">-79</span> * f[<span class="number">26</span>] + <span class="number">-20</span> * f[<span class="number">8</span>] + <span class="number">90</span> * f[<span class="number">6</span>] + <span class="number">6</span> * f[<span class="number">30</span>] + <span class="number">47</span> * f[<span class="number">16</span>] + <span class="number">50</span> * f[<span class="number">20</span>] + <span class="number">51</span> * f[<span class="number">23</span>] + <span class="number">-13</span> * f[<span class="number">33</span>] + <span class="number">-86</span> * f[<span class="number">13</span>] + <span class="number">32</span> * f[<span class="number">31</span>] + <span class="number">-89</span> * f[<span class="number">2</span>] + <span class="number">79</span> * f[<span class="number">11</span>] + <span class="number">-41</span> * f[<span class="number">7</span>] + <span class="number">-56</span> * f[<span class="number">14</span>] + <span class="number">54</span> * f[<span class="number">19</span>] - <span class="number">96</span> * f[<span class="number">34</span>] - <span class="number">34</span> * f[<span class="number">25</span>] - <span class="number">64</span> * f[<span class="number">4</span>] - <span class="number">36</span> * f[<span class="number">35</span>] + <span class="number">48</span> * f[<span class="number">10</span>] - <span class="number">39</span> * f[<span class="number">5</span>] + <span class="number">51</span> * f[<span class="number">32</span>] + <span class="number">-63</span> * f[<span class="number">21</span>] + <span class="number">78</span> * f[<span class="number">24</span>] + <span class="number">-76</span> * f[<span class="number">28</span>] + <span class="number">48</span> * f[<span class="number">18</span>] + <span class="number">93</span> * f[<span class="number">1</span>] + <span class="number">66</span> * f[<span class="number">29</span>] + <span class="number">-86</span> * f[<span class="number">27</span>] + <span class="number">-3</span> * f[<span class="number">0</span>] + <span class="number">20</span> * f[<span class="number">3</span>] + <span class="number">61</span> * f[<span class="number">17</span>] - <span class="number">56</span> * f[<span class="number">15</span>] - <span class="number">97</span> * f[<span class="number">22</span>] + <span class="number">96</span> * f[<span class="number">9</span>] - <span class="number">61</span> * f[<span class="number">12</span>] == <span class="number">-27809</span>)</span><br><span class="line">s.add(<span class="number">-74</span> * f[<span class="number">28</span>] + <span class="number">76</span> * f[<span class="number">33</span>] + <span class="number">91</span> * f[<span class="number">5</span>] + <span class="number">83</span> * f[<span class="number">19</span>] + <span class="number">99</span> * f[<span class="number">32</span>] + <span class="number">98</span> * f[<span class="number">7</span>] + <span class="number">22</span> * f[<span class="number">34</span>] + <span class="number">83</span> * f[<span class="number">13</span>] + <span class="number">-13</span> * f[<span class="number">0</span>] + <span class="number">-66</span> * f[<span class="number">11</span>] + <span class="number">-25</span> * f[<span class="number">2</span>] + <span class="number">-9</span> * f[<span class="number">31</span>] + <span class="number">35</span> * f[<span class="number">25</span>] + <span class="number">31</span> * f[<span class="number">18</span>] - <span class="number">95</span> * f[<span class="number">21</span>] + <span class="number">37</span> * f[<span class="number">22</span>] - <span class="number">74</span> * f[<span class="number">16</span>] + <span class="number">17</span> * f[<span class="number">12</span>] - <span class="number">27</span> * f[<span class="number">24</span>] + <span class="number">11</span> * f[<span class="number">3</span>] + <span class="number">83</span> * f[<span class="number">9</span>] + <span class="number">-44</span> * f[<span class="number">35</span>] + <span class="number">-26</span> * f[<span class="number">30</span>] + <span class="number">-36</span> * f[<span class="number">4</span>] + <span class="number">64</span> * f[<span class="number">6</span>] + <span class="number">-65</span> * f[<span class="number">26</span>] + <span class="number">-46</span> * f[<span class="number">8</span>] + <span class="number">-33</span> * f[<span class="number">14</span>] + <span class="number">-45</span> * f[<span class="number">1</span>] + <span class="number">-32</span> * f[<span class="number">23</span>] - <span class="number">60</span> * f[<span class="number">27</span>] + <span class="number">77</span> * f[<span class="number">20</span>] + <span class="number">96</span> * f[<span class="number">15</span>] - <span class="number">23</span> * f[<span class="number">10</span>] - <span class="number">5</span> * f[<span class="number">29</span>] - <span class="number">73</span> * f[<span class="number">17</span>] == <span class="number">9604</span>)</span><br><span class="line">s.add(<span class="number">-57</span> * f[<span class="number">31</span>] + <span class="number">32</span> * f[<span class="number">25</span>] + <span class="number">55</span> * f[<span class="number">16</span>] + <span class="number">42</span> * f[<span class="number">24</span>] + <span class="number">-93</span> * f[<span class="number">26</span>] + <span class="number">69</span> * f[<span class="number">17</span>] + <span class="number">84</span> * f[<span class="number">12</span>] + <span class="number">9</span> * f[<span class="number">23</span>] + <span class="number">-34</span> * f[<span class="number">32</span>] + <span class="number">-84</span> * f[<span class="number">2</span>] + <span class="number">-18</span> * f[<span class="number">7</span>] + <span class="number">60</span> * f[<span class="number">29</span>] - <span class="number">99</span> * f[<span class="number">30</span>] - f[<span class="number">0</span>] + <span class="number">24</span> * f[<span class="number">21</span>] - <span class="number">36</span> * f[<span class="number">4</span>] + <span class="number">9</span> * f[<span class="number">35</span>] + <span class="number">89</span> * f[<span class="number">15</span>] + <span class="number">72</span> * f[<span class="number">19</span>] + <span class="number">86</span> * f[<span class="number">13</span>] - <span class="number">8</span> * f[<span class="number">28</span>] + <span class="number">-79</span> * f[<span class="number">10</span>] + <span class="number">82</span> * f[<span class="number">8</span>] + <span class="number">-88</span> * f[<span class="number">3</span>] + <span class="number">-26</span> * f[<span class="number">11</span>] + <span class="number">76</span> * f[<span class="number">1</span>] + <span class="number">69</span> * f[<span class="number">27</span>] + <span class="number">-51</span> * f[<span class="number">14</span>] + <span class="number">78</span> * f[<span class="number">33</span>] + <span class="number">-11</span> * f[<span class="number">18</span>] + <span class="number">-83</span> * f[<span class="number">5</span>] + <span class="number">70</span> * f[<span class="number">20</span>] + <span class="number">-36</span> * f[<span class="number">22</span>] + <span class="number">64</span> * f[<span class="number">6</span>] + <span class="number">19</span> * f[<span class="number">9</span>] + <span class="number">71</span> * f[<span class="number">34</span>] == <span class="number">25498</span>)</span><br><span class="line">s.add(<span class="number">-80</span> * f[<span class="number">15</span>] + <span class="number">-54</span> * f[<span class="number">2</span>] + <span class="number">75</span> * f[<span class="number">6</span>] + <span class="number">-31</span> * f[<span class="number">17</span>] + <span class="number">29</span> * f[<span class="number">12</span>] + <span class="number">28</span> * f[<span class="number">28</span>] + <span class="number">57</span> * f[<span class="number">14</span>] + <span class="number">-68</span> * f[<span class="number">4</span>] + <span class="number">86</span> * f[<span class="number">0</span>] + <span class="number">82</span> * f[<span class="number">13</span>] + <span class="number">-20</span> * f[<span class="number">11</span>] + <span class="number">-18</span> * f[<span class="number">23</span>] + <span class="number">88</span> * f[<span class="number">18</span>] + <span class="number">-57</span> * f[<span class="number">25</span>] + <span class="number">94</span> * f[<span class="number">9</span>] - <span class="number">51</span> * f[<span class="number">5</span>] - <span class="number">58</span> * f[<span class="number">7</span>] - <span class="number">2</span> * f[<span class="number">3</span>] + <span class="number">94</span> * f[<span class="number">31</span>] - <span class="number">6</span> * f[<span class="number">21</span>] - <span class="number">59</span> * f[<span class="number">19</span>] + <span class="number">-70</span> * f[<span class="number">8</span>] + <span class="number">50</span> * f[<span class="number">30</span>] + <span class="number">26</span> * f[<span class="number">16</span>] + <span class="number">65</span> * f[<span class="number">32</span>] + <span class="number">-62</span> * f[<span class="number">34</span>] + <span class="number">79</span> * f[<span class="number">10</span>] + <span class="number">-82</span> * f[<span class="number">27</span>] + <span class="number">-16</span> * f[<span class="number">29</span>] + <span class="number">-60</span> * f[<span class="number">1</span>] + <span class="number">25</span> * f[<span class="number">20</span>] - <span class="number">66</span> * f[<span class="number">35</span>] - <span class="number">62</span> * f[<span class="number">24</span>] + <span class="number">89</span> * f[<span class="number">26</span>] + <span class="number">12</span> * f[<span class="number">22</span>] - <span class="number">86</span> * f[<span class="number">33</span>] == <span class="number">-10472</span>)</span><br><span class="line">s.add(<span class="number">-91</span> * f[<span class="number">20</span>] + <span class="number">-11</span> * f[<span class="number">17</span>] + <span class="number">38</span> * f[<span class="number">3</span>] + <span class="number">53</span> * f[<span class="number">35</span>] + <span class="number">31</span> * f[<span class="number">5</span>] + <span class="number">-75</span> * f[<span class="number">22</span>] + <span class="number">14</span> * f[<span class="number">26</span>] + <span class="number">-7</span> * f[<span class="number">24</span>] + <span class="number">-7</span> * f[<span class="number">31</span>] + <span class="number">77</span> * f[<span class="number">23</span>] + <span class="number">-46</span> * f[<span class="number">6</span>] + <span class="number">47</span> * f[<span class="number">19</span>] + <span class="number">48</span> * f[<span class="number">33</span>] + <span class="number">74</span> * f[ <span class="number">1</span>] - <span class="number">24</span> * f[<span class="number">30</span>] + <span class="number">87</span> * f[<span class="number">9</span>] + <span class="number">33</span> * f[<span class="number">11</span>] + <span class="number">86</span> * f[<span class="number">28</span>] + <span class="number">37</span> * f[<span class="number">21</span>] - <span class="number">97</span> * f[<span class="number">27</span>] - <span class="number">30</span> * f[<span class="number">13</span>] + <span class="number">31</span> * f[<span class="number">14</span>] + <span class="number">-11</span> * f[<span class="number">2</span>] + <span class="number">30</span> * f[<span class="number">10</span>] + <span class="number">72</span> * f[<span class="number">8</span>] + <span class="number">72</span> * f[<span class="number">29</span>] + <span class="number">-49</span> * f[<span class="number">34</span>] + <span class="number">83</span> * f[<span class="number">18</span>] + <span class="number">-63</span> * f[<span class="number">0</span>] + <span class="number">-88</span> * f[<span class="number">4</span>] - <span class="number">59</span> * f[<span class="number">16</span>] + <span class="number">5</span> * f[<span class="number">7</span>] - <span class="number">3</span> * f[<span class="number">15</span>] + <span class="number">13</span> * f[<span class="number">12</span>] - <span class="number">73</span> * f[<span class="number">32</span>] - <span class="number">56</span> * f[<span class="number">25</span>] == <span class="number">6560</span>)</span><br><span class="line">s.add(<span class="number">-74</span> * f[<span class="number">20</span>] + <span class="number">-97</span> * f[<span class="number">6</span>] + <span class="number">14</span> * f[<span class="number">15</span>] + <span class="number">77</span> * f[<span class="number">30</span>] + <span class="number">-66</span> * f[<span class="number">28</span>] + <span class="number">-89</span> * f[<span class="number">12</span>] + <span class="number">-95</span> * f[<span class="number">13</span>] + <span class="number">-70</span> * f[<span class="number">10</span>] + <span class="number">-27</span> * f[<span class="number">1</span>] + <span class="number">-85</span> * f[<span class="number">22</span>] + <span class="number">-66</span> * f[<span class="number">34</span>] + <span class="number">-91</span> * f[<span class="number">4</span>] - <span class="number">5</span> * f[<span class="number">19</span>] - <span class="number">94</span> * f[<span class="number">29</span>] - <span class="number">24</span> * f[<span class="number">35</span>] - <span class="number">7</span> * f[<span class="number">32</span>] + <span class="number">63</span> * f[<span class="number">5</span>] - <span class="number">49</span> * f[<span class="number">14</span>] - <span class="number">96</span> * f[<span class="number">18</span>] - <span class="number">100</span> * f[<span class="number">7</span>] + <span class="number">81</span> * f[<span class="number">16</span>] + <span class="number">59</span> * f[<span class="number">23</span>] + <span class="number">-81</span> * f[<span class="number">8</span>] + <span class="number">49</span> * f[<span class="number">0</span>] + <span class="number">-52</span> * f[<span class="number">3</span>] + <span class="number">84</span> * f[<span class="number">2</span>] + <span class="number">26</span> * f[<span class="number">25</span>] + <span class="number">70</span> * f[<span class="number">11</span>] + <span class="number">3</span> * f[<span class="number">21</span>] + <span class="number">28</span> * f[<span class="number">24</span>] - <span class="number">14</span> * f[<span class="number">9</span>] + <span class="number">59</span> * f[<span class="number">17</span>] + <span class="number">24</span> * f[<span class="number">31</span>] - <span class="number">25</span> * f[<span class="number">27</span>] + <span class="number">20</span> * f[<span class="number">33</span>] - <span class="number">77</span> * f[<span class="number">26</span>] == <span class="number">-69431</span>)</span><br><span class="line">s.add(<span class="number">-69</span> * f[<span class="number">25</span>] + <span class="number">33</span> * f[<span class="number">20</span>] + <span class="number">55</span> * f[<span class="number">24</span>] + <span class="number">69</span> * f[<span class="number">18</span>] + <span class="number">83</span> * f[<span class="number">15</span>] + <span class="number">-19</span> * f[<span class="number">13</span>] + <span class="number">22</span> * f[<span class="number">21</span>] + f[<span class="number">16</span>] + <span class="number">-53</span> * f[<span class="number">22</span>] + <span class="number">-58</span> * f[<span class="number">4</span>] + <span class="number">-63</span> * f[<span class="number">29</span>] - <span class="number">91</span> * f[<span class="number">26</span>] + <span class="number">28</span> * f[<span class="number">34</span>] + <span class="number">5</span> * f[<span class="number">3</span>] + <span class="number">35</span> * f[<span class="number">8</span>] + <span class="number">27</span> * f[ <span class="number">1</span>] - <span class="number">31</span> * f[<span class="number">27</span>] + <span class="number">10</span> * f[<span class="number">12</span>] + <span class="number">84</span> * f[<span class="number">33</span>] + <span class="number">24</span> * f[<span class="number">14</span>] + <span class="number">42</span> * f[<span class="number">11</span>] + <span class="number">98</span> * f[<span class="number">28</span>] + <span class="number">2</span> * f[<span class="number">7</span>] + <span class="number">70</span> * f[<span class="number">19</span>] + <span class="number">53</span> * f[<span class="number">35</span>] + <span class="number">34</span> * f[<span class="number">6</span>] + <span class="number">30</span> * f[<span class="number">5</span>] + <span class="number">55</span> * f[<span class="number">23</span>] + <span class="number">69</span> * f[<span class="number">10</span>] + <span class="number">60</span> * f[<span class="number">2</span>] - <span class="number">2</span> * f[<span class="number">17</span>] + <span class="number">68</span> * f[<span class="number">32</span>] + <span class="number">21</span> * f[<span class="number">0</span>] - f[<span class="number">9</span>] + <span class="number">60</span> * f[<span class="number">31</span>] - <span class="number">60</span> * f[<span class="number">30</span>] == <span class="number">54106</span>)</span><br><span class="line">s.add(<span class="number">15</span> * f[<span class="number">31</span>] + <span class="number">-96</span> * f[<span class="number">21</span>] + <span class="number">38</span> * f[<span class="number">19</span>] + <span class="number">-81</span> * f[<span class="number">9</span>] + <span class="number">-68</span> * f[<span class="number">12</span>] + <span class="number">89</span> * f[<span class="number">20</span>] + <span class="number">33</span> * f[<span class="number">2</span>] + <span class="number">70</span> * f[<span class="number">34</span>] + <span class="number">79</span> * f[<span class="number">28</span>] + <span class="number">-80</span> * f[<span class="number">35</span>] + <span class="number">76</span> * f[<span class="number">10</span>] - <span class="number">38</span> * f[<span class="number">5</span>] + <span class="number">5</span> * f[<span class="number">6</span>] + <span class="number">60</span> * f[<span class="number">11</span>] - <span class="number">8</span> * f[<span class="number">26</span>] - <span class="number">59</span> * f[<span class="number">23</span>] + <span class="number">9</span> * f[<span class="number">24</span>] + <span class="number">34</span> * f[<span class="number">17</span>] - <span class="number">60</span> * f[<span class="number">1</span>] + <span class="number">98</span> * f[<span class="number">25</span>] + <span class="number">48</span> * f[<span class="number">16</span>] + <span class="number">-88</span> * f[<span class="number">22</span>] + <span class="number">-96</span> * f[<span class="number">3</span>] + f[<span class="number">18</span>] * <span class="number">64</span> + <span class="number">-61</span> * f[<span class="number">15</span>] + <span class="number">-92</span> * f[<span class="number">13</span>] + <span class="number">50</span> * f[<span class="number">8</span>] + <span class="number">90</span> * f[<span class="number">29</span>] + <span class="number">32</span> * f[<span class="number">4</span>] + <span class="number">-97</span> * f[<span class="number">27</span>] + <span class="number">14</span> * f[<span class="number">14</span>] + f[<span class="number">30</span>] + <span class="number">97</span> * f[<span class="number">7</span>] - <span class="number">17</span> * f[<span class="number">32</span>] - <span class="number">96</span> * f[<span class="number">0</span>] + <span class="number">54</span> * f[<span class="number">33</span>] == <span class="number">-8292</span>)</span><br><span class="line">s.add(<span class="number">-7</span> * f[<span class="number">3</span>] + <span class="number">49</span> * f[<span class="number">17</span>] + <span class="number">60</span> * f[<span class="number">25</span>] + <span class="number">-45</span> * f[<span class="number">16</span>] + <span class="number">-50</span> * f[<span class="number">0</span>] + <span class="number">-98</span> * f[<span class="number">28</span>] + <span class="number">-92</span> * f[<span class="number">12</span>] + <span class="number">-22</span> * f[<span class="number">23</span>] + <span class="number">33</span> * f[<span class="number">13</span>] + <span class="number">57</span> * f[<span class="number">31</span>] - <span class="number">15</span> * f[<span class="number">5</span>] + <span class="number">36</span> * f[<span class="number">29</span>] - <span class="number">88</span> * f[<span class="number">15</span>] + <span class="number">12</span> * f[<span class="number">21</span>] + <span class="number">71</span> * f[<span class="number">14</span>] - <span class="number">48</span> * f[<span class="number">35</span>] + <span class="number">79</span> * f[<span class="number">34</span>] - <span class="number">5</span> * f[<span class="number">19</span>] + <span class="number">68</span> * f[<span class="number">33</span>] - <span class="number">2</span> * f[<span class="number">4</span>] - <span class="number">82</span> * f[<span class="number">10</span>] + <span class="number">-58</span> * f[<span class="number">32</span>] + <span class="number">53</span> * f[<span class="number">8</span>] + <span class="number">-57</span> * f[<span class="number">30</span>] + <span class="number">-29</span> * f[<span class="number">24</span>] + <span class="number">-28</span> * f[<span class="number">26</span>] - <span class="number">16</span> * f[<span class="number">18</span>] - <span class="number">98</span> * f[<span class="number">22</span>] - f[<span class="number">27</span>] * <span class="number">64</span> + <span class="number">32</span> * f[<span class="number">11</span>] + <span class="number">73</span> * f[<span class="number">2</span>] - <span class="number">38</span> * f[<span class="number">20</span>] + <span class="number">27</span> * f[<span class="number">9</span>] - <span class="number">7</span> * f[<span class="number">7</span>] - <span class="number">30</span> * f[ <span class="number">1</span>] - <span class="number">35</span> * f[<span class="number">6</span>] == <span class="number">-44677</span>)</span><br><span class="line">s.add(<span class="number">4</span> * f[<span class="number">31</span>] + <span class="number">-43</span> * f[<span class="number">18</span>] + <span class="number">-36</span> * f[<span class="number">29</span>] + <span class="number">60</span> * f[<span class="number">14</span>] + <span class="number">29</span> * f[<span class="number">20</span>] + <span class="number">-85</span> * f[<span class="number">19</span>] + <span class="number">71</span> * f[<span class="number">27</span>] + <span class="number">-22</span> * f[<span class="number">11</span>] + <span class="number">95</span> * f[<span class="number">9</span>] + <span class="number">19</span> * f[<span class="number">12</span>] + <span class="number">-20</span> * f[<span class="number">30</span>] + <span class="number">6</span> * f[<span class="number">34</span>] + <span class="number">49</span> * f[<span class="number">6</span>] + <span class="number">13</span> * f[<span class="number">10</span>] - <span class="number">23</span> * f[<span class="number">13</span>] + <span class="number">17</span> * f[<span class="number">7</span>] - <span class="number">79</span> * f[<span class="number">22</span>] + <span class="number">12</span> * f[<span class="number">3</span>] - <span class="number">7</span> * f[<span class="number">4</span>] - <span class="number">12</span> * f[<span class="number">2</span>] - <span class="number">78</span> * f[<span class="number">17</span>] + <span class="number">-86</span> * f[<span class="number">28</span>] + <span class="number">-69</span> * f[<span class="number">33</span>] + <span class="number">-31</span> * f[<span class="number">21</span>] + <span class="number">91</span> * f[<span class="number">15</span>] + <span class="number">91</span> * f[<span class="number">8</span>] + <span class="number">58</span> * f[<span class="number">16</span>] + <span class="number">-91</span> * f[<span class="number">23</span>] - <span class="number">56</span> * f[<span class="number">5</span>] + <span class="number">59</span> * f[<span class="number">26</span>] + <span class="number">18</span> * f[<span class="number">32</span>] - <span class="number">87</span> * f[<span class="number">35</span>] - <span class="number">30</span> * f[<span class="number">24</span>] + <span class="number">54</span> * f[<span class="number">25</span>] - <span class="number">5</span> * f[ <span class="number">1</span>] - <span class="number">94</span> * f[<span class="number">0</span>] == <span class="number">-17772</span>)</span><br><span class="line">s.add(<span class="number">-17</span> * f[<span class="number">9</span>] + <span class="number">-93</span> * f[<span class="number">12</span>] + <span class="number">-85</span> * f[<span class="number">20</span>] + <span class="number">-73</span> * f[<span class="number">35</span>] + <span class="number">-87</span> * f[<span class="number">24</span>] + <span class="number">-80</span> * f[<span class="number">25</span>] + <span class="number">-87</span> * f[<span class="number">4</span>] + <span class="number">56</span> * f[<span class="number">27</span>] + <span class="number">-89</span> * f[<span class="number">21</span>] + <span class="number">52</span> * f[<span class="number">15</span>] + <span class="number">97</span> * f[<span class="number">0</span>] + <span class="number">-11</span> * f[<span class="number">19</span>] + <span class="number">-94</span> * f[<span class="number">10</span>] + <span class="number">-92</span> * f[<span class="number">29</span>] + <span class="number">-20</span> * f[<span class="number">17</span>] - <span class="number">95</span> * f[<span class="number">5</span>] - <span class="number">13</span> * f[<span class="number">8</span>] + <span class="number">80</span> * f[<span class="number">31</span>] - f[<span class="number">33</span>] + <span class="number">37</span> * f[<span class="number">30</span>] + <span class="number">64</span> * f[<span class="number">32</span>] + <span class="number">-18</span> * f[<span class="number">18</span>] + <span class="number">-76</span> * f[<span class="number">34</span>] + <span class="number">65</span> * f[<span class="number">3</span>] + <span class="number">-78</span> * f[<span class="number">13</span>] + <span class="number">-71</span> * f[<span class="number">26</span>] + <span class="number">-44</span> * f[<span class="number">23</span>] + <span class="number">61</span> * f[<span class="number">7</span>] + <span class="number">63</span> * f[<span class="number">1</span>] + <span class="number">9</span> * f[<span class="number">16</span>] + <span class="number">11</span> * f[<span class="number">22</span>] - <span class="number">39</span> * f[<span class="number">14</span>] + <span class="number">80</span> * f[<span class="number">6</span>] - <span class="number">33</span> * f[<span class="number">11</span>] - <span class="number">62</span> * f[<span class="number">2</span>] - <span class="number">74</span> * f[<span class="number">28</span>] == <span class="number">-77151</span>)</span><br><span class="line">s.add(<span class="number">54</span> * f[<span class="number">20</span>] + <span class="number">65</span> * f[<span class="number">22</span>] + <span class="number">-9</span> * f[<span class="number">9</span>] + <span class="number">-61</span> * f[<span class="number">24</span>] + <span class="number">-45</span> * f[<span class="number">25</span>] + <span class="number">47</span> * f[<span class="number">4</span>] + <span class="number">31</span> * f[<span class="number">5</span>] + <span class="number">36</span> * f[<span class="number">23</span>] + <span class="number">20</span> * f[<span class="number">13</span>] - <span class="number">40</span> * f[<span class="number">2</span>] - <span class="number">64</span> * f[<span class="number">12</span>] - <span class="number">40</span> * f[<span class="number">14</span>] + <span class="number">81</span> * f[<span class="number">10</span>] - <span class="number">35</span> * f[<span class="number">0</span>] - <span class="number">12</span> * f[<span class="number">27</span>] + <span class="number">35</span> * f[<span class="number">30</span>] + <span class="number">63</span> * f[<span class="number">15</span>] - <span class="number">65</span> * f[<span class="number">19</span>] + <span class="number">31</span> * f[<span class="number">18</span>] - <span class="number">42</span> * f[<span class="number">35</span>] + <span class="number">33</span> * f[<span class="number">11</span>] + <span class="number">43</span> * f[<span class="number">33</span>] + <span class="number">76</span> * f[<span class="number">32</span>] + <span class="number">-4</span> * f[<span class="number">26</span>] + <span class="number">59</span> * f[<span class="number">6</span>] + <span class="number">-85</span> * f[<span class="number">34</span>] + <span class="number">69</span> * f[<span class="number">29</span>] + <span class="number">77</span> * f[<span class="number">31</span>] + <span class="number">-95</span> * f[<span class="number">8</span>] + <span class="number">75</span> * f[<span class="number">16</span>] - <span class="number">19</span> * f[<span class="number">3</span>] + <span class="number">65</span> * f[<span class="number">21</span>] - <span class="number">78</span> * f[<span class="number">7</span>] - <span class="number">48</span> * f[<span class="number">28</span>] - <span class="number">77</span> * f[<span class="number">17</span>] == <span class="number">11531</span>)</span><br><span class="line">s.add(<span class="number">-12</span> * f[<span class="number">0</span>] + <span class="number">55</span> * f[<span class="number">17</span>] + <span class="number">35</span> * f[<span class="number">20</span>] + <span class="number">76</span> * f[<span class="number">13</span>] + <span class="number">-73</span> * f[<span class="number">15</span>] + <span class="number">84</span> * f[<span class="number">12</span>] + <span class="number">-72</span> * f[<span class="number">3</span>] + <span class="number">71</span> * f[<span class="number">24</span>] + <span class="number">-41</span> * f[<span class="number">7</span>] + <span class="number">28</span> * f[<span class="number">8</span>] + <span class="number">-93</span> * f[<span class="number">34</span>] + <span class="number">-63</span> * f[<span class="number">30</span>] + <span class="number">35</span> * f[<span class="number">6</span>] - <span class="number">38</span> * f[<span class="number">10</span>] - <span class="number">4</span> * f[<span class="number">16</span>] + <span class="number">99</span> * f[<span class="number">11</span>] + <span class="number">10</span> * f[<span class="number">4</span>] - <span class="number">98</span> * f[<span class="number">35</span>] - <span class="number">9</span> * f[<span class="number">18</span>] + <span class="number">22</span> * f[<span class="number">21</span>] - <span class="number">6</span> * f[<span class="number">26</span>] + <span class="number">67</span> * f[<span class="number">23</span>] + <span class="number">95</span> * f[<span class="number">5</span>] + <span class="number">-37</span> * f[<span class="number">9</span>] + <span class="number">-71</span> * f[<span class="number">25</span>] + <span class="number">33</span> * f[<span class="number">32</span>] + <span class="number">96</span> * f[<span class="number">14</span>] + <span class="number">47</span> * f[<span class="number">31</span>] + <span class="number">-92</span> * f[<span class="number">27</span>] + <span class="number">-51</span> * f[<span class="number">1</span>] + <span class="number">-25</span> * f[<span class="number">28</span>] + <span class="number">82</span> * f[<span class="number">2</span>] - <span class="number">6</span> * f[<span class="number">33</span>] - <span class="number">13</span> * f[<span class="number">29</span>] + <span class="number">25</span> * f[<span class="number">22</span>] - <span class="number">35</span> * f[<span class="number">19</span>] == <span class="number">4538</span>)</span><br><span class="line">s.add(<span class="number">79</span> * f[<span class="number">27</span>] + <span class="number">87</span> * f[<span class="number">24</span>] + <span class="number">-52</span> * f[<span class="number">29</span>] + <span class="number">-72</span> * f[<span class="number">13</span>] + <span class="number">-17</span> * f[<span class="number">23</span>] + <span class="number">54</span> * f[<span class="number">0</span>] + <span class="number">45</span> * f[<span class="number">10</span>] + <span class="number">-17</span> * f[<span class="number">33</span>] + <span class="number">-49</span> * f[<span class="number">4</span>] + <span class="number">-34</span> * f[<span class="number">17</span>] + <span class="number">87</span> * f[<span class="number">7</span>] + <span class="number">-41</span> * f[<span class="number">18</span>] + <span class="number">2</span> * f[<span class="number">30</span>] + <span class="number">-81</span> * f[<span class="number">11</span>] + <span class="number">37</span> * f[<span class="number">35</span>] - <span class="number">46</span> * f[<span class="number">9</span>] + <span class="number">25</span> * f[<span class="number">32</span>] - <span class="number">45</span> * f[<span class="number">14</span>] - <span class="number">30</span> * f[<span class="number">12</span>] + <span class="number">83</span> * f[<span class="number">19</span>] + <span class="number">24</span> * f[<span class="number">1</span>] + <span class="number">98</span> * f[<span class="number">16</span>] + <span class="number">64</span> * f[<span class="number">21</span>] + <span class="number">93</span> * f[<span class="number">8</span>] + <span class="number">78</span> * f[<span class="number">2</span>] + <span class="number">56</span> * f[<span class="number">15</span>] + <span class="number">-51</span> * f[<span class="number">6</span>] + <span class="number">-17</span> * f[<span class="number">26</span>] + <span class="number">-50</span> * f[<span class="number">25</span>] + <span class="number">-76</span> * f[<span class="number">3</span>] + <span class="number">-65</span> * f[<span class="number">28</span>] + <span class="number">-36</span> * f[<span class="number">31</span>] + <span class="number">88</span> * f[<span class="number">34</span>] + <span class="number">77</span> * f[<span class="number">20</span>] - <span class="number">62</span> * f[<span class="number">5</span>] + <span class="number">67</span> * f[<span class="number">22</span>] == <span class="number">33735</span>)</span><br><span class="line">s.add(<span class="number">37</span> * f[<span class="number">17</span>] + <span class="number">-21</span> * f[<span class="number">19</span>] + <span class="number">55</span> * f[<span class="number">21</span>] + <span class="number">-70</span> * f[<span class="number">26</span>] + <span class="number">92</span> * f[<span class="number">6</span>] + <span class="number">75</span> * f[<span class="number">31</span>] + <span class="number">-35</span> * f[<span class="number">29</span>] + <span class="number">-50</span> * f[<span class="number">25</span>] + <span class="number">8</span> * f[<span class="number">33</span>] + <span class="number">-74</span> * f[<span class="number">13</span>] + <span class="number">34</span> * f[<span class="number">35</span>] + <span class="number">29</span> * f[<span class="number">24</span>] + <span class="number">-10</span> * f[<span class="number">15</span>] + <span class="number">-75</span> * f[<span class="number">16</span>] + <span class="number">24</span> * f[<span class="number">18</span>] + <span class="number">98</span> * f[<span class="number">0</span>] + <span class="number">41</span> * f[<span class="number">20</span>] - <span class="number">54</span> * f[<span class="number">28</span>] - <span class="number">5</span> * f[<span class="number">23</span>] - <span class="number">66</span> * f[<span class="number">9</span>] + <span class="number">3</span> * f[<span class="number">5</span>] + <span class="number">30</span> * f[<span class="number">1</span>] + <span class="number">-29</span> * f[<span class="number">7</span>] + <span class="number">-71</span> * f[<span class="number">30</span>] + <span class="number">61</span> * f[<span class="number">10</span>] + <span class="number">-25</span> * f[<span class="number">4</span>] + <span class="number">82</span> * f[<span class="number">32</span>] + <span class="number">62</span> * f[<span class="number">22</span>] + <span class="number">-40</span> * f[<span class="number">34</span>] + <span class="number">90</span> * f[<span class="number">3</span>] + <span class="number">-36</span> * f[<span class="number">14</span>] - <span class="number">66</span> * f[<span class="number">2</span>] + <span class="number">15</span> * f[<span class="number">12</span>] - <span class="number">74</span> * f[<span class="number">27</span>] + <span class="number">31</span> * f[<span class="number">8</span>] - <span class="number">68</span> * f[<span class="number">11</span>] == <span class="number">-7107</span>)</span><br><span class="line">s.add(<span class="number">-34</span> * f[<span class="number">13</span>] + <span class="number">-13</span> * f[<span class="number">15</span>] + <span class="number">-11</span> * f[<span class="number">19</span>] + <span class="number">28</span> * f[<span class="number">17</span>] + <span class="number">98</span> * f[<span class="number">9</span>] + <span class="number">-69</span> * f[<span class="number">3</span>] + <span class="number">64</span> * f[<span class="number">25</span>] + <span class="number">-66</span> * f[<span class="number">7</span>] + <span class="number">-71</span> * f[<span class="number">6</span>] + <span class="number">75</span> * f[<span class="number">34</span>] + <span class="number">19</span> * f[<span class="number">32</span>] + <span class="number">-94</span> * f[<span class="number">33</span>] - <span class="number">72</span> * f[<span class="number">18</span>] + <span class="number">35</span> * f[<span class="number">26</span>] - <span class="number">32</span> * f[<span class="number">27</span>] + <span class="number">76</span> * f[<span class="number">1</span>] + <span class="number">80</span> * f[<span class="number">28</span>] + <span class="number">66</span> * f[<span class="number">10</span>] + <span class="number">3</span> * f[<span class="number">12</span>] - <span class="number">99</span> * f[<span class="number">14</span>] + <span class="number">17</span> * f[<span class="number">30</span>] + <span class="number">-79</span> * f[<span class="number">24</span>] + <span class="number">-83</span> * f[<span class="number">29</span>] + <span class="number">55</span> * f[<span class="number">35</span>] + <span class="number">-75</span> * f[<span class="number">8</span>] + <span class="number">77</span> * f[<span class="number">31</span>] + <span class="number">84</span> * f[<span class="number">22</span>] - <span class="number">94</span> * f[<span class="number">0</span>] + <span class="number">12</span> * f[<span class="number">2</span>] + <span class="number">61</span> * f[<span class="number">20</span>] - <span class="number">24</span> * f[<span class="number">23</span>] + <span class="number">62</span> * f[<span class="number">11</span>] + <span class="number">37</span> * f[<span class="number">16</span>] - <span class="number">65</span> * f[<span class="number">21</span>] - <span class="number">2</span> * f[<span class="number">4</span>] - <span class="number">90</span> * f[<span class="number">5</span>] == <span class="number">-17028</span>)</span><br><span class="line">s.add(<span class="number">24</span> * f[<span class="number">3</span>] + <span class="number">-76</span> * f[<span class="number">2</span>] + <span class="number">-94</span> * f[<span class="number">16</span>] + <span class="number">-37</span> * f[<span class="number">4</span>] + <span class="number">-31</span> * f[<span class="number">7</span>] + <span class="number">-65</span> * f[<span class="number">0</span>] + <span class="number">-23</span> * f[<span class="number">22</span>] + <span class="number">80</span> * f[<span class="number">24</span>] + <span class="number">-48</span> * f[<span class="number">20</span>] + <span class="number">-42</span> * f[<span class="number">32</span>] + <span class="number">47</span> * f[<span class="number">9</span>] - <span class="number">95</span> * f[<span class="number">6</span>] - <span class="number">10</span> * f[<span class="number">35</span>] - <span class="number">30</span> * f[<span class="number">34</span>] - <span class="number">67</span> * f[<span class="number">12</span>] + <span class="number">81</span> * f[<span class="number">14</span>] - <span class="number">21</span> * f[<span class="number">27</span>] + <span class="number">65</span> * f[<span class="number">18</span>] + <span class="number">60</span> * f[<span class="number">25</span>] + <span class="number">31</span> * f[<span class="number">17</span>] - <span class="number">20</span> * f[<span class="number">31</span>] + <span class="number">-17</span> * f[<span class="number">21</span>] + <span class="number">-34</span> * f[<span class="number">26</span>] + <span class="number">64</span> * f[<span class="number">15</span>] + <span class="number">43</span> * f[<span class="number">11</span>] + <span class="number">39</span> * f[<span class="number">23</span>] + <span class="number">68</span> * f[<span class="number">33</span>] + <span class="number">-58</span> * f[<span class="number">13</span>] + <span class="number">21</span> * f[<span class="number">1</span>] + <span class="number">19</span> * f[<span class="number">19</span>] + <span class="number">96</span> * f[<span class="number">8</span>] - <span class="number">32</span> * f[<span class="number">30</span>] - <span class="number">83</span> * f[<span class="number">28</span>] + <span class="number">20</span> * f[<span class="number">5</span>] - <span class="number">3</span> * f[<span class="number">29</span>] + <span class="number">7</span> * f[<span class="number">10</span>] == <span class="number">-21641</span>)</span><br><span class="line">s.add(<span class="number">-76</span> * f[<span class="number">0</span>] + <span class="number">-82</span> * f[<span class="number">22</span>] + <span class="number">-92</span> * f[<span class="number">24</span>] + <span class="number">53</span> * f[<span class="number">20</span>] + <span class="number">-90</span> * f[<span class="number">5</span>] + <span class="number">3</span> * f[<span class="number">34</span>] + <span class="number">93</span> * f[<span class="number">2</span>] + <span class="number">77</span> * f[<span class="number">25</span>] + <span class="number">-40</span> * f[<span class="number">16</span>] + <span class="number">-59</span> * f[<span class="number">26</span>] + <span class="number">-91</span> * f[<span class="number">15</span>] + <span class="number">55</span> * f[<span class="number">9</span>] + <span class="number">-84</span> * f[<span class="number">35</span>] + <span class="number">-46</span> * f[<span class="number">12</span>] + <span class="number">-41</span> * f[<span class="number">31</span>] + <span class="number">-55</span> * f[<span class="number">8</span>] + <span class="number">97</span> * f[<span class="number">32</span>] + <span class="number">56</span> * f[<span class="number">19</span>] - <span class="number">15</span> * f[<span class="number">13</span>] - <span class="number">93</span> * f[<span class="number">4</span>] + <span class="number">37</span> * f[<span class="number">33</span>] + <span class="number">-52</span> * f[<span class="number">7</span>] + <span class="number">-82</span> * f[<span class="number">23</span>] + <span class="number">14</span> * f[<span class="number">27</span>] + <span class="number">52</span> * f[<span class="number">6</span>] + <span class="number">67</span> * f[<span class="number">11</span>] + f[<span class="number">3</span>] + <span class="number">-37</span> * f[<span class="number">30</span>] - <span class="number">88</span> * f[<span class="number">18</span>] - <span class="number">16</span> * f[<span class="number">10</span>] + f[<span class="number">14</span>] + <span class="number">48</span> * f[<span class="number">17</span>] - <span class="number">80</span> * f[<span class="number">21</span>] + <span class="number">17</span> * f[<span class="number">29</span>] - <span class="number">94</span> * f[<span class="number">28</span>] - <span class="number">12</span> * f[ <span class="number">1</span>] == <span class="number">-71317</span>)</span><br><span class="line">s.add(<span class="number">-71</span> * f[<span class="number">21</span>] + <span class="number">-55</span> * f[<span class="number">5</span>] + <span class="number">-76</span> * f[<span class="number">4</span>] + <span class="number">-94</span> * f[<span class="number">10</span>] + <span class="number">-79</span> * f[<span class="number">26</span>] + <span class="number">95</span> * f[<span class="number">28</span>] + <span class="number">58</span> * f[<span class="number">3</span>] + <span class="number">-85</span> * f[<span class="number">13</span>] + <span class="number">-74</span> * f[<span class="number">27</span>] + <span class="number">-35</span> * f[<span class="number">16</span>] + <span class="number">68</span> * f[<span class="number">2</span>] + <span class="number">84</span> * f[<span class="number">11</span>] + <span class="number">-25</span> * f[<span class="number">23</span>] + <span class="number">-91</span> * f[<span class="number">33</span>] + <span class="number">-87</span> * f[<span class="number">14</span>] + <span class="number">-65</span> * f[<span class="number">34</span>] + <span class="number">23</span> * f[<span class="number">20</span>] + <span class="number">-91</span> * f[<span class="number">15</span>] + <span class="number">34</span> * f[<span class="number">12</span>] + <span class="number">53</span> * f[ <span class="number">1</span>] - <span class="number">16</span> * f[<span class="number">24</span>] + <span class="number">46</span> * f[<span class="number">9</span>] + <span class="number">-26</span> * f[<span class="number">0</span>] + <span class="number">42</span> * f[<span class="number">30</span>] + <span class="number">22</span> * f[<span class="number">25</span>] + <span class="number">-89</span> * f[<span class="number">19</span>] + <span class="number">34</span> * f[<span class="number">32</span>] + <span class="number">-12</span> * f[<span class="number">29</span>] + <span class="number">-16</span> * f[<span class="number">7</span>] + <span class="number">22</span> * f[<span class="number">18</span>] + <span class="number">-52</span> * f[<span class="number">31</span>] + <span class="number">83</span> * f[<span class="number">22</span>] + <span class="number">5</span> * f[<span class="number">17</span>] - <span class="number">71</span> * f[<span class="number">6</span>] + <span class="number">41</span> * f[<span class="number">35</span>] + <span class="number">68</span> * f[<span class="number">8</span>] == <span class="number">-41387</span>)</span><br><span class="line">s.add(<span class="number">-97</span> * f[<span class="number">12</span>] + <span class="number">-19</span> * f[<span class="number">19</span>] + <span class="number">-87</span> * f[<span class="number">3</span>] + <span class="number">89</span> * f[<span class="number">27</span>] + <span class="number">54</span> * f[<span class="number">5</span>] + <span class="number">59</span> * f[<span class="number">22</span>] + <span class="number">95</span> * f[<span class="number">17</span>] + <span class="number">62</span> * f[<span class="number">26</span>] + <span class="number">6</span> * f[<span class="number">20</span>] + <span class="number">64</span> * f[<span class="number">14</span>] + <span class="number">-50</span> * f[<span class="number">13</span>] + <span class="number">-95</span> * f[<span class="number">30</span>] + <span class="number">-68</span> * f[<span class="number">16</span>] + <span class="number">10</span> * f[<span class="number">0</span>] - f[<span class="number">2</span>] - f[<span class="number">28</span>] + <span class="number">17</span> * f[<span class="number">18</span>] - <span class="number">76</span> * f[<span class="number">6</span>] - <span class="number">24</span> * f[<span class="number">23</span>] - <span class="number">76</span> * f[<span class="number">11</span>] + <span class="number">33</span> * f[<span class="number">34</span>] - <span class="number">98</span> * f[<span class="number">31</span>] + <span class="number">-59</span> * f[<span class="number">10</span>] + <span class="number">35</span> * f[<span class="number">4</span>] + <span class="number">-53</span> * f[<span class="number">8</span>] + <span class="number">-18</span> * f[<span class="number">1</span>] + <span class="number">9</span> * f[<span class="number">32</span>] + <span class="number">-45</span> * f[<span class="number">9</span>] - <span class="number">60</span> * f[<span class="number">29</span>] - <span class="number">74</span> * f[<span class="number">35</span>] + <span class="number">31</span> * f[<span class="number">7</span>] + <span class="number">50</span> * f[<span class="number">24</span>] + <span class="number">25</span> * f[<span class="number">21</span>] - <span class="number">83</span> * f[<span class="number">33</span>] + <span class="number">25</span> * f[<span class="number">25</span>] + <span class="number">52</span> * f[<span class="number">15</span>] == <span class="number">-30463</span>)</span><br><span class="line">s.add(<span class="number">-27</span> * f[<span class="number">25</span>] + <span class="number">84</span> * f[<span class="number">34</span>] + <span class="number">-73</span> * f[<span class="number">14</span>] + <span class="number">-54</span> * f[<span class="number">7</span>] + <span class="number">-45</span> * f[<span class="number">26</span>] + <span class="number">-97</span> * f[<span class="number">18</span>] + <span class="number">40</span> * f[<span class="number">10</span>] + <span class="number">73</span> * f[<span class="number">27</span>] + <span class="number">-55</span> * f[<span class="number">11</span>] + <span class="number">52</span> * f[<span class="number">29</span>] + <span class="number">-29</span> * f[<span class="number">13</span>] + <span class="number">32</span> * f[<span class="number">24</span>] + <span class="number">-80</span> * f[<span class="number">0</span>] + <span class="number">-79</span> * f[<span class="number">17</span>] + <span class="number">-39</span> * f[<span class="number">6</span>] + <span class="number">88</span> * f[<span class="number">1</span>] + <span class="number">44</span> * f[<span class="number">2</span>] - <span class="number">50</span> * f[<span class="number">3</span>] - <span class="number">2</span> * f[<span class="number">22</span>] - <span class="number">44</span> * f[<span class="number">31</span>] - <span class="number">62</span> * f[<span class="number">8</span>] + <span class="number">-68</span> * f[<span class="number">5</span>] + <span class="number">77</span> * f[<span class="number">21</span>] + <span class="number">-34</span> * f[<span class="number">15</span>] + <span class="number">-42</span> * f[<span class="number">35</span>] + <span class="number">30</span> * f[<span class="number">28</span>] + <span class="number">-54</span> * f[<span class="number">30</span>] + <span class="number">-53</span> * f[<span class="number">20</span>] + <span class="number">98</span> * f[<span class="number">33</span>] + <span class="number">70</span> * f[<span class="number">32</span>] + <span class="number">99</span> * f[<span class="number">19</span>] - <span class="number">51</span> * f[<span class="number">4</span>] + <span class="number">12</span> * f[<span class="number">16</span>] - <span class="number">55</span> * f[<span class="number">9</span>] + <span class="number">40</span> * f[<span class="number">12</span>] + <span class="number">76</span> * f[<span class="number">23</span>] == <span class="number">-14435</span>)</span><br><span class="line">s.add(<span class="number">86</span> * f[<span class="number">20</span>] + <span class="number">70</span> * f[<span class="number">13</span>] + <span class="number">-76</span> * f[<span class="number">19</span>] + <span class="number">-31</span> * f[<span class="number">28</span>] + <span class="number">77</span> * f[<span class="number">14</span>] + <span class="number">48</span> * f[<span class="number">15</span>] + <span class="number">-78</span> * f[<span class="number">31</span>] + <span class="number">-82</span> * f[<span class="number">26</span>] + <span class="number">69</span> * f[<span class="number">3</span>] + <span class="number">70</span> * f[<span class="number">5</span>] + <span class="number">95</span> * f[<span class="number">6</span>] - <span class="number">60</span> * f[<span class="number">4</span>] + <span class="number">30</span> * f[<span class="number">27</span>] + <span class="number">3</span> * f[<span class="number">29</span>] - <span class="number">29</span> * f[<span class="number">32</span>] + <span class="number">5</span> * f[<span class="number">24</span>] + <span class="number">55</span> * f[<span class="number">0</span>] + <span class="number">36</span> * f[<span class="number">23</span>] - <span class="number">90</span> * f[<span class="number">22</span>] + <span class="number">37</span> * f[<span class="number">35</span>] + <span class="number">78</span> * f[<span class="number">34</span>] + <span class="number">20</span> * f[<span class="number">11</span>] + <span class="number">-64</span> * f[<span class="number">1</span>] + <span class="number">74</span> * f[<span class="number">30</span>] + <span class="number">16</span> * f[<span class="number">16</span>] + <span class="number">-83</span> * f[<span class="number">33</span>] + <span class="number">16</span> * f[<span class="number">2</span>] + <span class="number">-17</span> * f[<span class="number">17</span>] + <span class="number">-28</span> * f[<span class="number">8</span>] + <span class="number">9</span> * f[<span class="number">7</span>] - <span class="number">62</span> * f[<span class="number">10</span>] + <span class="number">46</span> * f[<span class="number">9</span>] + <span class="number">63</span> * f[<span class="number">21</span>] - <span class="number">39</span> * f[<span class="number">12</span>] - <span class="number">64</span> * f[<span class="number">18</span>] - <span class="number">27</span> * f[<span class="number">25</span>] == <span class="number">23472</span>)</span><br><span class="line">s.add(<span class="number">7</span> * f[<span class="number">0</span>] + <span class="number">92</span> * f[<span class="number">6</span>] + <span class="number">-57</span> * f[<span class="number">24</span>] + <span class="number">-89</span> * f[<span class="number">11</span>] + <span class="number">-47</span> * f[<span class="number">5</span>] + <span class="number">-39</span> * f[<span class="number">30</span>] + <span class="number">64</span> * f[<span class="number">8</span>] + <span class="number">-63</span> * f[<span class="number">12</span>] + <span class="number">-46</span> * f[<span class="number">9</span>] + <span class="number">-82</span> * f[<span class="number">17</span>] + <span class="number">39</span> * f[<span class="number">23</span>] + <span class="number">58</span> * f[<span class="number">13</span>] - <span class="number">81</span> * f[<span class="number">1</span>] + <span class="number">33</span> * f[<span class="number">29</span>] + <span class="number">89</span> * f[<span class="number">7</span>] - <span class="number">14</span> * f[<span class="number">20</span>] + <span class="number">97</span> * f[<span class="number">33</span>] + <span class="number">10</span> * f[<span class="number">35</span>] - <span class="number">46</span> * f[<span class="number">14</span>] + <span class="number">81</span> * f[<span class="number">4</span>] + <span class="number">89</span> * f[<span class="number">15</span>] + <span class="number">97</span> * f[<span class="number">21</span>] + <span class="number">-71</span> * f[<span class="number">2</span>] + <span class="number">-7</span> * f[<span class="number">19</span>] + <span class="number">-55</span> * f[<span class="number">3</span>] + <span class="number">85</span> * f[<span class="number">16</span>] + <span class="number">-97</span> * f[<span class="number">34</span>] + <span class="number">-29</span> * f[<span class="number">27</span>] + <span class="number">-79</span> * f[<span class="number">32</span>] + <span class="number">50</span> * f[<span class="number">28</span>] + <span class="number">81</span> * f[<span class="number">22</span>] - <span class="number">44</span> * f[<span class="number">31</span>] - <span class="number">60</span> * f[<span class="number">10</span>] - <span class="number">20</span> * f[<span class="number">26</span>] + <span class="number">18</span> * f[<span class="number">18</span>] + <span class="number">91</span> * f[<span class="number">25</span>] == <span class="number">7913</span>)</span><br><span class="line">s.add(<span class="number">49</span> * f[<span class="number">17</span>] + <span class="number">52</span> * f[<span class="number">18</span>] + <span class="number">-89</span> * f[<span class="number">25</span>] + <span class="number">-93</span> * f[<span class="number">35</span>] + <span class="number">-70</span> * f[<span class="number">11</span>] + <span class="number">-45</span> * f[<span class="number">24</span>] + <span class="number">88</span> * f[<span class="number">30</span>] + <span class="number">92</span> * f[<span class="number">31</span>] + <span class="number">44</span> * f[<span class="number">26</span>] + <span class="number">-5</span> * f[<span class="number">1</span>] + <span class="number">-48</span> * f[<span class="number">6</span>] + <span class="number">-16</span> * f[<span class="number">22</span>] + <span class="number">88</span> * f[<span class="number">32</span>] + <span class="number">91</span> * f[<span class="number">33</span>] + <span class="number">82</span> * f[<span class="number">28</span>] + <span class="number">98</span> * f[<span class="number">8</span>] - <span class="number">63</span> * f[<span class="number">13</span>] - <span class="number">8</span> * f[<span class="number">9</span>] - f[<span class="number">16</span>] - <span class="number">4</span> * f[<span class="number">27</span>] - <span class="number">47</span> * f[<span class="number">4</span>] + <span class="number">-41</span> * f[<span class="number">10</span>] + <span class="number">67</span> * f[<span class="number">29</span>] + <span class="number">-22</span> * f[<span class="number">15</span>] + <span class="number">-79</span> * f[<span class="number">12</span>] + <span class="number">-18</span> * f[<span class="number">2</span>] + <span class="number">23</span> * f[<span class="number">20</span>] + <span class="number">-20</span> * f[<span class="number">14</span>] + <span class="number">64</span> * f[<span class="number">19</span>] + <span class="number">91</span> * f[<span class="number">5</span>] - <span class="number">6</span> * f[<span class="number">7</span>] + <span class="number">84</span> * f[<span class="number">3</span>] - <span class="number">6</span> * f[<span class="number">34</span>] + <span class="number">69</span> * f[<span class="number">21</span>] - <span class="number">4</span> * f[<span class="number">23</span>] - <span class="number">80</span> * f[<span class="number">0</span>] == <span class="number">23824</span>)</span><br><span class="line">s.add(<span class="number">89</span> * f[<span class="number">11</span>] + <span class="number">61</span> * f[<span class="number">7</span>] + <span class="number">-92</span> * f[<span class="number">31</span>] + <span class="number">99</span> * f[<span class="number">21</span>] + <span class="number">27</span> * f[<span class="number">16</span>] + <span class="number">-48</span> * f[<span class="number">24</span>] + <span class="number">-51</span> * f[<span class="number">4</span>] + <span class="number">-39</span> * f[<span class="number">25</span>] + <span class="number">84</span> * f[<span class="number">30</span>] + <span class="number">34</span> * f[<span class="number">14</span>] + <span class="number">-73</span> * f[<span class="number">17</span>] + <span class="number">-92</span> * f[<span class="number">18</span>] + <span class="number">72</span> * f[<span class="number">2</span>] - <span class="number">14</span> * f[<span class="number">13</span>] - f[<span class="number">19</span>] + <span class="number">2</span> * f[<span class="number">9</span>] + <span class="number">3</span> * f[<span class="number">29</span>] - <span class="number">61</span> * f[<span class="number">33</span>] - <span class="number">6</span> * f[<span class="number">26</span>] - <span class="number">57</span> * f[<span class="number">15</span>] - <span class="number">8</span> * f[<span class="number">27</span>] + <span class="number">-28</span> * f[<span class="number">35</span>] + <span class="number">-72</span> * f[<span class="number">6</span>] + <span class="number">-46</span> * f[<span class="number">32</span>] + <span class="number">99</span> * f[<span class="number">20</span>] + <span class="number">-69</span> * f[<span class="number">22</span>] + <span class="number">-94</span> * f[<span class="number">12</span>] + <span class="number">-35</span> * f[<span class="number">8</span>] + <span class="number">-29</span> * f[<span class="number">0</span>] - <span class="number">29</span> * f[<span class="number">10</span>] - <span class="number">2</span> * f[<span class="number">23</span>] - <span class="number">23</span> * f[<span class="number">34</span>] + <span class="number">41</span> * f[<span class="number">3</span>] + <span class="number">42</span> * f[<span class="number">28</span>] == <span class="number">-13865</span>)</span><br><span class="line">s.add(<span class="number">62</span> * f[<span class="number">25</span>] + <span class="number">85</span> * f[<span class="number">8</span>] + <span class="number">-66</span> * f[<span class="number">32</span>] + <span class="number">43</span> * f[<span class="number">10</span>] + <span class="number">32</span> * f[<span class="number">33</span>] + <span class="number">75</span> * f[<span class="number">34</span>] + <span class="number">44</span> * f[<span class="number">1</span>] + <span class="number">49</span> * f[<span class="number">28</span>] + <span class="number">-21</span> * f[<span class="number">26</span>] + <span class="number">60</span> * f[<span class="number">4</span>] + <span class="number">-40</span> * f[<span class="number">0</span>] + <span class="number">-98</span> * f[<span class="number">15</span>] + <span class="number">-37</span> * f[<span class="number">9</span>] + <span class="number">78</span> * f[<span class="number">16</span>] + <span class="number">96</span> * f[<span class="number">35</span>] - <span class="number">84</span> * f[<span class="number">18</span>] - <span class="number">2</span> * f[<span class="number">7</span>] + <span class="number">43</span> * f[<span class="number">2</span>] - <span class="number">28</span> * f[<span class="number">6</span>] - <span class="number">77</span> * f[<span class="number">3</span>] - <span class="number">30</span> * f[<span class="number">17</span>] + <span class="number">90</span> * f[<span class="number">19</span>] + <span class="number">58</span> * f[<span class="number">30</span>] + <span class="number">74</span> * f[<span class="number">12</span>] + <span class="number">22</span> * f[<span class="number">29</span>] + <span class="number">-29</span> * f[<span class="number">20</span>] + <span class="number">-49</span> * f[<span class="number">22</span>] + <span class="number">88</span> * f[<span class="number">14</span>] + <span class="number">-51</span> * f[<span class="number">24</span>] + <span class="number">44</span> * f[<span class="number">21</span>] + <span class="number">28</span> * f[<span class="number">13</span>] - <span class="number">95</span> * f[<span class="number">5</span>] + <span class="number">5</span> * f[<span class="number">23</span>] + <span class="number">85</span> * f[<span class="number">31</span>] + <span class="number">5</span> * f[<span class="number">27</span>] + <span class="number">47</span> * f[<span class="number">11</span>] == <span class="number">50179</span>)</span><br><span class="line">s.add(<span class="number">-100</span> * f[<span class="number">25</span>] + <span class="number">-88</span> * f[<span class="number">18</span>] + <span class="number">46</span> * f[<span class="number">33</span>] + <span class="number">50</span> * f[<span class="number">31</span>] + <span class="number">-85</span> * f[<span class="number">4</span>] + <span class="number">-92</span> * f[<span class="number">6</span>] + <span class="number">-54</span> * f[<span class="number">7</span>] + <span class="number">83</span> * f[<span class="number">23</span>] + <span class="number">-25</span> * f[<span class="number">24</span>] + <span class="number">-91</span> * f[<span class="number">5</span>] + <span class="number">85</span> * f[<span class="number">10</span>] + <span class="number">-15</span> * f[<span class="number">16</span>] - <span class="number">59</span> * f[<span class="number">27</span>] - <span class="number">91</span> * f[<span class="number">8</span>] + <span class="number">73</span> * f[<span class="number">32</span>] + <span class="number">44</span> * f[<span class="number">19</span>] + <span class="number">5</span> * f[<span class="number">34</span>] + <span class="number">68</span> * f[<span class="number">14</span>] - <span class="number">32</span> * f[<span class="number">21</span>] - <span class="number">26</span> * f[<span class="number">30</span>] - <span class="number">56</span> * f[<span class="number">17</span>] + <span class="number">30</span> * f[<span class="number">1</span>] + <span class="number">-92</span> * f[<span class="number">26</span>] + <span class="number">4</span> * f[<span class="number">29</span>] + <span class="number">-89</span> * f[<span class="number">20</span>] + <span class="number">57</span> * f[<span class="number">15</span>] + <span class="number">-66</span> * f[<span class="number">0</span>] + <span class="number">-85</span> * f[<span class="number">12</span>] + <span class="number">91</span> * f[<span class="number">35</span>] + <span class="number">-68</span> * f[<span class="number">2</span>] - <span class="number">95</span> * f[<span class="number">3</span>] - <span class="number">16</span> * f[<span class="number">13</span>] - <span class="number">76</span> * f[<span class="number">11</span>] - <span class="number">48</span> * f[<span class="number">9</span>] - <span class="number">88</span> * f[<span class="number">22</span>] + <span class="number">65</span> * f[<span class="number">28</span>] == <span class="number">-75429</span>)</span><br><span class="line">s.add(<span class="number">-49</span> * f[<span class="number">20</span>] + <span class="number">-71</span> * f[<span class="number">13</span>] + <span class="number">-23</span> * f[<span class="number">23</span>] + <span class="number">-19</span> * f[<span class="number">21</span>] + <span class="number">62</span> * f[<span class="number">2</span>] + <span class="number">-41</span> * f[<span class="number">19</span>] + <span class="number">46</span> * f[<span class="number">15</span>] + <span class="number">5</span> * f[<span class="number">1</span>] + <span class="number">-2</span> * f[<span class="number">5</span>] + <span class="number">88</span> * f[<span class="number">9</span>] + <span class="number">84</span> * f[<span class="number">16</span>] + <span class="number">77</span> * f[<span class="number">6</span>] - <span class="number">6</span> * f[<span class="number">26</span>] + <span class="number">51</span> * f[<span class="number">33</span>] - <span class="number">96</span> * f[<span class="number">31</span>] + <span class="number">59</span> * f[<span class="number">14</span>] - <span class="number">62</span> * f[<span class="number">8</span>] - <span class="number">55</span> * f[<span class="number">25</span>] - <span class="number">32</span> * f[<span class="number">34</span>] + <span class="number">69</span> * f[<span class="number">32</span>] - <span class="number">48</span> * f[<span class="number">28</span>] + <span class="number">85</span> * f[<span class="number">30</span>] + <span class="number">-35</span> * f[<span class="number">24</span>] + <span class="number">-58</span> * f[<span class="number">18</span>] + <span class="number">16</span> * f[<span class="number">12</span>] + <span class="number">-45</span> * f[<span class="number">7</span>] + <span class="number">49</span> * f[<span class="number">35</span>] + <span class="number">8</span> * f[<span class="number">11</span>] + <span class="number">54</span> * f[<span class="number">22</span>] + <span class="number">-33</span> * f[<span class="number">4</span>] + <span class="number">4</span> * f[<span class="number">17</span>] - <span class="number">21</span> * f[<span class="number">27</span>] + <span class="number">31</span> * f[<span class="number">0</span>] - <span class="number">98</span> * f[<span class="number">10</span>] - <span class="number">96</span> * f[<span class="number">29</span>] - <span class="number">71</span> * f[<span class="number">3</span>] == <span class="number">-18764</span>)</span><br><span class="line">s.add(<span class="number">74</span> * f[<span class="number">20</span>] + <span class="number">-50</span> * f[<span class="number">2</span>] + <span class="number">-46</span> * f[<span class="number">21</span>] + <span class="number">28</span> * f[<span class="number">15</span>] + <span class="number">-100</span> * f[<span class="number">5</span>] + <span class="number">53</span> * f[<span class="number">28</span>] + <span class="number">-93</span> * f[<span class="number">9</span>] + <span class="number">-69</span> * f[<span class="number">1</span>] + <span class="number">-61</span> * f[<span class="number">0</span>] + <span class="number">26</span> * f[<span class="number">8</span>] + <span class="number">-66</span> * f[<span class="number">6</span>] + <span class="number">-66</span> * f[<span class="number">27</span>] - <span class="number">42</span> * f[<span class="number">4</span>] + <span class="number">89</span> * f[<span class="number">33</span>] - <span class="number">30</span> * f[<span class="number">31</span>] - <span class="number">45</span> * f[<span class="number">22</span>] + <span class="number">13</span> * f[<span class="number">14</span>] - <span class="number">29</span> * f[<span class="number">3</span>] + <span class="number">33</span> * f[<span class="number">10</span>] + <span class="number">54</span> * f[<span class="number">23</span>] + <span class="number">18</span> * f[<span class="number">30</span>] + <span class="number">88</span> * f[<span class="number">12</span>] + <span class="number">84</span> * f[<span class="number">34</span>] + <span class="number">66</span> * f[<span class="number">24</span>] + <span class="number">99</span> * f[<span class="number">16</span>] + <span class="number">-78</span> * f[<span class="number">32</span>] + <span class="number">-88</span> * f[<span class="number">11</span>] + <span class="number">-21</span> * f[<span class="number">35</span>] + <span class="number">25</span> * f[<span class="number">18</span>] + <span class="number">-81</span> * f[<span class="number">19</span>] - <span class="number">39</span> * f[<span class="number">29</span>] + <span class="number">15</span> * f[<span class="number">13</span>] + <span class="number">83</span> * f[<span class="number">26</span>] - <span class="number">28</span> * f[<span class="number">7</span>] + <span class="number">2</span> * f[<span class="number">25</span>] == <span class="number">-20428</span>)</span><br><span class="line">s.add(<span class="number">-97</span> * f[<span class="number">22</span>] + <span class="number">14</span> * f[<span class="number">33</span>] + <span class="number">-43</span> * f[<span class="number">11</span>] + <span class="number">40</span> * f[<span class="number">20</span>] + <span class="number">31</span> * f[<span class="number">13</span>] + <span class="number">44</span> * f[<span class="number">29</span>] + <span class="number">-68</span> * f[<span class="number">3</span>] + <span class="number">-36</span> * f[<span class="number">1</span>] + <span class="number">-38</span> * f[<span class="number">9</span>] + <span class="number">-7</span> * f[<span class="number">12</span>] + f[<span class="number">26</span>] + <span class="number">-50</span> * f[<span class="number">6</span>] + <span class="number">59</span> * f[<span class="number">8</span>] + <span class="number">88</span> * f[<span class="number">30</span>] + <span class="number">46</span> * f[<span class="number">0</span>] - <span class="number">34</span> * f[<span class="number">15</span>] + <span class="number">10</span> * f[<span class="number">4</span>] + <span class="number">84</span> * f[<span class="number">18</span>] + <span class="number">13</span> * f[<span class="number">7</span>] + <span class="number">14</span> * f[<span class="number">25</span>] - <span class="number">5</span> * f[<span class="number">16</span>] + <span class="number">10</span> * f[<span class="number">31</span>] + <span class="number">64</span> * f[<span class="number">28</span>] + <span class="number">97</span> * f[<span class="number">5</span>] + <span class="number">-7</span> * f[<span class="number">27</span>] + <span class="number">62</span> * f[<span class="number">14</span>] + <span class="number">60</span> * f[<span class="number">24</span>] + <span class="number">27</span> * f[<span class="number">34</span>] + <span class="number">-11</span> * f[<span class="number">10</span>] - <span class="number">31</span> * f[<span class="number">32</span>] - <span class="number">48</span> * f[<span class="number">19</span>] - <span class="number">55</span> * f[<span class="number">35</span>] - <span class="number">96</span> * f[<span class="number">2</span>] - <span class="number">83</span> * f[<span class="number">23</span>] == <span class="number">11973</span>)</span><br><span class="line">s.add(<span class="number">-99</span> * f[<span class="number">4</span>] + <span class="number">-57</span> * f[<span class="number">8</span>] + <span class="number">2</span> * f[<span class="number">7</span>] + <span class="number">57</span> * f[<span class="number">24</span>] + <span class="number">-54</span> * f[<span class="number">25</span>] + <span class="number">39</span> * f[<span class="number">29</span>] + <span class="number">-91</span> * f[<span class="number">1</span>] + <span class="number">-32</span> * f[<span class="number">20</span>] + <span class="number">-30</span> * f[<span class="number">11</span>] + <span class="number">16</span> * f[<span class="number">12</span>] + <span class="number">45</span> * f[<span class="number">17</span>] + <span class="number">90</span> * f[<span class="number">32</span>] + <span class="number">26</span> * f[<span class="number">5</span>] - <span class="number">59</span> * f[<span class="number">28</span>] + <span class="number">7</span> * f[<span class="number">2</span>] - <span class="number">88</span> * f[<span class="number">3</span>] + <span class="number">36</span> * f[<span class="number">15</span>] - <span class="number">73</span> * f[<span class="number">6</span>] - <span class="number">6</span> * f[<span class="number">27</span>] + <span class="number">99</span> * f[<span class="number">13</span>] - <span class="number">96</span> * f[<span class="number">0</span>] + <span class="number">-45</span> * f[<span class="number">26</span>] + <span class="number">-10</span> * f[<span class="number">35</span>] + <span class="number">-40</span> * f[<span class="number">9</span>] + <span class="number">97</span> * f[<span class="number">10</span>] + <span class="number">6</span> * f[<span class="number">22</span>] + <span class="number">58</span> * f[<span class="number">34</span>] + <span class="number">4</span> * f[<span class="number">31</span>] + <span class="number">55</span> * f[<span class="number">21</span>] - <span class="number">72</span> * f[<span class="number">16</span>] + <span class="number">27</span> * f[<span class="number">19</span>] + <span class="number">79</span> * f[<span class="number">23</span>] - <span class="number">28</span> * f[<span class="number">18</span>] - <span class="number">90</span> * f[<span class="number">30</span>] - <span class="number">6</span> * f[<span class="number">33</span>] + <span class="number">58</span> * f[<span class="number">14</span>] == <span class="number">-23186</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> s.check() == sat:</span><br><span class="line">    model = s.model()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">36</span>):</span><br><span class="line">      <span class="built_in">print</span> (<span class="built_in">chr</span>(model[f[i]].as_long().real), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> (<span class="string">&#x27;\nfinish&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>得到结果</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;@_FAKE_flag!_do_Y0u_know_SMC?&#125;</span><br></pre></td></tr></table></figure><p>提交一下发现不正确，说明这是一个假flag，提示我们这道题使用了SMC（self-modifying code）</p><h1 id="step-1：找到SMC位置和加密方法"><a href="#step-1：找到SMC位置和加密方法" class="headerlink" title="step 1：找到SMC位置和加密方法"></a>step 1：找到SMC位置和加密方法</h1><p>既然对某一个片段进行了加密，说明程序中肯定有一部分乱码（或者逻辑混乱的汇编代码）</p><p>在0x409080处找到一大段数字</p><p>交叉引用一下，定位到负责加密代码40699B</p><p>发现是一个简单异或，用刚才找到的一长串方程的那个函数与这段乱码进行逐位异或</p><h1 id="step-2：破解SMC"><a href="#step-2：破解SMC" class="headerlink" title="step 2：破解SMC"></a>step 2：破解SMC</h1><p>接下来手动patch一下</p><p>在二进制文件中找到两段代码的位置，进行异或，上网找个二进制文件修改的代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line">file_path = <span class="string">&quot;FAKE&quot;</span></span><br><span class="line">fr = <span class="built_in">open</span>(file_path, <span class="string">&quot;rb&quot;</span>)</span><br><span class="line">fw = <span class="built_in">open</span>(<span class="string">&#x27;modify_&#x27;</span>+file_path, <span class="string">&quot;wb&quot;</span>)</span><br><span class="line">data = fr.read()</span><br><span class="line">fw.write(data)</span><br><span class="line">fw.seek(<span class="number">0x1216</span>)</span><br><span class="line"></span><br><span class="line">fw.write(<span class="string">b&#x27;\xf3\x0f\x1e\xfa\x55\x48\x89\xe5\x48\x81\xec\x60\x01\x00\x00\x48&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x89\xbd\x28\xfe\xff\xff\x48\x8d\x95\x50\xff\xff\xff\xb8\x00\x00&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x00\x00\xb9\x12\x00\x00\x00\x48\x89\xd7\xf3\x48\xab\xc7\x85\xc0&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\xfe\xff\xff\xf6\xd6\x00\x00\xc7\x85\xc4\xfe\xff\xff\xa7\xee\x00&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x00\xc7\x85\xc8\xfe\xff\xff\xf7\xea\x00\x00\xc7\x85\xcc\xfe\xff&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\xff\x9f\xdf\x00\x00\xc7\x85\xd0\xfe\xff\xff\xcc\xdd\x00\x00\xc7&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x85\xd4\xfe\xff\xff\xae\xd9\x00\x00\xc7\x85\xd8\xfe\xff\xff\x32&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\xb6\x00\x00\xc7\x85\xdc\xfe\xff\xff\xc3\xce\x00\x00\xc7\x85\xe0&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\xfe\xff\xff\x4c\xd1\x00\x00\xc7\x85\xe4\xfe\xff\xff\x05\xc5\x00&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x00\xc7\x85\xe8\xfe\xff\xff\x8e\xc3\x00\x00\xc7\x85\xec\xfe\xff&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\xff\x9a\xac\x00\x00\xc7\x85\xf0\xfe\xff\xff\x6d\xaf\x00\x00\xc7&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x85\xf4\xfe\xff\xff\x9a\xb5\x00\x00\xc7\x85\xf8\xfe\xff\xff\xc8&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\xb3\x00\x00\xc7\x85\xfc\xfe\xff\xff\x3b\xad\x00\x00\xc7\x85\x00&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\xff\xff\xff\x4a\xab\x00\x00\xc7\x85\x04\xff\xff\xff\x50\xad\x00&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x00\xc7\x85\x08\xff\xff\xff\xce\xd6\x00\x00\xc7\x85\x0c\xff\xff&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\xff\xbc\xf1\x00\x00\xc7\x85\x10\xff\xff\xff\x12\xef\x00\x00\xc7&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x85\x14\xff\xff\xff\x1b\xe3\x00\x00\xc7\x85\x18\xff\xff\xff\x82&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\xe1\x00\x00\xc7\x85\x1c\xff\xff\xff\xb4\xd6\x00\x00\xc7\x85\x20&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\xff\xff\xff\xd1\xbe\x00\x00\xc7\x85\x24\xff\xff\xff\x52\xc7\x00&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x00\xc7\x85\x28\xff\xff\xff\xdd\xc1\x00\x00\xc7\x85\x2c\xff\xff&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\xff\x5b\xbc\x00\x00\xc7\x85\x30\xff\xff\xff\x20\xbb\x00\x00\xc7&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x85\x34\xff\xff\xff\x87\xc6\x00\x00\xc7\x85\x38\xff\xff\xff\x04&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\xb6\x00\x00\xc7\x85\x3c\xff\xff\xff\x55\xc5\x00\x00\xc7\x85\x40&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\xff\xff\xff\x25\xbd\x00\x00\xc7\x85\x44\xff\xff\xff\x3f\xb4\x00&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x00\xc7\x85\x48\xff\xff\xff\x16\xb4\x00\x00\xc7\x85\x4c\xff\xff&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\xff\x98\xb6\x00\x00\xc7\x85\x30\xfe\xff\xff\x68\x00\x00\x00\xc7&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x85\x34\xfe\xff\xff\x67\x00\x00\x00\xc7\x85\x38\xfe\xff\xff\x61&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x00\x00\x00\xc7\x85\x3c\xfe\xff\xff\x6d\x00\x00\x00\xc7\x85\x40&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\xfe\xff\xff\x65\x00\x00\x00\xc7\x85\x44\xfe\xff\xff\x7b\x00\x00&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x00\xc7\x85\x48\xfe\xff\xff\x40\x00\x00\x00\xc7\x85\x4c\xfe\xff&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\xff\x5f\x00\x00\x00\xc7\x85\x50\xfe\xff\xff\x46\x00\x00\x00\xc7&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x85\x54\xfe\xff\xff\x41\x00\x00\x00\xc7\x85\x58\xfe\xff\xff\x4b&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x00\x00\x00\xc7\x85\x5c\xfe\xff\xff\x45\x00\x00\x00\xc7\x85\x60&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\xfe\xff\xff\x5f\x00\x00\x00\xc7\x85\x64\xfe\xff\xff\x66\x00\x00&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x00\xc7\x85\x68\xfe\xff\xff\x6c\x00\x00\x00\xc7\x85\x6c\xfe\xff&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\xff\x61\x00\x00\x00\xc7\x85\x70\xfe\xff\xff\x67\x00\x00\x00\xc7&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x85\x74\xfe\xff\xff\x21\x00\x00\x00\xc7\x85\x78\xfe\xff\xff\x2d&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x00\x00\x00\xc7\x85\x7c\xfe\xff\xff\x64\x00\x00\x00\xc7\x85\x80&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\xfe\xff\xff\x6f\x00\x00\x00\xc7\x85\x84\xfe\xff\xff\x5f\x00\x00&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x00\xc7\x85\x88\xfe\xff\xff\x59\x00\x00\x00\xc7\x85\x8c\xfe\xff&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\xff\x30\x00\x00\x00\xc7\x85\x90\xfe\xff\xff\x75\x00\x00\x00\xc7&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x85\x94\xfe\xff\xff\x5f\x00\x00\x00\xc7\x85\x98\xfe\xff\xff\x6b&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x00\x00\x00\xc7\x85\x9c\xfe\xff\xff\x6f\x00\x00\x00\xc7\x85\xa0&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\xfe\xff\xff\x6e\x00\x00\x00\xc7\x85\xa4\xfe\xff\xff\x77\x00\x00&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x00\xc7\x85\xa8\xfe\xff\xff\x5f\x00\x00\x00\xc7\x85\xac\xfe\xff&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\xff\x53\x00\x00\x00\xc7\x85\xb0\xfe\xff\xff\x4d\x00\x00\x00\xc7&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x85\xb4\xfe\xff\xff\x43\x00\x00\x00\xc7\x85\xb8\xfe\xff\xff\x3f&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x00\x00\x00\xc7\x85\xbc\xfe\xff\xff\x7d\x00\x00\x00\xc7\x45\xfc&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x01\x00\x00\x00\xc7\x45\xf8\x00\x00\x00\x00\xe9\xb9\x00\x00\x00&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\xc7\x45\xf4\x00\x00\x00\x00\xe9\x9f\x00\x00\x00\xc7\x45\xf0\x00&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x00\x00\x00\xe9\x85\x00\x00\x00\x8b\x55\xf8\x89\xd0\x01\xc0\x01&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\xd0\x01\xc0\x89\xc2\x8b\x45\xf4\x01\xd0\x48\x98\x8b\xb4\x85\x50&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\xff\xff\xff\x8b\x55\xf8\x89\xd0\x01\xc0\x01\xd0\x01\xc0\x89\xc2&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x8b\x45\xf0\x01\xd0\x48\x98\x48\x8d\x14\x85\x00\x00\x00\x00\x48&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x8b\x85\x28\xfe\xff\xff\x48\x01\xd0\x8b\x00\x89\xc1\x8b\x55\xf0&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x89\xd0\x01\xc0\x01\xd0\x01\xc0\x89\xc2\x8b\x45\xf4\x01\xd0\x48&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x98\x8b\x84\x85\x30\xfe\xff\xff\x0f\xaf\xc8\x8b\x55\xf8\x89\xd0&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x01\xc0\x01\xd0\x01\xc0\x89\xc2\x8b\x45\xf4\x01\xd0\x8d\x14\x0e&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x48\x98\x89\x94\x85\x50\xff\xff\xff\x83\x45\xf0\x01\x83\x7d\xf0&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x05\x0f\x8e\x71\xff\xff\xff\x83\x45\xf4\x01\x83\x7d\xf4\x05\x0f&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x8e\x57\xff\xff\xff\x83\x45\xf8\x01\x83\x7d\xf8\x05\x0f\x8e\x3d&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\xff\xff\xff\xc7\x45\xec\x00\x00\x00\x00\xeb\x58\xc7\x45\xe8\x00&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x00\x00\x00\xeb\x45\x8b\x55\xec\x89\xd0\x01\xc0\x01\xd0\x01\xc0&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x89\xc2\x8b\x45\xe8\x01\xd0\x48\x98\x8b\x8c\x85\x50\xff\xff\xff&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x8b\x55\xec\x89\xd0\x01\xc0\x01\xd0\x01\xc0\x89\xc2\x8b\x45\xe8&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x01\xd0\x48\x98\x8b\x84\x85\xc0\xfe\xff\xff\x39\xc1\x74\x07\xc7&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x45\xfc\x00\x00\x00\x00\x83\x45\xe8\x01\x83\x7d\xe8\x05\x7e\xb5&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\x83\x45\xec\x01\x83\x7d\xec\x05\x7e\xa2\x8b\x45\xfc\xc9\xc3\x45&#x27;</span> )</span><br><span class="line">fw.write(<span class="string">b&#x27;\xec\x38\xc3\xc0\x38\x8b\x00\x01&#x27;</span>)</span><br><span class="line"></span><br><span class="line">fw.flush()</span><br><span class="line">fw.close()</span><br><span class="line">fr.close()</span><br></pre></td></tr></table></figure><h1 id="step-3：查看修改后的代码"><a href="#step-3：查看修改后的代码" class="headerlink" title="step 3：查看修改后的代码"></a>step 3：查看修改后的代码</h1><p>使用ida64打开修改后的文件</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br></pre></td><td class="code"><pre><span class="line">__int64 __usercall sub_401216@&lt;rax&gt;(__int64 a1@&lt;rbp&gt;, __int64 a2@&lt;rdi&gt;)</span><br><span class="line">&#123;</span><br><span class="line">  v54 = a1;</span><br><span class="line">  *(&amp;v54 - <span class="number">59</span>) = a2;</span><br><span class="line">  <span class="built_in">memset</span>(&amp;v47, <span class="number">0</span>, <span class="number">0x90</span>uLL);</span><br><span class="line">  v11 = <span class="number">55030</span>;</span><br><span class="line">  v12 = <span class="number">61095</span>;</span><br><span class="line">  v13 = <span class="number">60151</span>;</span><br><span class="line">  v14 = <span class="number">57247</span>;</span><br><span class="line">  v15 = <span class="number">56780</span>;</span><br><span class="line">  v16 = <span class="number">55726</span>;</span><br><span class="line">  v17 = <span class="number">46642</span>;</span><br><span class="line">  v18 = <span class="number">52931</span>;</span><br><span class="line">  v19 = <span class="number">53580</span>;</span><br><span class="line">  v20 = <span class="number">50437</span>;</span><br><span class="line">  v21 = <span class="number">50062</span>;</span><br><span class="line">  v22 = <span class="number">44186</span>;</span><br><span class="line">  v23 = <span class="number">44909</span>;</span><br><span class="line">  v24 = <span class="number">46490</span>;</span><br><span class="line">  v25 = <span class="number">46024</span>;</span><br><span class="line">  v26 = <span class="number">44347</span>;</span><br><span class="line">  v27 = <span class="number">43850</span>;</span><br><span class="line">  v28 = <span class="number">44368</span>;</span><br><span class="line">  v29 = <span class="number">54990</span>;</span><br><span class="line">  v30 = <span class="number">61884</span>;</span><br><span class="line">  v31 = <span class="number">61202</span>;</span><br><span class="line">  v32 = <span class="number">58139</span>;</span><br><span class="line">  v33 = <span class="number">57730</span>;</span><br><span class="line">  v34 = <span class="number">54964</span>;</span><br><span class="line">  v35 = <span class="number">48849</span>;</span><br><span class="line">  v36 = <span class="number">51026</span>;</span><br><span class="line">  v37 = <span class="number">49629</span>;</span><br><span class="line">  v38 = <span class="number">48219</span>;</span><br><span class="line">  v39 = <span class="number">47904</span>;</span><br><span class="line">  v40 = <span class="number">50823</span>;</span><br><span class="line">  v41 = <span class="number">46596</span>;</span><br><span class="line">  v42 = <span class="number">50517</span>;</span><br><span class="line">  v43 = <span class="number">48421</span>;</span><br><span class="line">  v44 = <span class="number">46143</span>;</span><br><span class="line">  v45 = <span class="number">46102</span>;</span><br><span class="line">  v46 = <span class="number">46744</span>;</span><br><span class="line">  *((_DWORD *)&amp;v54 - <span class="number">116</span>) = <span class="number">104</span>;</span><br><span class="line">  *((_DWORD *)&amp;v54 - <span class="number">115</span>) = <span class="number">103</span>;</span><br><span class="line">  *((_DWORD *)&amp;v54 - <span class="number">114</span>) = <span class="number">97</span>;</span><br><span class="line">  *((_DWORD *)&amp;v54 - <span class="number">113</span>) = <span class="number">109</span>;</span><br><span class="line">  *((_DWORD *)&amp;v54 - <span class="number">112</span>) = <span class="number">101</span>;</span><br><span class="line">  *((_DWORD *)&amp;v54 - <span class="number">111</span>) = <span class="number">123</span>;</span><br><span class="line">  *((_DWORD *)&amp;v54 - <span class="number">110</span>) = <span class="number">64</span>;</span><br><span class="line">  *((_DWORD *)&amp;v54 - <span class="number">109</span>) = <span class="number">95</span>;</span><br><span class="line">  *((_DWORD *)&amp;v54 - <span class="number">108</span>) = <span class="number">70</span>;</span><br><span class="line">  *((_DWORD *)&amp;v54 - <span class="number">107</span>) = <span class="number">65</span>;</span><br><span class="line">  *((_DWORD *)&amp;v54 - <span class="number">106</span>) = <span class="number">75</span>;</span><br><span class="line">  *((_DWORD *)&amp;v54 - <span class="number">105</span>) = <span class="number">69</span>;</span><br><span class="line">  *((_DWORD *)&amp;v54 - <span class="number">104</span>) = <span class="number">95</span>;</span><br><span class="line">  *((_DWORD *)&amp;v54 - <span class="number">103</span>) = <span class="number">102</span>;</span><br><span class="line"></span><br><span class="line">  *((_DWORD *)&amp;v54 - <span class="number">102</span>) = <span class="number">108</span>;</span><br><span class="line">  *((_DWORD *)&amp;v54 - <span class="number">101</span>) = <span class="number">97</span>;</span><br><span class="line">  *((_DWORD *)&amp;v54 - <span class="number">100</span>) = <span class="number">103</span>;</span><br><span class="line">  *((_DWORD *)&amp;v54 - <span class="number">99</span>) = <span class="number">33</span>;</span><br><span class="line">  *((_DWORD *)&amp;v54 - <span class="number">98</span>) = <span class="number">45</span>;</span><br><span class="line">  *((_DWORD *)&amp;v54 - <span class="number">97</span>) = <span class="number">100</span>;</span><br><span class="line">  *((_DWORD *)&amp;v54 - <span class="number">96</span>) = <span class="number">111</span>;</span><br><span class="line">  *((_DWORD *)&amp;v54 - <span class="number">95</span>) = <span class="number">95</span>;</span><br><span class="line">  *((_DWORD *)&amp;v54 - <span class="number">94</span>) = <span class="number">89</span>;</span><br><span class="line">  *((_DWORD *)&amp;v54 - <span class="number">93</span>) = <span class="number">48</span>;</span><br><span class="line">  *((_DWORD *)&amp;v54 - <span class="number">92</span>) = <span class="number">117</span>;</span><br><span class="line">  *((_DWORD *)&amp;v54 - <span class="number">91</span>) = <span class="number">95</span>;</span><br><span class="line">  *((_DWORD *)&amp;v54 - <span class="number">90</span>) = <span class="number">107</span>;</span><br><span class="line">  *((_DWORD *)&amp;v54 - <span class="number">89</span>) = <span class="number">111</span>;</span><br><span class="line">  v3 = <span class="number">110</span>;</span><br><span class="line">  v4 = <span class="number">119</span>;</span><br><span class="line">  v5 = <span class="number">95</span>;</span><br><span class="line">  v6 = <span class="number">83</span>;</span><br><span class="line">  v7 = <span class="number">77</span>;</span><br><span class="line">  v8 = <span class="number">67</span>;</span><br><span class="line">  v9 = <span class="number">63</span>;</span><br><span class="line">  v10 = <span class="number">125</span>;</span><br><span class="line">  v53 = <span class="number">1</span>;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">5</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span> ( j = <span class="number">0</span>; j &lt;= <span class="number">5</span>; ++j )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">for</span> ( k = <span class="number">0</span>; k &lt;= <span class="number">5</span>; ++k )</span><br><span class="line">        *((_DWORD *)&amp;v54 + <span class="number">6</span> * i + j - <span class="number">44</span>) += *((_DWORD *)&amp;v54 + <span class="number">6</span> * k + j - <span class="number">116</span>)</span><br><span class="line">                                            * *(_DWORD *)(<span class="number">4L</span>L * (<span class="number">6</span> * i + k) + *(&amp;v54 - <span class="number">59</span>));<span class="comment">// 矩阵乘法</span></span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> ( l = <span class="number">0</span>; l &lt;= <span class="number">5</span>; ++l )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">for</span> ( m = <span class="number">0</span>; m &lt;= <span class="number">5</span>; ++m )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( *((_DWORD *)&amp;v54 + <span class="number">6</span> * l + m - <span class="number">44</span>) != *((_DWORD *)&amp;v54 + <span class="number">6</span> * l + m - <span class="number">80</span>) )<span class="comment">// 与v11到v46比较</span></span><br><span class="line">        v53 = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> v53;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现判断函数发生了变化</p><p>第一个三重循环明显是一个矩阵乘法，第二个则是简单比较，由于这里指针有点绕，使用了gdb对每一项进行了判断</p><p>首先在第二个循环打断点</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">.text:00000000004015FB loc_4015FB:                             ; CODE XREF: sub_401216+42E↓j</span><br><span class="line">.text:00000000004015FB                 mov     edx, [rbp-14h]</span><br><span class="line">.text:00000000004015FE                 mov     eax, edx</span><br><span class="line">.text:0000000000401600                 add     eax, eax</span><br><span class="line">.text:0000000000401602                 add     eax, edx</span><br><span class="line">.text:0000000000401604                 add     eax, eax</span><br><span class="line">.text:0000000000401606                 mov     edx, eax</span><br><span class="line">.text:0000000000401608                 mov     eax, [rbp-18h]</span><br><span class="line">.text:000000000040160B                 add     eax, edx</span><br><span class="line">.text:000000000040160D                 cdqe</span><br><span class="line">.text:000000000040160F                 mov     ecx, [rbp+rax*4-0B0h]</span><br><span class="line">.text:0000000000401616                 mov     edx, [rbp-14h]</span><br><span class="line">.text:0000000000401619                 mov     eax, edx</span><br><span class="line">.text:000000000040161B                 add     eax, eax</span><br><span class="line">.text:000000000040161D                 add     eax, edx</span><br><span class="line">.text:000000000040161F                 add     eax, eax</span><br><span class="line">.text:0000000000401621                 mov     edx, eax</span><br><span class="line">.text:0000000000401623                 mov     eax, [rbp-18h]</span><br><span class="line">.text:0000000000401626                 add     eax, edx</span><br><span class="line">.text:0000000000401628                 cdqe</span><br><span class="line">.text:000000000040162A                 mov     eax, [rbp+rax*4-140h]</span><br><span class="line">.text:0000000000401631                 cmp     ecx, eax</span><br><span class="line">.text:0000000000401633                 jz      short loc_40163C</span><br><span class="line">.text:0000000000401635                 mov     dword ptr [rbp-4], 0</span><br></pre></td></tr></table></figure><p>在cmp命令处打断点，查看ecx和eax寄存器的值，发现是拿计算结果和v11-v46进行比较</p><p>随后查看第一个大循环，关键点显然是乘法</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.text:000000000040159E                 imul    ecx, eax</span><br></pre></td></tr></table></figure><p>打上断点后，发现是拿输入的6*6矩阵和104-125这段由36个数字构成的矩阵进行乘法</p><h1 id="step-4：进行求解"><a href="#step-4：进行求解" class="headerlink" title="step 4：进行求解"></a>step 4：进行求解</h1><p>所以接下来只需要求解矩阵即可，这里还是使用了z3</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">s = Solver()</span><br><span class="line"></span><br><span class="line">f = [ Int(<span class="string">&#x27;f%d&#x27;</span> % i) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">36</span>) ]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">36</span>):</span><br><span class="line">    s.add(f[i] &gt; <span class="number">0x20</span>)</span><br><span class="line">    s.add(f[i] &lt; <span class="number">0x7f</span>)</span><br><span class="line"></span><br><span class="line">s.add(f[ <span class="number">0</span>] == <span class="built_in">ord</span>(<span class="string">&#x27;h&#x27;</span>))</span><br><span class="line">s.add(f[ <span class="number">1</span>] == <span class="built_in">ord</span>(<span class="string">&#x27;g&#x27;</span>))</span><br><span class="line">s.add(f[ <span class="number">2</span>] == <span class="built_in">ord</span>(<span class="string">&#x27;a&#x27;</span>))</span><br><span class="line">s.add(f[ <span class="number">3</span>] == <span class="built_in">ord</span>(<span class="string">&#x27;m&#x27;</span>))</span><br><span class="line">s.add(f[ <span class="number">4</span>] == <span class="built_in">ord</span>(<span class="string">&#x27;e&#x27;</span>))</span><br><span class="line">s.add(f[ <span class="number">5</span>] == <span class="built_in">ord</span>(<span class="string">&#x27;&#123;&#x27;</span>))</span><br><span class="line">s.add(f[<span class="number">35</span>] == <span class="built_in">ord</span>(<span class="string">&#x27;&#125;&#x27;</span>))</span><br><span class="line"></span><br><span class="line">a = [<span class="number">104</span>, <span class="number">103</span>, <span class="number">97</span>, <span class="number">109</span>, <span class="number">101</span>, <span class="number">123</span>, <span class="number">64</span>, <span class="number">95</span>, <span class="number">70</span>, <span class="number">65</span>, <span class="number">75</span>, <span class="number">69</span>, <span class="number">95</span>, <span class="number">102</span>, <span class="number">108</span>, <span class="number">97</span>, <span class="number">103</span>, <span class="number">33</span>, <span class="number">45</span>, <span class="number">100</span>, <span class="number">111</span>, <span class="number">95</span>, <span class="number">89</span>, <span class="number">48</span>, <span class="number">117</span>, <span class="number">95</span>, <span class="number">107</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">119</span>, <span class="number">95</span>, <span class="number">83</span>, <span class="number">77</span>, <span class="number">67</span>, <span class="number">63</span>, <span class="number">125</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> a:</span><br><span class="line">    print(<span class="built_in">chr</span>(c), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">print()</span><br><span class="line"></span><br><span class="line">ans = [<span class="number">55030</span>, <span class="number">61095</span>, <span class="number">60151</span>, <span class="number">57247</span>, <span class="number">56780</span>, <span class="number">55726</span>, <span class="number">46642</span>, <span class="number">52931</span>, <span class="number">53580</span>, <span class="number">50437</span>, <span class="number">50062</span>, <span class="number">44186</span>, <span class="number">44909</span>, <span class="number">46490</span>, <span class="number">46024</span>, <span class="number">44347</span>, <span class="number">43850</span>, <span class="number">44368</span>, <span class="number">54990</span>, <span class="number">61884</span>, <span class="number">61202</span>, <span class="number">58139</span>, <span class="number">57730</span>, <span class="number">54964</span>, <span class="number">48849</span>, <span class="number">51026</span>, <span class="number">49629</span>, <span class="number">48219</span>, <span class="number">47904</span>, <span class="number">50823</span>, <span class="number">46596</span>, <span class="number">50517</span>, <span class="number">48421</span>, <span class="number">46143</span>, <span class="number">46102</span>, <span class="number">46744</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">6</span>):</span><br><span class="line">        s.add(f[<span class="number">6</span> * i] * a[j] + f[<span class="number">6</span> * i + <span class="number">1</span>] * a[<span class="number">6</span> + j] + f[<span class="number">6</span> * i + <span class="number">2</span>] * a[<span class="number">12</span> + j] + f[<span class="number">6</span> * i + <span class="number">3</span>] * a[<span class="number">18</span> + j] + f[<span class="number">6</span> * i + <span class="number">4</span>] * a[<span class="number">24</span> + j] + f[<span class="number">6</span> * i + <span class="number">5</span>] * a[<span class="number">30</span> + j] == ans[<span class="number">6</span> * i + j])</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> s.check() == sat:</span><br><span class="line">    model = s.model()</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">36</span>):</span><br><span class="line">        <span class="built_in">print</span> (<span class="built_in">chr</span>(model[f[i]].as_long().real), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;\nfinish&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>得到真正的flag</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;E@sy_Se1f-Modifying_C0oodee33&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;from HGAME2021&lt;/p&gt;</summary>
    
    
    
    
    <category term="CTF" scheme="https://s0uthwood.github.io/tags/CTF/"/>
    
    <category term="Reverse" scheme="https://s0uthwood.github.io/tags/Reverse/"/>
    
  </entry>
  
  <entry>
    <title>Reverse入门</title>
    <link href="https://s0uthwood.github.io/2021/01/15/Reverse%E5%85%A5%E9%97%A8/"/>
    <id>https://s0uthwood.github.io/2021/01/15/Reverse%E5%85%A5%E9%97%A8/</id>
    <published>2021-01-15T10:29:48.000Z</published>
    <updated>2021-01-15T10:45:55.270Z</updated>
    
    <content type="html"><![CDATA[<p>几道BUUCTF上的Reverse入门题题解</p><a id="more"></a><h1 id="内涵的软件"><a href="#内涵的软件" class="headerlink" title="内涵的软件"></a>内涵的软件</h1><p>首先使用file命令，发现exe是32位的，将其拖入ida中</p><p>进入main函数</p><p>点击进入main0函数</p><p>可以看到一串v2字符串</p><p>结合程序运行时出现的文字：”这里本来应该是答案的“</p><p>猜测v2就是答案</p><p>直接提交</p><p>发现不对</p><p>将开头修改为flag</p><p>提交后直接通过</p><h1 id="新年快乐"><a href="#新年快乐" class="headerlink" title="新年快乐"></a>新年快乐</h1><p>首先使用file命令查看exe文件信息，发现是32位</p><p>尝试运行发现是要求输入flag</p><p>拖入ida进行静态分析</p><p>发现只有一个start函数，ida各种报错，无法分析</p><p>猜测使用了upx壳</p><p>使用exeinfope软件进行查看，upx壳实锤</p><p>脱壳后再次拖入ida</p><p>发现v4为”HappyNewYear!”</p><p>对于输入v5，直接与v4进行strncmp的比较</p><p>因此只需要与v4相同即可</p><p>尝试后发现没问题</p><p>套上flag提交</p><p>成功</p><h1 id="guessgame"><a href="#guessgame" class="headerlink" title="guessgame"></a>guessgame</h1><p>使用软件，发现是一个猜数游戏</p><p>拖入ida分析</p><p>发现整个代码与flag没有任何关系，就是一个猜测随机数的游戏</p><p>于是猜测flag隐藏在字符串常量中</p><p>进入字符串常量最顶部，发现如下字符串：</p><p>BJD{S1mple_ReV3r5e_W1th_0D_0r_IDA}</p><p>即为flag</p><h1 id="helloword"><a href="#helloword" class="headerlink" title="helloword"></a>helloword</h1><p>下载后发现是apk文件</p><p>首先将apk后缀更改为zip</p><p>解压后发现文件夹中含有一个classes.dex文件</p><p>使用dex2jar软件将其转换为jar文件</p><p>使用jd-gui.jar对其进行逆向分析</p><p>在源代码中有com.example.helloword文件夹，用过Java的都知道com.example是什么东西，因此进入该目录下，发现有个MainActivity.class文件，查看源代码，发现有个flag字符串并对其使用了一个比较方法(compareTo)，猜测这个就是需要的flag，提交后发现正确</p><h1 id="xor"><a href="#xor" class="headerlink" title="xor"></a>xor</h1><p>拖入ida进行静态分析，发现对输入进行了异或处理，处理结果符合某个特定的函数值即可求解</p><p>看到一个for循环，是对每个字符与前面一个字符进行异或</p><p>根据异或的性质可知，只需要再异或一次就能还原</p><p>所以从后往前进行异或</p><p>随便写个脚本计算一下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> flag[<span class="number">35</span>];</span><br><span class="line">    flag[<span class="number">0</span>] = <span class="string">&#x27;f&#x27;</span>;</span><br><span class="line">    flag[<span class="number">1</span>] = <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    flag[<span class="number">2</span>] = <span class="string">&#x27;k&#x27;</span>;</span><br><span class="line">    flag[<span class="number">3</span>] = <span class="string">&#x27;\f&#x27;</span>;</span><br><span class="line">    flag[<span class="number">4</span>] = <span class="string">&#x27;w&#x27;</span>;</span><br><span class="line">    flag[<span class="number">5</span>] = <span class="string">&#x27;&amp;&#x27;</span>;</span><br><span class="line">    flag[<span class="number">6</span>] = <span class="string">&#x27;O&#x27;</span>;</span><br><span class="line">    flag[<span class="number">7</span>] = <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">    flag[<span class="number">8</span>] = <span class="string">&#x27;@&#x27;</span>;</span><br><span class="line">    flag[<span class="number">9</span>] = <span class="string">&#x27;\x11&#x27;</span>;</span><br><span class="line">    flag[<span class="number">10</span>] = <span class="string">&#x27;x&#x27;</span>;</span><br><span class="line">    flag[<span class="number">11</span>] = <span class="string">&#x27;\r&#x27;</span>;</span><br><span class="line">    flag[<span class="number">12</span>] = <span class="string">&#x27;Z&#x27;</span>;</span><br><span class="line">    flag[<span class="number">13</span>] = <span class="string">&#x27;;&#x27;</span>;</span><br><span class="line">    flag[<span class="number">14</span>] = <span class="string">&#x27;U&#x27;</span>;</span><br><span class="line">    flag[<span class="number">15</span>] = <span class="string">&#x27;\x11&#x27;</span>;</span><br><span class="line">    flag[<span class="number">16</span>] = <span class="string">&#x27;p&#x27;</span>;</span><br><span class="line">    flag[<span class="number">17</span>] = <span class="string">&#x27;\x19&#x27;</span>;</span><br><span class="line">    flag[<span class="number">18</span>] = <span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">    flag[<span class="number">19</span>] = <span class="string">&#x27;\x1F&#x27;</span>;</span><br><span class="line">    flag[<span class="number">20</span>] = <span class="string">&#x27;v&#x27;</span>;</span><br><span class="line">    flag[<span class="number">21</span>] = <span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line">    flag[<span class="number">22</span>] = <span class="string">&#x27;M&#x27;</span>;</span><br><span class="line">    flag[<span class="number">23</span>] = <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">    flag[<span class="number">24</span>] = <span class="string">&#x27;D&#x27;</span>;</span><br><span class="line">    flag[<span class="number">25</span>] = <span class="string">&#x27;\x0E&#x27;</span>;</span><br><span class="line">    flag[<span class="number">26</span>] = <span class="string">&#x27;g&#x27;</span>;</span><br><span class="line">    flag[<span class="number">27</span>] = <span class="number">6</span>;</span><br><span class="line">    flag[<span class="number">28</span>] = <span class="string">&#x27;h&#x27;</span>;</span><br><span class="line">    flag[<span class="number">29</span>] = <span class="string">&#x27;\x0F&#x27;</span>;</span><br><span class="line">    flag[<span class="number">30</span>] = <span class="string">&#x27;G&#x27;</span>;</span><br><span class="line">    flag[<span class="number">31</span>] = <span class="string">&#x27;2&#x27;</span>;</span><br><span class="line">    flag[<span class="number">32</span>] = <span class="string">&#x27;O&#x27;</span>;</span><br><span class="line">    flag[<span class="number">33</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">32</span>; i &gt;= <span class="number">1</span>; --i) &#123;</span><br><span class="line">        flag[i] ^= flag[i - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, flag);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>运行结果为：</p><p><code>flag&#123;QianQiuWanDai_YiTongJiangHu&#125;</code></p><p>提交</p><p>成功</p><h1 id="reverse3"><a href="#reverse3" class="headerlink" title="reverse3"></a>reverse3</h1><p>进行初步检查后拖入ida进行静态分析</p><p>发现对于输入内容使用了一个函数进行变换</p><p>查看字符串发现使用了一个”ABCD…+/=”的字符串，猜测使用了BASE64编码</p><p>回到主函数，发现使用了一个<code>str2</code>与base64后的结果进行比较</p><p>查看字符串可知：<code>str2=e3nifIH9b_C@n@dH</code></p><p>明显不是base64的结果</p><p>回到主函数发现对base64结果进行了加法操作</p><p>编程进行反向操作后得到：<code>e2lfbDB2ZV95b3V9</code></p><p>使用在线工具可得解码结果：<code>&#123;i_l0ve_you&#125;</code></p><p>套上flag提交，通过</p><h1 id="不一样的flag"><a href="#不一样的flag" class="headerlink" title="不一样的flag"></a>不一样的flag</h1><p>首先测试一下软件</p><p>发现好像是个前进后退的游戏</p><p>猜测是一个迷宫</p><p>进入ida静态分析</p><p>发现当<code>v8[x]==35</code>时为成功<code>v8[x]==49</code>时失败</p><p>查阅ASCII发现35对应<code>#</code>，49对应<code>1</code>因此查找同时含有这两个字符的字符串：</p><p><code>*11110100001010000101111#</code></p><p>总长度为24，与<code>5*v4+v5</code>的最大值一致，因此忽略<code>-41</code></p><p>要求是不能进入1的位置而到达#</p><p>因此进行简单的推导即可得到要求的序列（完全可以写个代码跑一下，但由于这个题比较简单，直接手算即可）</p><p>得到输入序列：<code>222441144222</code></p><p>套上flag提交即可</p><p>注：此题可以看作是一个5*5的迷宫：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">* 1 1 1 1</span><br><span class="line">0 1 0 0 0</span><br><span class="line">0 1 0 1 0</span><br><span class="line">0 0 0 1 0</span><br><span class="line">1 1 1 1 #</span><br></pre></td></tr></table></figure><p>1是障碍，0是可以走的路，*是起点，#是重点</p><p>这样就与运行程序时的 up, down, left, right 对应上了</p><h1 id="SimpleRev"><a href="#SimpleRev" class="headerlink" title="SimpleRev"></a>SimpleRev</h1><p>拖入ida</p><p>发现这道题涉及到类型转换，需要将int转换为char插入到字符串后面</p><p>需要注意的是在转换时要把顺序倒过来</p><p>转换后text为<code>killshadow</code>，key为<code>ADSFKNDCLS</code></p><p>随后将key转换为小写字母，即<code>adsfkndcls</code></p><p>编程枚举求解</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">int</span> main&#123;</span><br><span class="line"><span class="keyword">char</span> text[<span class="number">25</span>];</span><br><span class="line">    <span class="built_in">strcpy</span>(text, <span class="string">&quot;killshadow&quot;</span>);</span><br><span class="line">    <span class="keyword">char</span> key[<span class="number">25</span>];</span><br><span class="line">    <span class="built_in">strcpy</span>(key, <span class="string">&quot;adsfkndcls&quot;</span>);</span><br><span class="line">    <span class="keyword">char</span> str2[<span class="number">25</span>];</span><br><span class="line">    <span class="keyword">int</span> textlen = <span class="built_in">strlen</span>(text);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; textlen; ++i) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">char</span> c = <span class="string">&#x27;A&#x27;</span>; c &lt;= <span class="string">&#x27;z&#x27;</span>; ++c) &#123;</span><br><span class="line">            <span class="keyword">if</span> (c &lt;= <span class="number">96</span> || c &gt; <span class="number">122</span>) &#123;</span><br><span class="line">                <span class="keyword">if</span> (c &gt; <span class="number">64</span> &amp;&amp; c &lt;= <span class="number">90</span>) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(text[i] == (c - <span class="number">39</span> - key[i] + <span class="number">97</span>) % <span class="number">26</span> + <span class="number">97</span>) &#123;</span><br><span class="line">                        <span class="built_in">printf</span>(<span class="string">&quot;%d%c &quot;</span>, i, c);</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">if</span>(text[i] == (c - <span class="number">39</span> - key[i] + <span class="number">97</span>) % <span class="number">26</span> + <span class="number">97</span>) &#123;</span><br><span class="line">                    <span class="built_in">printf</span>(<span class="string">&quot;%d%c &quot;</span>, i, c);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>每个位置均可以算出两个解，一个是大写字母，一个是小写字母</p><p>全部挑选大写字母后提交，可以通过</p><p>想尝试一下其它组合方案是否也可以，但可惜提交平台不允许多次提交</p><h1 id="Java逆向解密"><a href="#Java逆向解密" class="headerlink" title="Java逆向解密"></a>Java逆向解密</h1><p>将.class文件拖入jd-gui.jar中进行逆向</p><p>可以得到Reverse.class源代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Reverse</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">    Scanner s = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">    System.out.println(<span class="string">&quot;Please input the flag );</span></span><br><span class="line"><span class="string">    String str = s.next();</span></span><br><span class="line"><span class="string">    System.out.println(&quot;</span>Your input is );</span><br><span class="line">    System.out.println(str);</span><br><span class="line">    <span class="keyword">char</span>[] stringArr = str.toCharArray();</span><br><span class="line">    Encrypt(stringArr);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Encrypt</span><span class="params">(<span class="keyword">char</span>[] arr)</span> </span>&#123;</span><br><span class="line">    ArrayList&lt;Integer&gt; Resultlist = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; arr.length; i++) &#123;</span><br><span class="line">      <span class="keyword">int</span> result = arr[i] + <span class="number">64</span> ^ <span class="number">0x20</span>;</span><br><span class="line">      Resultlist.add(Integer.valueOf(result));</span><br><span class="line">    &#125; </span><br><span class="line">    <span class="keyword">int</span>[] KEY = &#123; </span><br><span class="line">        <span class="number">180</span>, <span class="number">136</span>, <span class="number">137</span>, <span class="number">147</span>, <span class="number">191</span>, <span class="number">137</span>, <span class="number">147</span>, <span class="number">191</span>, <span class="number">148</span>, <span class="number">136</span>, </span><br><span class="line">        <span class="number">133</span>, <span class="number">191</span>, <span class="number">134</span>, <span class="number">140</span>, <span class="number">129</span>, <span class="number">135</span>, <span class="number">191</span>, <span class="number">65</span> &#125;;</span><br><span class="line">    ArrayList&lt;Integer&gt; KEYList = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; KEY.length; j++)</span><br><span class="line">      KEYList.add(Integer.valueOf(KEY[j])); </span><br><span class="line">    System.out.println(<span class="string">&quot;Result:&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> (Resultlist.equals(KEYList)) &#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;Congratulations);</span></span><br><span class="line"><span class="string">    &#125; else &#123;</span></span><br><span class="line"><span class="string">      System.err.println(&quot;</span>Error);</span><br><span class="line">    &#125; </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这段代码就是将输入的每个字符加64后与0x20进行异或</p><p>因此使用python进行暴力破解（其实完全可以反向计算就出来的，当时大意了）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">key = [<span class="number">180</span>, <span class="number">136</span>, <span class="number">137</span>, <span class="number">147</span>, <span class="number">191</span>, <span class="number">137</span>, <span class="number">147</span>, <span class="number">191</span>, <span class="number">148</span>, <span class="number">136</span>, <span class="number">133</span>, <span class="number">191</span>, <span class="number">134</span>, <span class="number">140</span>, <span class="number">129</span>, <span class="number">135</span>, <span class="number">191</span>, <span class="number">65</span>]</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> key:</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0x21</span>, <span class="number">0x80</span>):</span><br><span class="line">        <span class="keyword">if</span> (c + <span class="number">64</span>) ^ <span class="number">0x20</span> == k:</span><br><span class="line">            <span class="built_in">print</span> <span class="built_in">chr</span>(c)</span><br></pre></td></tr></table></figure><p>得到<code>This_is_the_flag_!</code></p><p>提交，通过</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;几道BUUCTF上的Reverse入门题题解&lt;/p&gt;</summary>
    
    
    
    
    <category term="CTF" scheme="https://s0uthwood.github.io/tags/CTF/"/>
    
    <category term="Reverse" scheme="https://s0uthwood.github.io/tags/Reverse/"/>
    
  </entry>
  
  <entry>
    <title>Fabric-系统链码</title>
    <link href="https://s0uthwood.github.io/2020/12/18/Fabric-%E7%B3%BB%E7%BB%9F%E9%93%BE%E7%A0%81/"/>
    <id>https://s0uthwood.github.io/2020/12/18/Fabric-%E7%B3%BB%E7%BB%9F%E9%93%BE%E7%A0%81/</id>
    <published>2020-12-18T05:40:28.000Z</published>
    <updated>2021-01-15T09:41:40.595Z</updated>
    
    <content type="html"><![CDATA[<p>Fabric系统链码部分</p><a id="more"></a><h1 id="系统链码"><a href="#系统链码" class="headerlink" title="系统链码"></a>系统链码</h1><p><img data-src="系统链码结构图.png" alt="系统链码结构图"></p><h2 id="与普通链码对比"><a href="#与普通链码对比" class="headerlink" title="与普通链码对比"></a>与普通链码对比</h2><div class="table-container"><table><thead><tr><th style="text-align:center"></th><th style="text-align:left">系统链码</th><th>普通链码</th></tr></thead><tbody><tr><td style="text-align:center">链码源码</td><td style="text-align:left">无main函数</td><td>有main函数</td></tr><tr><td style="text-align:center">运行空间</td><td style="text-align:left">背书节点进程</td><td>Docker</td></tr><tr><td style="text-align:center">调用方式</td><td style="text-align:left">网络+进程内部</td><td>网络</td></tr><tr><td style="text-align:center">启动参数</td><td style="text-align:left">内置</td><td>动态输入</td></tr><tr><td style="text-align:center">通信方式</td><td style="text-align:left">Golang的通道机制</td><td>网络</td></tr><tr><td style="text-align:center">数据存取</td><td style="text-align:left">Golang的通道+本地文件</td><td>网络</td></tr><tr><td style="text-align:center">升级方式</td><td style="text-align:left">和背书节点一起升级</td><td>单独升级</td></tr><tr><td style="text-align:center">背书策略</td><td style="text-align:left">无</td><td>有</td></tr></tbody></table></div><h1 id="系统链码在Peer节点上的注册与部署"><a href="#系统链码在Peer节点上的注册与部署" class="headerlink" title="系统链码在Peer节点上的注册与部署"></a>系统链码在Peer节点上的注册与部署</h1><p>peer节点存在于docker容器中，在启动时通过执行<code>peer node start</code>命令来启动peer节点。</p><blockquote><p>/internal/peer/node/start.go</p></blockquote><p>start命令的入口函数为serve函数。</p><p>以下源代码中仅保留部署系统链码的部分。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">serve</span><span class="params">(args []<span class="keyword">string</span>)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">    <span class="comment">// Initialize chaincode service</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">// deploy system chaincodes</span></span><br><span class="line"><span class="keyword">for</span> _, cc := <span class="keyword">range</span> []scc.SelfDescribingSysCC&#123;lsccInst, csccInst, qsccInst, lifecycleSCC&#125; &#123;</span><br><span class="line"><span class="keyword">if</span> enabled, ok := chaincodeConfig.SCCWhitelist[cc.Name()]; !ok || !enabled &#123;</span><br><span class="line">logger.Infof(<span class="string">&quot;not deploying chaincode %s as it is not enabled&quot;</span>, cc.Name())</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125; <span class="comment">// 判断链码的设置是否为enabled</span></span><br><span class="line">scc.DeploySysCC(cc, chaincodeSupport) <span class="comment">// 部署系统链码</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">logger.Infof(<span class="string">&quot;Deployed system chaincodes&quot;</span>)</span><br><span class="line"><span class="comment">//...</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>通过遍历scc.SelfDescribingSysCC返回值，调用scc.DeploySysCC函数。</p><p>找到scc源文件：</p><blockquote><p>corn/scc/scc.go</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> SelfDescribingSysCC <span class="keyword">interface</span> &#123;</span><br><span class="line"><span class="comment">//Unique name of the system chaincode</span></span><br><span class="line">Name() <span class="keyword">string</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Chaincode returns the underlying chaincode</span></span><br><span class="line">Chaincode() shim.Chaincode</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><code>SelfDescribingSysCC</code>的第二个方法为<code>Chaincode()</code>返回值为<code>shim.Chaincode</code>类型。在<code>core\scc\cscc\configure.go</code>中发现如下代码：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e *PeerConfiger)</span> <span class="title">Chaincode</span><span class="params">()</span> <span class="title">shim</span>.<span class="title">Chaincode</span></span> &#123; <span class="keyword">return</span> e &#125;</span><br></pre></td></tr></table></figure><p>可知<code>start.go</code>中的<code>cc</code>为每个链码的配置</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> PeerConfiger <span class="keyword">struct</span> &#123;</span><br><span class="line">policyChecker          policy.PolicyChecker</span><br><span class="line">configMgr              config.Manager</span><br><span class="line">aclProvider            aclmgmt.ACLProvider</span><br><span class="line">deployedCCInfoProvider ledger.DeployedChaincodeInfoProvider</span><br><span class="line">legacyLifecycle        plugindispatcher.LifecycleResources</span><br><span class="line">newLifecycle           plugindispatcher.CollectionAndLifecycleResources</span><br><span class="line">peer                   *peer.Peer</span><br><span class="line">bccsp                  bccsp.BCCSP</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面是<code>DeploySysCC</code>的代码</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> ChaincodeStreamHandler <span class="keyword">interface</span> &#123;</span><br><span class="line">HandleChaincodeStream(ccintf.ChaincodeStream) error</span><br><span class="line">LaunchInProc(packageID <span class="keyword">string</span>) &lt;-<span class="keyword">chan</span> <span class="keyword">struct</span>&#123;&#125;</span><br><span class="line">&#125; <span class="comment">// 负责peer节点与链码之间的通信</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">DeploySysCC</span><span class="params">(sysCC SelfDescribingSysCC, chaincodeStreamHandler ChaincodeStreamHandler)</span></span> &#123;</span><br><span class="line">sysccLogger.Infof(<span class="string">&quot;deploying system chaincode &#x27;%s&#x27;&quot;</span>, sysCC.Name())</span><br><span class="line"></span><br><span class="line">ccid := ChaincodeID(sysCC.Name())</span><br><span class="line">done := chaincodeStreamHandler.LaunchInProc(ccid)</span><br><span class="line"></span><br><span class="line">peerRcvCCSend := <span class="built_in">make</span>(<span class="keyword">chan</span> *pb.ChaincodeMessage)</span><br><span class="line">ccRcvPeerSend := <span class="built_in">make</span>(<span class="keyword">chan</span> *pb.ChaincodeMessage)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 并行传输数据</span></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">stream := newInProcStream(peerRcvCCSend, ccRcvPeerSend)</span><br><span class="line"><span class="keyword">defer</span> stream.CloseSend()</span><br><span class="line"></span><br><span class="line">sysccLogger.Debugf(<span class="string">&quot;starting chaincode-support stream for  %s&quot;</span>, ccid)</span><br><span class="line">err := chaincodeStreamHandler.HandleChaincodeStream(stream)</span><br><span class="line">sysccLogger.Criticalf(<span class="string">&quot;shim stream ended with err: %v&quot;</span>, err)</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line"><span class="keyword">go</span> <span class="function"><span class="keyword">func</span><span class="params">(sysCC SelfDescribingSysCC)</span></span> &#123;</span><br><span class="line">stream := newInProcStream(ccRcvPeerSend, peerRcvCCSend)</span><br><span class="line"><span class="keyword">defer</span> stream.CloseSend()</span><br><span class="line"></span><br><span class="line">sysccLogger.Debugf(<span class="string">&quot;chaincode started for %s&quot;</span>, ccid)</span><br><span class="line">err := shim.StartInProc(ccid, stream, sysCC.Chaincode())</span><br><span class="line">sysccLogger.Criticalf(<span class="string">&quot;system chaincode ended with err: %v&quot;</span>, err)</span><br><span class="line">&#125;(sysCC)</span><br><span class="line">&lt;-done</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>因此，在serve.go代码中，对lscc,qscc,cscc三个系统链码进行相应的初始创建，随后根据配置信息部署到peer节点中。</p><h1 id="查询系统链码-Querier-System-Chaincode-QSCC"><a href="#查询系统链码-Querier-System-Chaincode-QSCC" class="headerlink" title="查询系统链码 (Querier System Chaincode, QSCC)"></a>查询系统链码 (<em>Querier System Chaincode</em>, QSCC)</h1><h2 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h2><blockquote><p>/core/scc/qscc/query.go</p></blockquote><p>在所有Peer节点上运行，提供账本查询接口，包括了区块查询、交易查询等。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> qscc</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span>                       <span class="comment">// 格式化IO</span></span><br><span class="line"><span class="string">&quot;strconv&quot;</span>                   <span class="comment">// 数据类型转换</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;github.com/hyperledger/fabric-chaincode-go/shim&quot;</span> <span class="comment">// shim包提供API访问链码chaincode的状态变量，chaincode用来和peer沟通的接口</span></span><br><span class="line">pb <span class="string">&quot;github.com/hyperledger/fabric-protos-go/peer&quot;</span> <span class="comment">// 调用.pb.go文件，由proto文件生成</span></span><br><span class="line"><span class="string">&quot;github.com/hyperledger/fabric/common/flogging&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/hyperledger/fabric/core/aclmgmt&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/hyperledger/fabric/core/ledger&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/hyperledger/fabric/protoutil&quot;</span>         <span class="comment">// Proto Buffer的通用方法</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// LedgerGetter gets the PeerLedger associated with a channel.</span></span><br><span class="line"><span class="keyword">type</span> LedgerGetter <span class="keyword">interface</span> &#123;</span><br><span class="line">GetLedger(cid <span class="keyword">string</span>) ledger.PeerLedger</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// New returns an instance of QSCC.</span></span><br><span class="line"><span class="comment">// Typically this is called once per peer.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">New</span><span class="params">(aclProvider aclmgmt.ACLProvider, ledgers LedgerGetter)</span> *<span class="title">LedgerQuerier</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;LedgerQuerier&#123;</span><br><span class="line">aclProvider: aclProvider,</span><br><span class="line">ledgers:     ledgers,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// (e *LedgerQuerier) 表示这是LedgerQuerier结构体的方法</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e *LedgerQuerier)</span> <span class="title">Name</span><span class="params">()</span> <span class="title">string</span></span>              &#123; <span class="keyword">return</span> <span class="string">&quot;qscc&quot;</span> &#125;</span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e *LedgerQuerier)</span> <span class="title">Chaincode</span><span class="params">()</span> <span class="title">shim</span>.<span class="title">Chaincode</span></span> &#123; <span class="keyword">return</span> e &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// LedgerQuerier implements the ledger query functions, including:</span></span><br><span class="line"><span class="comment">// - GetChainInfo returns BlockchainInfo</span></span><br><span class="line"><span class="comment">// - GetBlockByNumber returns a block</span></span><br><span class="line"><span class="comment">// - GetBlockByHash returns a block</span></span><br><span class="line"><span class="comment">// - GetTransactionByID returns a transaction</span></span><br><span class="line"><span class="keyword">type</span> LedgerQuerier <span class="keyword">struct</span> &#123;</span><br><span class="line">aclProvider aclmgmt.ACLProvider</span><br><span class="line">ledgers     LedgerGetter</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> qscclogger = flogging.MustGetLogger(<span class="string">&quot;qscc&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将函数名定义为字符串常量，用于invoke的第一个arg参数</span></span><br><span class="line"><span class="keyword">const</span> (</span><br><span class="line">GetChainInfo       <span class="keyword">string</span> = <span class="string">&quot;GetChainInfo&quot;</span></span><br><span class="line">GetBlockByNumber   <span class="keyword">string</span> = <span class="string">&quot;GetBlockByNumber&quot;</span></span><br><span class="line">GetBlockByHash     <span class="keyword">string</span> = <span class="string">&quot;GetBlockByHash&quot;</span></span><br><span class="line">GetTransactionByID <span class="keyword">string</span> = <span class="string">&quot;GetTransactionByID&quot;</span></span><br><span class="line">GetBlockByTxID     <span class="keyword">string</span> = <span class="string">&quot;GetBlockByTxID&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Init is called once per chain when the chain is created.</span></span><br><span class="line"><span class="comment">// This allows the chaincode to initialize any variables on the ledger prior</span></span><br><span class="line"><span class="comment">// to any transaction execution on the chain.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e *LedgerQuerier)</span> <span class="title">Init</span><span class="params">(stub shim.ChaincodeStubInterface)</span> <span class="title">pb</span>.<span class="title">Response</span></span> &#123;</span><br><span class="line">qscclogger.Info(<span class="string">&quot;Init QSCC&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> shim.Success(<span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 调用Invoke时，args[0]为查询函数名，args[1]为chain id，在加到stub包之前为暂时的id</span></span><br><span class="line"><span class="comment">// 每个函数都需要额外的参数，如下:</span></span><br><span class="line"><span class="comment">// # GetChainInfo: 返回一个以字节为单位的BlockchainInfo对象</span></span><br><span class="line"><span class="comment">// # GetBlockByNumber: 返回args[2]中所指定的块</span></span><br><span class="line"><span class="comment">// # GetBlockByHash: 返回args[2]中的块哈希值所指定的块</span></span><br><span class="line"><span class="comment">// # GetTransactionByID: 返回args[2]中的id所指定的交易事务</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e *LedgerQuerier)</span> <span class="title">Invoke</span><span class="params">(stub shim.ChaincodeStubInterface)</span> <span class="title">pb</span>.<span class="title">Response</span></span> &#123; <span class="comment">// 通过args调用内部函数</span></span><br><span class="line">args := stub.GetArgs() <span class="comment">// stub是RPC中客户端与服务器端传输的消息包，将其解包并获取args</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">// args数量小于2时，返回错误信息</span></span><br><span class="line">    <span class="comment">// 第一个args为调用的函数名，第二个args为chain ID</span></span><br><span class="line">fname := <span class="keyword">string</span>(args[<span class="number">0</span>])</span><br><span class="line">cid := <span class="keyword">string</span>(args[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line">sp, err := stub.GetSignedProposal() <span class="comment">// 获取签名交易提议的解码对象，类型为SignedProposal</span></span><br><span class="line"></span><br><span class="line">name, err := protoutil.InvokedChaincodeName(sp.ProposalBytes)</span><br><span class="line"></span><br><span class="line">targetLedger := e.ledgers.GetLedger(cid)</span><br><span class="line"></span><br><span class="line">qscclogger.Debugf(<span class="string">&quot;Invoke function: %s on chain: %s&quot;</span>, fname, cid)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Handle ACL: （ACL：访问控制权限）</span></span><br><span class="line">res := getACLResource(fname)</span><br><span class="line"><span class="keyword">if</span> err = e.aclProvider.CheckACL(res, cid, sp); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> shim.Error(fmt.Sprintf(<span class="string">&quot;access denied for [%s][%s]: [%s]&quot;</span>, fname, cid, err))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 调用相应的函数并传递参数</span></span><br><span class="line"><span class="keyword">switch</span> fname &#123;</span><br><span class="line"><span class="keyword">case</span> GetTransactionByID:</span><br><span class="line"><span class="keyword">return</span> getTransactionByID(targetLedger, args[<span class="number">2</span>])</span><br><span class="line"><span class="keyword">case</span> GetBlockByNumber:</span><br><span class="line"><span class="keyword">return</span> getBlockByNumber(targetLedger, args[<span class="number">2</span>])</span><br><span class="line"><span class="keyword">case</span> GetBlockByHash:</span><br><span class="line"><span class="keyword">return</span> getBlockByHash(targetLedger, args[<span class="number">2</span>])</span><br><span class="line"><span class="keyword">case</span> GetChainInfo:</span><br><span class="line"><span class="keyword">return</span> getChainInfo(targetLedger)</span><br><span class="line"><span class="keyword">case</span> GetBlockByTxID:</span><br><span class="line"><span class="keyword">return</span> getBlockByTxID(targetLedger, args[<span class="number">2</span>])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> shim.Error(fmt.Sprintf(<span class="string">&quot;Requested function %s not found.&quot;</span>, fname))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 以下为五个private方法，只能通过invoke进行调用。</span></span><br><span class="line"><span class="comment">// 五个方法在进行异常处理后，调用账本中对应的方法，并将成功或错误结果通过shim发送</span></span><br><span class="line"><span class="comment">// - getTransactionByID: 返回对应id的交易内容</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getTransactionByID</span><span class="params">(vledger ledger.PeerLedger, tid []<span class="keyword">byte</span>)</span> <span class="title">pb</span>.<span class="title">Response</span></span> &#123;</span><br><span class="line"><span class="comment">// 异常：交易为空</span></span><br><span class="line">processedTran, err := vledger.GetTransactionByID(<span class="keyword">string</span>(tid)) <span class="comment">// 调用ledger.PeerLedger中的方法</span></span><br><span class="line">bytes, err := protoutil.Marshal(processedTran) <span class="comment">// 使用proto工具进行编排 my_<span class="doctag">TODO:</span> read protoutil</span></span><br><span class="line"><span class="keyword">return</span> shim.Success(bytes)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//以下四个方法的整体结果与第一个相似</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getBlockByNumber</span><span class="params">(vledger ledger.PeerLedger, number []<span class="keyword">byte</span>)</span> <span class="title">pb</span>.<span class="title">Response</span></span> &#123;</span><br><span class="line">bnum, err := strconv.ParseUint(<span class="keyword">string</span>(number), <span class="number">10</span>, <span class="number">64</span>) <span class="comment">// 转换成uint型</span></span><br><span class="line">block, err := vledger.GetBlockByNumber(bnum) <span class="comment">// 调用账本中的方法</span></span><br><span class="line">bytes, err := protoutil.Marshal(block) </span><br><span class="line"><span class="keyword">return</span> shim.Success(bytes)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getBlockByHash</span><span class="params">(vledger ledger.PeerLedger, hash []<span class="keyword">byte</span>)</span> <span class="title">pb</span>.<span class="title">Response</span></span> &#123;</span><br><span class="line">block, err := vledger.GetBlockByHash(hash)</span><br><span class="line">bytes, err := protoutil.Marshal(block)</span><br><span class="line"><span class="keyword">return</span> shim.Success(bytes)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getChainInfo</span><span class="params">(vledger ledger.PeerLedger)</span> <span class="title">pb</span>.<span class="title">Response</span></span> &#123;</span><br><span class="line">binfo, err := vledger.GetBlockchainInfo()</span><br><span class="line">bytes, err := protoutil.Marshal(binfo)</span><br><span class="line"><span class="keyword">return</span> shim.Success(bytes)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getBlockByTxID</span><span class="params">(vledger ledger.PeerLedger, rawTxID []<span class="keyword">byte</span>)</span> <span class="title">pb</span>.<span class="title">Response</span></span> &#123;</span><br><span class="line">txID := <span class="keyword">string</span>(rawTxID)</span><br><span class="line">block, err := vledger.GetBlockByTxID(txID)</span><br><span class="line">bytes, err := protoutil.Marshal(block)</span><br><span class="line"><span class="keyword">return</span> shim.Success(bytes)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getACLResource</span><span class="params">(fname <span class="keyword">string</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="string">&quot;qscc/&quot;</span> + fname</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Get方法"><a href="#Get方法" class="headerlink" title="Get方法"></a>Get方法</h3><p>QSCC提供的方法都是get方法，用于从通道中获取各种数据。</p><h1 id="配置系统链码-Configuration-System-Chaincode-CSCC"><a href="#配置系统链码-Configuration-System-Chaincode-CSCC" class="headerlink" title="配置系统链码 (Configuration System Chaincode, CSCC)"></a>配置系统链码 (<em>Configuration System Chaincode</em>, CSCC)</h1><blockquote><p>/core/scc/cscc/configure.go</p></blockquote><p>CSCC管理peer节点上通道相关的信息并执行通道配置交易</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> PeerConfiger <span class="keyword">struct</span> &#123;</span><br><span class="line">policyChecker          policy.PolicyChecker</span><br><span class="line">configMgr              config.Manager</span><br><span class="line">aclProvider            aclmgmt.ACLProvider</span><br><span class="line">deployedCCInfoProvider ledger.DeployedChaincodeInfoProvider</span><br><span class="line">legacyLifecycle        plugindispatcher.LifecycleResources</span><br><span class="line">newLifecycle           plugindispatcher.CollectionAndLifecycleResources</span><br><span class="line">peer                   *peer.Peer</span><br><span class="line">bccsp                  bccsp.BCCSP</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>CSCC中提供了PeerConfiger类。这个类实现了peer节点配置信息的处理。对于所有的从排序服务中进来的配置交易，都会调用这个系统链码来处理交易。</p><p>CSCC提供了三种方法</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> (</span><br><span class="line">JoinChain      <span class="keyword">string</span> = <span class="string">&quot;JoinChain&quot;</span></span><br><span class="line">GetConfigBlock <span class="keyword">string</span> = <span class="string">&quot;GetConfigBlock&quot;</span></span><br><span class="line">GetChannels    <span class="keyword">string</span> = <span class="string">&quot;GetChannels&quot;</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure><h2 id="JoinChain方法"><a href="#JoinChain方法" class="headerlink" title="JoinChain方法"></a>JoinChain方法</h2><p>JoinChain 方法用来使一个peer加入通道。它需要一个参数，即通道配置区块的序列化的protobuf byte。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">block, err := protoutil.UnmarshalBlock(args[<span class="number">1</span>])</span><br><span class="line">cid, err := protoutil.GetChainIDFromBlock(block)</span><br><span class="line"><span class="comment">// 1. 检查配置块的格式和要求</span></span><br><span class="line"><span class="comment">// 2. 检查加入的政策</span></span><br><span class="line"><span class="comment">// 初始化txsFilter</span></span><br><span class="line">txsFilter := util.TxValidationFlags(block.Metadata.Metadata[common.BlockMetadataIndex_TRANSACTIONS_FILTER])</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(txsFilter) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="comment">// add array of validation code hardcoded to valid</span></span><br><span class="line">txsFilter = util.NewTxValidationFlagsSetValue(<span class="built_in">len</span>(block.Data.Data), pb.TxValidationCode_VALID)</span><br><span class="line">block.Metadata.Metadata[common.BlockMetadataIndex_TRANSACTIONS_FILTER] = txsFilter</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> e.joinChain(cid, block, e.deployedCCInfoProvider, e.legacyLifecycle, e.newLifecycle)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="GetConfigBlock方法"><a href="#GetConfigBlock方法" class="headerlink" title="GetConfigBlock方法"></a>GetConfigBlock方法</h2><p>这个方法用于获取给定通道的当前的配置区块。需要一个参数：通道名字的bytes形式。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> GetConfigBlock:</span><br><span class="line"><span class="comment">// 2. check policy</span></span><br><span class="line"><span class="keyword">if</span> err = e.aclProvider.CheckACL(resources.Cscc_GetConfigBlock, <span class="keyword">string</span>(args[<span class="number">1</span>]), sp); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> shim.Error(fmt.Sprintf(<span class="string">&quot;access denied for [%s][%s]: %s&quot;</span>, fname, args[<span class="number">1</span>], err))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> e.getConfigBlock(args[<span class="number">1</span>])</span><br></pre></td></tr></table></figure><h2 id="GetChannel方法"><a href="#GetChannel方法" class="headerlink" title="GetChannel方法"></a>GetChannel方法</h2><p>这个方法用于获取peer节点目前所加入的通道。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">case</span> GetChannels:</span><br><span class="line"><span class="comment">// 2. check get channels policy</span></span><br><span class="line"><span class="keyword">if</span> err = e.aclProvider.CheckACL(resources.Cscc_GetChannels, <span class="string">&quot;&quot;</span>, sp); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> shim.Error(fmt.Sprintf(<span class="string">&quot;access denied for [%s]: %s&quot;</span>, fname, err))</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> e.getChannels()</span><br></pre></td></tr></table></figure><h1 id="生命周期系统链码-Life-Cycle-System-Chaincode-LSCC"><a href="#生命周期系统链码-Life-Cycle-System-Chaincode-LSCC" class="headerlink" title="生命周期系统链码 (Life Cycle System Chaincode, LSCC)"></a>生命周期系统链码 (<em>Life Cycle System Chaincode</em>, LSCC)</h1><p>LSCC主要管理链码的生命周期，主要包括：</p><ul><li>在peer节点上安装链码</li><li>在通道上部署和升级链码</li><li>用户从运行中的链码获取信息</li></ul><h2 id="链码的生命周期"><a href="#链码的生命周期" class="headerlink" title="链码的生命周期"></a>链码的生命周期</h2><h3 id="打包链码"><a href="#打包链码" class="headerlink" title="打包链码"></a>打包链码</h3><p>在被安装到peer节点之前，链码需要被打包进一个<code>.tar.gz</code>文件，其中包含两个文件：”metadata.json”和另一个包含链码文件的文件”code.tar.gz”</p><p>“metadata.json”包含了指定链码语言、代码路径、以及包标签的JSON文件。</p><h3 id="安装链码"><a href="#安装链码" class="headerlink" title="安装链码"></a>安装链码</h3><p>每个要执行和背书交易的peer节点上都需要安装链码包。安装完成后，peer节点会构造链码。一般建议每个组织下的所有peer使用相同的链码包。</p><h3 id="批准链码定义"><a href="#批准链码定义" class="headerlink" title="批准链码定义"></a>批准链码定义</h3><p>通过 <strong>链码定义</strong> 来管理链码。当通道成员批准一个链码定义，这个批准便作为一个组织在接受链码参数方面的投票。这些同意的组织定义允许通道成员在链码可以在通道上使用之前达成一致意见（同意链码运行在此通道上）。</p><p>链码定义包含以下参数（需要在组织之间保持一致）：<strong>名称</strong>、<strong>版本</strong>、<strong>序列号</strong>、<strong>背书策略</strong>、<strong>私有数据集合配置</strong>、<strong>ECSS/VSCC插件</strong>、<strong>初始化</strong></p><h3 id="提交链码定义到通道"><a href="#提交链码定义到通道" class="headerlink" title="提交链码定义到通道"></a>提交链码定义到通道</h3><p>足够多的成员同意一个链码定义后，某个组织能够提交定义到通道。提交交易首先发送给通道成员的peer节点，peer节点会查询链码定义的被同意状况，确认组织同意后为其背书，交易随后被提交到排序服务，排序服务会把链码定义提交给通道。</p><h2 id="源代码-1"><a href="#源代码-1" class="headerlink" title="源代码"></a>源代码</h2><p>部署时的config</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">lsccInst := &amp;lscc.SCC&#123;</span><br><span class="line">BuiltinSCCs: builtinSCCs,</span><br><span class="line">    <span class="comment">// type: FilesystemSupport</span></span><br><span class="line">    <span class="comment">// Support提供了一些静态函数的实现</span></span><br><span class="line">Support: &amp;lscc.SupportImpl&#123;</span><br><span class="line">GetMSPIDs: peerInstance.GetMSPIDs,</span><br><span class="line">&#125;,</span><br><span class="line">    <span class="comment">// type: sysccprovider.SystemChaincodeProvider</span></span><br><span class="line">    <span class="comment">// SCCProvider是用于访问系统其他部分的接口</span></span><br><span class="line">SCCProvider:        &amp;lscc.PeerShim&#123;Peer: peerInstance&#125;,</span><br><span class="line">    <span class="comment">// type: aclmgmt.ACLProvider</span></span><br><span class="line">    <span class="comment">// ACLProvider负责访问权限控制</span></span><br><span class="line">ACLProvider:        aclProvider, </span><br><span class="line">GetMSPIDs:          peerInstance.GetMSPIDs,</span><br><span class="line">    <span class="comment">// type: policy.PolicyChecker</span></span><br><span class="line">    <span class="comment">// PolicyChecker是用于执行访问控制的接口</span></span><br><span class="line">PolicyChecker:      policyChecker,</span><br><span class="line">BCCSP:              factory.GetDefault(),</span><br><span class="line">BuildRegistry:      buildRegistry,</span><br><span class="line">ChaincodeBuilder:   containerRouter,</span><br><span class="line">EbMetadataProvider: ebMetadataProvider,</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>/core/scc/lscc/lscc.go</p></blockquote><p><code>Invoke</code>代码的形式与QSCC部分类似，都是使用switch语句选择所调用的方法（将函数名定义为常量）</p><p>由于代码过长，以下代码省略异常处理部分：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(lscc *SCC)</span> <span class="title">Invoke</span><span class="params">(stub shim.ChaincodeStubInterface)</span> <span class="title">pb</span>.<span class="title">Response</span></span> &#123;</span><br><span class="line">args := stub.GetArgs()</span><br><span class="line"></span><br><span class="line">function := <span class="keyword">string</span>(args[<span class="number">0</span>]) <span class="comment">// 第一个参数是函数名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> function &#123;</span><br><span class="line"><span class="keyword">case</span> INSTALL:</span><br><span class="line">depSpec := args[<span class="number">1</span>]</span><br><span class="line">err := lscc.executeInstall(stub, depSpec) <span class="comment">// 根据第二个参数 deployment spec 安装链码</span></span><br><span class="line"><span class="keyword">return</span> shim.Success([]<span class="keyword">byte</span>(<span class="string">&quot;OK&quot;</span>))</span><br><span class="line"><span class="keyword">case</span> DEPLOY, UPGRADE:</span><br><span class="line"><span class="comment">// 至少有三个参数： 函数名，链码名和deployment spec</span></span><br><span class="line"></span><br><span class="line">channel := <span class="keyword">string</span>(args[<span class="number">1</span>])</span><br><span class="line">        </span><br><span class="line">ac, exists := lscc.SCCProvider.GetApplicationConfig(channel) <span class="comment">// 通过第二个参数获取配置</span></span><br><span class="line"></span><br><span class="line">depSpec := args[<span class="number">2</span>]</span><br><span class="line">cds := &amp;pb.ChaincodeDeploymentSpec&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可选参数：</span></span><br><span class="line"><span class="comment">// 第四个参数是 已编组的 SignaturePolicyEnvelope 代表了背书政策</span></span><br><span class="line"><span class="comment">// 第五个参数是 escc名</span></span><br><span class="line"><span class="comment">// 第六个参数是 vscc名</span></span><br><span class="line"><span class="comment">// 第七个参数是 一个已编组的 CollectionConfigPackage 类</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 第四个参数：</span></span><br><span class="line"><span class="keyword">var</span> EP []<span class="keyword">byte</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(args) &gt; <span class="number">3</span> &amp;&amp; <span class="built_in">len</span>(args[<span class="number">3</span>]) &gt; <span class="number">0</span> &#123;</span><br><span class="line">EP = args[<span class="number">3</span>] <span class="comment">// EP为一个背书政策</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">mspIDs := lscc.GetMSPIDs(channel)</span><br><span class="line">p := policydsl.SignedByAnyMember(mspIDs) <span class="comment">// 根据通道的mspID获取背书政策？</span></span><br><span class="line">EP, err = protoutil.Marshal(p) <span class="comment">// 将结果进行编组</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第五个参数：</span></span><br><span class="line"><span class="keyword">var</span> escc []<span class="keyword">byte</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(args) &gt; <span class="number">4</span> &amp;&amp; <span class="built_in">len</span>(args[<span class="number">4</span>]) &gt; <span class="number">0</span> &#123;</span><br><span class="line">escc = args[<span class="number">4</span>]</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">escc = []<span class="keyword">byte</span>(<span class="string">&quot;escc&quot;</span>) <span class="comment">// 默认为escc</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 第六个参数：</span></span><br><span class="line"><span class="keyword">var</span> vscc []<span class="keyword">byte</span></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(args) &gt; <span class="number">5</span> &amp;&amp; <span class="built_in">len</span>(args[<span class="number">5</span>]) &gt; <span class="number">0</span> &#123;</span><br><span class="line">vscc = args[<span class="number">5</span>]</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">vscc = []<span class="keyword">byte</span>(<span class="string">&quot;vscc&quot;</span>) <span class="comment">// 默认为vscc</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 如果有第七个参数：</span></span><br><span class="line"><span class="keyword">var</span> collectionsConfig []<span class="keyword">byte</span></span><br><span class="line"><span class="keyword">if</span> ac.Capabilities().PrivateChannelData() &amp;&amp; <span class="built_in">len</span>(args) &gt; <span class="number">6</span> &#123;</span><br><span class="line">collectionsConfig = args[<span class="number">6</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将所有的参数传入executeDeployOrUpgrade方法中执行</span></span><br><span class="line">cd, err := lscc.executeDeployOrUpgrade(stub, channel, cds, EP, escc, vscc, collectionsConfig, function)</span><br><span class="line"><span class="keyword">return</span> shim.Success(cdbytes)</span><br><span class="line"><span class="keyword">case</span> CCEXISTS, CHAINCODEEXISTS, GETDEPSPEC, GETDEPLOYMENTSPEC, GETCCDATA, GETCHAINCODEDATA:</span><br><span class="line"><span class="comment">// 变量个数必须为3</span></span><br><span class="line">channel := <span class="keyword">string</span>(args[<span class="number">1</span>])</span><br><span class="line">ccname := <span class="keyword">string</span>(args[<span class="number">2</span>])</span><br><span class="line"></span><br><span class="line">cdbytes, err := lscc.getCCInstance(stub, ccname) <span class="comment">// 获取实例</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> function &#123;</span><br><span class="line"><span class="keyword">case</span> CCEXISTS, CHAINCODEEXISTS:</span><br><span class="line">cd, err := lscc.getChaincodeData(ccname, cdbytes) <span class="comment">// 获取链码数据</span></span><br><span class="line"><span class="keyword">case</span> GETCCDATA, GETCHAINCODEDATA:</span><br><span class="line"><span class="keyword">return</span> shim.Success(cdbytes)</span><br><span class="line"><span class="keyword">case</span> GETDEPSPEC, GETDEPLOYMENTSPEC:</span><br><span class="line">_, depspecbytes, err := lscc.getCCCode(ccname, cdbytes)</span><br><span class="line"><span class="keyword">return</span> shim.Success(depspecbytes)</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="built_in">panic</span>(<span class="string">&quot;unreachable&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">case</span> GETCHAINCODES, GETCHAINCODESALIAS:</span><br><span class="line"><span class="comment">// 变量个数必须为1</span></span><br><span class="line"><span class="keyword">return</span> lscc.getChaincodes(stub) <span class="comment">// 调用对应方法</span></span><br><span class="line"><span class="keyword">case</span> GETINSTALLEDCHAINCODES, GETINSTALLEDCHAINCODESALIAS:</span><br><span class="line"><span class="comment">// 变量个数必须为1</span></span><br><span class="line"><span class="keyword">return</span> lscc.getInstalledChaincodes() <span class="comment">// 调用对应方法</span></span><br><span class="line"><span class="keyword">case</span> GETCOLLECTIONSCONFIG, GETCOLLECTIONSCONFIGALIAS:</span><br><span class="line"><span class="comment">// 变量个数必须为2</span></span><br><span class="line">chaincodeName := <span class="keyword">string</span>(args[<span class="number">1</span>])</span><br><span class="line"><span class="keyword">return</span> lscc.getChaincodeCollectionData(stub, chaincodeName) <span class="comment">// 调用对应方法</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> shim.Error(InvalidFunctionErr(function).Error())</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="Install方法"><a href="#Install方法" class="headerlink" title="Install方法"></a>Install方法</h3><p>用于存储chaincode程序到peer的文件系统，需要一个参数，及chancode deployment spec的序列化protobuf bytes。</p><h3 id="Deploy方法"><a href="#Deploy方法" class="headerlink" title="Deploy方法"></a>Deploy方法</h3><p>用于在给定的通道上实例化合约，可以接受五个参数，前两个参数是必须的：通道名称与chaincode deployment spec。另外三个参数为：倍数策略、背书系统合约的名字和验证系统合约的名字。</p><h3 id="Upgrade方法"><a href="#Upgrade方法" class="headerlink" title="Upgrade方法"></a>Upgrade方法</h3><p>用于升级合约</p><h3 id="Get方法-1"><a href="#Get方法-1" class="headerlink" title="Get方法"></a>Get方法</h3><p>剩下的get方法都用于获取相应的合约数据</p><h1 id="背书系统链码-Endorser-System-Chaincode-ESCC"><a href="#背书系统链码-Endorser-System-Chaincode-ESCC" class="headerlink" title="背书系统链码 (Endorser System Chaincode, ESCC)"></a>背书系统链码 (<em>Endorser System Chaincode</em>, ESCC)</h1><p>在背书节点上运行，对交易结束进行结构转换和签名背书。</p><blockquote><p>/core/endorser/endorser.go</p></blockquote><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> endorser</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;context&quot;</span></span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"><span class="string">&quot;strconv&quot;</span></span><br><span class="line"><span class="string">&quot;time&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;github.com/golang/protobuf/proto&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/hyperledger/fabric-chaincode-go/shim&quot;</span></span><br><span class="line">pb <span class="string">&quot;github.com/hyperledger/fabric-protos-go/peer&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/hyperledger/fabric-protos-go/transientstore&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/hyperledger/fabric/common/flogging&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/hyperledger/fabric/common/util&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/hyperledger/fabric/core/chaincode/lifecycle&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/hyperledger/fabric/core/common/ccprovider&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/hyperledger/fabric/core/ledger&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/hyperledger/fabric/internal/pkg/identity&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/hyperledger/fabric/msp&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/hyperledger/fabric/protoutil&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/pkg/errors&quot;</span></span><br><span class="line"><span class="string">&quot;go.uber.org/zap&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> endorserLogger = flogging.MustGetLogger(<span class="string">&quot;endorser&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">// The Jira issue that documents Endorser flow along with its relationship to</span></span><br><span class="line"><span class="comment">// the lifecycle chaincode - https://jira.hyperledger.org/browse/FAB-181</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//go:generate counterfeiter -o fake/prvt_data_distributor.go --fake-name PrivateDataDistributor . PrivateDataDistributor</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> PrivateDataDistributor <span class="keyword">interface</span> &#123;</span><br><span class="line">DistributePrivateData(channel <span class="keyword">string</span>, txID <span class="keyword">string</span>, privateData *transientstore.TxPvtReadWriteSetWithConfigInfo, blkHt <span class="keyword">uint64</span>) error</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Support contains functions that the endorser requires to execute its tasks</span></span><br><span class="line"><span class="keyword">type</span> Support <span class="keyword">interface</span> &#123;</span><br><span class="line">identity.SignerSerializer</span><br><span class="line"><span class="comment">// GetTxSimulator returns the transaction simulator for the specified ledger</span></span><br><span class="line"><span class="comment">// a client may obtain more than one such simulator; they are made unique</span></span><br><span class="line"><span class="comment">// by way of the supplied txid</span></span><br><span class="line">GetTxSimulator(ledgername <span class="keyword">string</span>, txid <span class="keyword">string</span>) (ledger.TxSimulator, error)</span><br><span class="line"></span><br><span class="line"><span class="comment">// GetHistoryQueryExecutor gives handle to a history query executor for the</span></span><br><span class="line"><span class="comment">// specified ledger</span></span><br><span class="line">GetHistoryQueryExecutor(ledgername <span class="keyword">string</span>) (ledger.HistoryQueryExecutor, error)</span><br><span class="line"></span><br><span class="line"><span class="comment">// GetTransactionByID retrieves a transaction by id</span></span><br><span class="line">GetTransactionByID(chid, txID <span class="keyword">string</span>) (*pb.ProcessedTransaction, error)</span><br><span class="line"></span><br><span class="line"><span class="comment">// IsSysCC returns true if the name matches a system chaincode&#x27;s</span></span><br><span class="line"><span class="comment">// system chaincode names are system, chain wide</span></span><br><span class="line">IsSysCC(name <span class="keyword">string</span>) <span class="keyword">bool</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Execute - execute proposal, return original response of chaincode</span></span><br><span class="line">Execute(txParams *ccprovider.TransactionParams, name <span class="keyword">string</span>, input *pb.ChaincodeInput) (*pb.Response, *pb.ChaincodeEvent, error)</span><br><span class="line"></span><br><span class="line"><span class="comment">// ExecuteLegacyInit - executes a deployment proposal, return original response of chaincode</span></span><br><span class="line">ExecuteLegacyInit(txParams *ccprovider.TransactionParams, name, version <span class="keyword">string</span>, spec *pb.ChaincodeInput) (*pb.Response, *pb.ChaincodeEvent, error)</span><br><span class="line"></span><br><span class="line"><span class="comment">// ChaincodeEndorsementInfo returns the information from lifecycle required to endorse the chaincode.</span></span><br><span class="line">ChaincodeEndorsementInfo(channelID, chaincodeID <span class="keyword">string</span>, txsim ledger.QueryExecutor) (*lifecycle.ChaincodeEndorsementInfo, error)</span><br><span class="line"></span><br><span class="line"><span class="comment">// CheckACL checks the ACL for the resource for the channel using the</span></span><br><span class="line"><span class="comment">// SignedProposal from which an id can be extracted for testing against a policy</span></span><br><span class="line">CheckACL(channelID <span class="keyword">string</span>, signedProp *pb.SignedProposal) error</span><br><span class="line"></span><br><span class="line"><span class="comment">// EndorseWithPlugin endorses the response with a plugin</span></span><br><span class="line">EndorseWithPlugin(pluginName, channnelID <span class="keyword">string</span>, prpBytes []<span class="keyword">byte</span>, signedProposal *pb.SignedProposal) (*pb.Endorsement, []<span class="keyword">byte</span>, error)</span><br><span class="line"></span><br><span class="line"><span class="comment">// GetLedgerHeight returns ledger height for given channelID</span></span><br><span class="line">GetLedgerHeight(channelID <span class="keyword">string</span>) (<span class="keyword">uint64</span>, error)</span><br><span class="line"></span><br><span class="line"><span class="comment">// GetDeployedCCInfoProvider returns ledger.DeployedChaincodeInfoProvider</span></span><br><span class="line">GetDeployedCCInfoProvider() ledger.DeployedChaincodeInfoProvider</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//go:generate counterfeiter -o fake/channel_fetcher.go --fake-name ChannelFetcher . ChannelFetcher</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// ChannelFetcher fetches the channel context for a given channel ID.</span></span><br><span class="line"><span class="keyword">type</span> ChannelFetcher <span class="keyword">interface</span> &#123;</span><br><span class="line">Channel(channelID <span class="keyword">string</span>) *Channel</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">type</span> Channel <span class="keyword">struct</span> &#123;</span><br><span class="line">IdentityDeserializer msp.IdentityDeserializer</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Endorser provides the Endorser service ProcessProposal</span></span><br><span class="line"><span class="keyword">type</span> Endorser <span class="keyword">struct</span> &#123;</span><br><span class="line">ChannelFetcher         ChannelFetcher</span><br><span class="line">LocalMSP               msp.IdentityDeserializer</span><br><span class="line">PrivateDataDistributor PrivateDataDistributor</span><br><span class="line">Support                Support</span><br><span class="line">PvtRWSetAssembler      PvtRWSetAssembler</span><br><span class="line">Metrics                *Metrics</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// call specified chaincode (system or user)</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e *Endorser)</span> <span class="title">callChaincode</span><span class="params">(txParams *ccprovider.TransactionParams, input *pb.ChaincodeInput, chaincodeName <span class="keyword">string</span>)</span> <span class="params">(*pb.Response, *pb.ChaincodeEvent, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">(start time.Time)</span></span> &#123;</span><br><span class="line">logger := endorserLogger.WithOptions(zap.AddCallerSkip(<span class="number">1</span>))</span><br><span class="line">logger = decorateLogger(logger, txParams)</span><br><span class="line">elapsedMillisec := time.Since(start).Milliseconds()</span><br><span class="line">logger.Infof(<span class="string">&quot;finished chaincode: %s duration: %dms&quot;</span>, chaincodeName, elapsedMillisec)</span><br><span class="line">&#125;(time.Now())</span><br><span class="line"></span><br><span class="line">meterLabels := []<span class="keyword">string</span>&#123;</span><br><span class="line"><span class="string">&quot;channel&quot;</span>, txParams.ChannelID,</span><br><span class="line"><span class="string">&quot;chaincode&quot;</span>, chaincodeName,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">res, ccevent, err := e.Support.Execute(txParams, chaincodeName, input)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">e.Metrics.SimulationFailure.With(meterLabels...).Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// per doc anything &lt; 400 can be sent as TX.</span></span><br><span class="line"><span class="comment">// fabric errors will always be &gt;= 400 (ie, unambiguous errors )</span></span><br><span class="line"><span class="comment">// &quot;lscc&quot; will respond with status 200 or 500 (ie, unambiguous OK or ERROR)</span></span><br><span class="line"><span class="keyword">if</span> res.Status &gt;= shim.ERRORTHRESHOLD &#123;</span><br><span class="line"><span class="keyword">return</span> res, <span class="literal">nil</span>, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Unless this is the weirdo LSCC case, just return</span></span><br><span class="line"><span class="keyword">if</span> chaincodeName != <span class="string">&quot;lscc&quot;</span> || <span class="built_in">len</span>(input.Args) &lt; <span class="number">3</span> || (<span class="keyword">string</span>(input.Args[<span class="number">0</span>]) != <span class="string">&quot;deploy&quot;</span> &amp;&amp; <span class="keyword">string</span>(input.Args[<span class="number">0</span>]) != <span class="string">&quot;upgrade&quot;</span>) &#123;</span><br><span class="line"><span class="keyword">return</span> res, ccevent, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ----- BEGIN -  SECTION THAT MAY NEED TO BE DONE IN LSCC ------</span></span><br><span class="line"><span class="comment">// if this a call to deploy a chaincode, We need a mechanism</span></span><br><span class="line"><span class="comment">// to pass TxSimulator into LSCC. Till that is worked out this</span></span><br><span class="line"><span class="comment">// special code does the actual deploy, upgrade here so as to collect</span></span><br><span class="line"><span class="comment">// all state under one TxSimulator</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="comment">// NOTE that if there&#x27;s an error all simulation, including the chaincode</span></span><br><span class="line"><span class="comment">// table changes in lscc will be thrown away</span></span><br><span class="line">cds, err := protoutil.UnmarshalChaincodeDeploymentSpec(input.Args[<span class="number">2</span>])</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">e.Metrics.SimulationFailure.With(meterLabels...).Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// this should not be a system chaincode</span></span><br><span class="line"><span class="keyword">if</span> e.Support.IsSysCC(cds.ChaincodeSpec.ChaincodeId.Name) &#123;</span><br><span class="line">e.Metrics.SimulationFailure.With(meterLabels...).Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, <span class="literal">nil</span>, errors.Errorf(<span class="string">&quot;attempting to deploy a system chaincode %s/%s&quot;</span>, cds.ChaincodeSpec.ChaincodeId.Name, txParams.ChannelID)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(cds.CodePackage) != <span class="number">0</span> &#123;</span><br><span class="line">e.Metrics.SimulationFailure.With(meterLabels...).Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, <span class="literal">nil</span>, errors.Errorf(<span class="string">&quot;lscc upgrade/deploy should not include a code packages&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">_, _, err = e.Support.ExecuteLegacyInit(txParams, cds.ChaincodeSpec.ChaincodeId.Name, cds.ChaincodeSpec.ChaincodeId.Version, cds.ChaincodeSpec.Input)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="comment">// increment the failure to indicate instantion/upgrade failures</span></span><br><span class="line">meterLabels = []<span class="keyword">string</span>&#123;</span><br><span class="line"><span class="string">&quot;channel&quot;</span>, txParams.ChannelID,</span><br><span class="line"><span class="string">&quot;chaincode&quot;</span>, cds.ChaincodeSpec.ChaincodeId.Name,</span><br><span class="line">&#125;</span><br><span class="line">e.Metrics.InitFailed.With(meterLabels...).Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> res, ccevent, err</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// SimulateProposal simulates the proposal by calling the chaincode</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e *Endorser)</span> <span class="title">SimulateProposal</span><span class="params">(txParams *ccprovider.TransactionParams, chaincodeName <span class="keyword">string</span>, chaincodeInput *pb.ChaincodeInput)</span> <span class="params">(*pb.Response, []<span class="keyword">byte</span>, *pb.ChaincodeEvent, error)</span></span> &#123;</span><br><span class="line">logger := decorateLogger(endorserLogger, txParams)</span><br><span class="line"></span><br><span class="line">meterLabels := []<span class="keyword">string</span>&#123;</span><br><span class="line"><span class="string">&quot;channel&quot;</span>, txParams.ChannelID,</span><br><span class="line"><span class="string">&quot;chaincode&quot;</span>, chaincodeName,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ---3. execute the proposal and get simulation results</span></span><br><span class="line">res, ccevent, err := e.callChaincode(txParams, chaincodeInput, chaincodeName)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">logger.Errorf(<span class="string">&quot;failed to invoke chaincode %s, error: %+v&quot;</span>, chaincodeName, err)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, <span class="literal">nil</span>, <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> txParams.TXSimulator == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> res, <span class="literal">nil</span>, ccevent, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Note, this is a little goofy, as if there is private data, Done() gets called</span></span><br><span class="line"><span class="comment">// early, so this is invoked multiple times, but that is how the code worked before</span></span><br><span class="line"><span class="comment">// this change, so, should be safe.  Long term, let&#x27;s move the Done up to the create.</span></span><br><span class="line"><span class="keyword">defer</span> txParams.TXSimulator.Done()</span><br><span class="line"></span><br><span class="line">simResult, err := txParams.TXSimulator.GetTxSimulationResults()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">e.Metrics.SimulationFailure.With(meterLabels...).Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, <span class="literal">nil</span>, <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> simResult.PvtSimulationResults != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">if</span> chaincodeName == <span class="string">&quot;lscc&quot;</span> &#123;</span><br><span class="line"><span class="comment">// <span class="doctag">TODO:</span> remove once we can store collection configuration outside of LSCC</span></span><br><span class="line">e.Metrics.SimulationFailure.With(meterLabels...).Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, <span class="literal">nil</span>, <span class="literal">nil</span>, errors.New(<span class="string">&quot;Private data is forbidden to be used in instantiate&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">pvtDataWithConfig, err := AssemblePvtRWSet(txParams.ChannelID, simResult.PvtSimulationResults, txParams.TXSimulator, e.Support.GetDeployedCCInfoProvider())</span><br><span class="line"><span class="comment">// To read collection config need to read collection updates before</span></span><br><span class="line"><span class="comment">// releasing the lock, hence txParams.TXSimulator.Done()  moved down here</span></span><br><span class="line">txParams.TXSimulator.Done()</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">e.Metrics.SimulationFailure.With(meterLabels...).Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, <span class="literal">nil</span>, <span class="literal">nil</span>, errors.WithMessage(err, <span class="string">&quot;failed to obtain collections config&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line">endorsedAt, err := e.Support.GetLedgerHeight(txParams.ChannelID)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">e.Metrics.SimulationFailure.With(meterLabels...).Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, <span class="literal">nil</span>, <span class="literal">nil</span>, errors.WithMessage(err, fmt.Sprintf(<span class="string">&quot;failed to obtain ledger height for channel &#x27;%s&#x27;&quot;</span>, txParams.ChannelID))</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Add ledger height at which transaction was endorsed,</span></span><br><span class="line"><span class="comment">// `endorsedAt` is obtained from the block storage and at times this could be &#x27;endorsement Height + 1&#x27;.</span></span><br><span class="line"><span class="comment">// However, since we use this height only to select the configuration (3rd parameter in distributePrivateData) and</span></span><br><span class="line"><span class="comment">// manage transient store purge for orphaned private writesets (4th parameter in distributePrivateData), this works for now.</span></span><br><span class="line"><span class="comment">// Ideally, ledger should add support in the simulator as a first class function `GetHeight()`.</span></span><br><span class="line">pvtDataWithConfig.EndorsedAt = endorsedAt</span><br><span class="line"><span class="keyword">if</span> err := e.PrivateDataDistributor.DistributePrivateData(txParams.ChannelID, txParams.TxID, pvtDataWithConfig, endorsedAt); err != <span class="literal">nil</span> &#123;</span><br><span class="line">e.Metrics.SimulationFailure.With(meterLabels...).Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, <span class="literal">nil</span>, <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">pubSimResBytes, err := simResult.GetPubSimulationBytes()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">e.Metrics.SimulationFailure.With(meterLabels...).Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, <span class="literal">nil</span>, <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> res, pubSimResBytes, ccevent, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// preProcess checks the tx proposal headers, uniqueness and ACL</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e *Endorser)</span> <span class="title">preProcess</span><span class="params">(up *UnpackedProposal, channel *Channel)</span> <span class="title">error</span></span> &#123;</span><br><span class="line"><span class="comment">// at first, we check whether the message is valid</span></span><br><span class="line"></span><br><span class="line">err := up.Validate(channel.IdentityDeserializer)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">e.Metrics.ProposalValidationFailed.Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> errors.WithMessage(err, <span class="string">&quot;error validating proposal&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> up.ChannelHeader.ChannelId == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line"><span class="comment">// chainless proposals do not/cannot affect ledger and cannot be submitted as transactions</span></span><br><span class="line"><span class="comment">// ignore uniqueness checks; also, chainless proposals are not validated using the policies</span></span><br><span class="line"><span class="comment">// of the chain since by definition there is no chain; they are validated against the local</span></span><br><span class="line"><span class="comment">// MSP of the peer instead by the call to ValidateUnpackProposal above</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// labels that provide context for failure metrics</span></span><br><span class="line">meterLabels := []<span class="keyword">string</span>&#123;</span><br><span class="line"><span class="string">&quot;channel&quot;</span>, up.ChannelHeader.ChannelId,</span><br><span class="line"><span class="string">&quot;chaincode&quot;</span>, up.ChaincodeName,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Here we handle uniqueness check and ACLs for proposals targeting a chain</span></span><br><span class="line"><span class="comment">// Notice that ValidateProposalMessage has already verified that TxID is computed properly</span></span><br><span class="line"><span class="keyword">if</span> _, err = e.Support.GetTransactionByID(up.ChannelHeader.ChannelId, up.ChannelHeader.TxId); err == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="comment">// increment failure due to duplicate transactions. Useful for catching replay attacks in</span></span><br><span class="line"><span class="comment">// addition to benign retries</span></span><br><span class="line">e.Metrics.DuplicateTxsFailure.With(meterLabels...).Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> errors.Errorf(<span class="string">&quot;duplicate transaction found [%s]. Creator [%x]&quot;</span>, up.ChannelHeader.TxId, up.SignatureHeader.Creator)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// check ACL only for application chaincodes; ACLs</span></span><br><span class="line"><span class="comment">// for system chaincodes are checked elsewhere</span></span><br><span class="line"><span class="keyword">if</span> !e.Support.IsSysCC(up.ChaincodeName) &#123;</span><br><span class="line"><span class="comment">// check that the proposal complies with the Channel&#x27;s writers</span></span><br><span class="line"><span class="keyword">if</span> err = e.Support.CheckACL(up.ChannelHeader.ChannelId, up.SignedProposal); err != <span class="literal">nil</span> &#123;</span><br><span class="line">e.Metrics.ProposalACLCheckFailed.With(meterLabels...).Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ProcessProposal process the Proposal</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e *Endorser)</span> <span class="title">ProcessProposal</span><span class="params">(ctx context.Context, signedProp *pb.SignedProposal)</span> <span class="params">(*pb.ProposalResponse, error)</span></span> &#123;</span><br><span class="line"><span class="comment">// start time for computing elapsed time metric for successfully endorsed proposals</span></span><br><span class="line">startTime := time.Now()</span><br><span class="line">e.Metrics.ProposalsReceived.Add(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">addr := util.ExtractRemoteAddress(ctx)</span><br><span class="line">endorserLogger.Debug(<span class="string">&quot;request from&quot;</span>, addr)</span><br><span class="line"></span><br><span class="line"><span class="comment">// variables to capture proposal duration metric</span></span><br><span class="line">success := <span class="literal">false</span></span><br><span class="line"></span><br><span class="line">up, err := UnpackProposal(signedProp)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">e.Metrics.ProposalValidationFailed.Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> &amp;pb.ProposalResponse&#123;Response: &amp;pb.Response&#123;Status: <span class="number">500</span>, Message: err.Error()&#125;&#125;, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> channel *Channel</span><br><span class="line"><span class="keyword">if</span> up.ChannelID() != <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">channel = e.ChannelFetcher.Channel(up.ChannelID())</span><br><span class="line"><span class="keyword">if</span> channel == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;pb.ProposalResponse&#123;Response: &amp;pb.Response&#123;Status: <span class="number">500</span>, Message: fmt.Sprintf(<span class="string">&quot;channel &#x27;%s&#x27; not found&quot;</span>, up.ChannelHeader.ChannelId)&#125;&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">channel = &amp;Channel&#123;</span><br><span class="line">IdentityDeserializer: e.LocalMSP,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 0 -- check and validate</span></span><br><span class="line">err = e.preProcess(up, channel)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;pb.ProposalResponse&#123;Response: &amp;pb.Response&#123;Status: <span class="number">500</span>, Message: err.Error()&#125;&#125;, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">defer</span> <span class="function"><span class="keyword">func</span><span class="params">()</span></span> &#123;</span><br><span class="line">meterLabels := []<span class="keyword">string</span>&#123;</span><br><span class="line"><span class="string">&quot;channel&quot;</span>, up.ChannelHeader.ChannelId,</span><br><span class="line"><span class="string">&quot;chaincode&quot;</span>, up.ChaincodeName,</span><br><span class="line"><span class="string">&quot;success&quot;</span>, strconv.FormatBool(success),</span><br><span class="line">&#125;</span><br><span class="line">e.Metrics.ProposalDuration.With(meterLabels...).Observe(time.Since(startTime).Seconds())</span><br><span class="line">&#125;()</span><br><span class="line"></span><br><span class="line">pResp, err := e.ProcessProposalSuccessfullyOrError(up)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;pb.ProposalResponse&#123;Response: &amp;pb.Response&#123;Status: <span class="number">500</span>, Message: err.Error()&#125;&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> pResp.Endorsement != <span class="literal">nil</span> || up.ChannelHeader.ChannelId == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line"><span class="comment">// We mark the tx as successfull only if it was successfully endorsed, or</span></span><br><span class="line"><span class="comment">// if it was a system chaincode on a channel-less channel and therefore</span></span><br><span class="line"><span class="comment">// cannot be endorsed.</span></span><br><span class="line">success = <span class="literal">true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// total failed proposals = ProposalsReceived-SuccessfulProposals</span></span><br><span class="line">e.Metrics.SuccessfulProposals.Add(<span class="number">1</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> pResp, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(e *Endorser)</span> <span class="title">ProcessProposalSuccessfullyOrError</span><span class="params">(up *UnpackedProposal)</span> <span class="params">(*pb.ProposalResponse, error)</span></span> &#123;</span><br><span class="line">txParams := &amp;ccprovider.TransactionParams&#123;</span><br><span class="line">ChannelID:  up.ChannelHeader.ChannelId,</span><br><span class="line">TxID:       up.ChannelHeader.TxId,</span><br><span class="line">SignedProp: up.SignedProposal,</span><br><span class="line">Proposal:   up.Proposal,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">logger := decorateLogger(endorserLogger, txParams)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> acquireTxSimulator(up.ChannelHeader.ChannelId, up.ChaincodeName) &#123;</span><br><span class="line">txSim, err := e.Support.GetTxSimulator(up.ChannelID(), up.TxID())</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// txsim acquires a shared lock on the stateDB. As this would impact the block commits (i.e., commit</span></span><br><span class="line"><span class="comment">// of valid write-sets to the stateDB), we must release the lock as early as possible.</span></span><br><span class="line"><span class="comment">// Hence, this txsim object is closed in simulateProposal() as soon as the tx is simulated and</span></span><br><span class="line"><span class="comment">// rwset is collected before gossip dissemination if required for privateData. For safety, we</span></span><br><span class="line"><span class="comment">// add the following defer statement and is useful when an error occur. Note that calling</span></span><br><span class="line"><span class="comment">// txsim.Done() more than once does not cause any issue. If the txsim is already</span></span><br><span class="line"><span class="comment">// released, the following txsim.Done() simply returns.</span></span><br><span class="line"><span class="keyword">defer</span> txSim.Done()</span><br><span class="line"></span><br><span class="line">hqe, err := e.Support.GetHistoryQueryExecutor(up.ChannelID())</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">txParams.TXSimulator = txSim</span><br><span class="line">txParams.HistoryQueryExecutor = hqe</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cdLedger, err := e.Support.ChaincodeEndorsementInfo(up.ChannelID(), up.ChaincodeName, txParams.TXSimulator)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, errors.WithMessagef(err, <span class="string">&quot;make sure the chaincode %s has been successfully defined on channel %s and try again&quot;</span>, up.ChaincodeName, up.ChannelID())</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 1 -- simulate</span></span><br><span class="line">res, simulationResult, ccevent, err := e.SimulateProposal(txParams, up.ChaincodeName, up.Input)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, errors.WithMessage(err, <span class="string">&quot;error in simulation&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cceventBytes, err := CreateCCEventBytes(ccevent)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, errors.Wrap(err, <span class="string">&quot;failed to marshal chaincode event&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">prpBytes, err := protoutil.GetBytesProposalResponsePayload(up.ProposalHash, res, simulationResult, cceventBytes, &amp;pb.ChaincodeID&#123;</span><br><span class="line">Name:    up.ChaincodeName,</span><br><span class="line">Version: cdLedger.Version,</span><br><span class="line">&#125;)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">logger.Warning(<span class="string">&quot;Failed marshaling the proposal response payload to bytes&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, errors.WithMessage(err, <span class="string">&quot;failed to create the proposal response&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// if error, capture endorsement failure metric</span></span><br><span class="line">meterLabels := []<span class="keyword">string</span>&#123;</span><br><span class="line"><span class="string">&quot;channel&quot;</span>, up.ChannelID(),</span><br><span class="line"><span class="string">&quot;chaincode&quot;</span>, up.ChaincodeName,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> &#123;</span><br><span class="line"><span class="keyword">case</span> res.Status &gt;= shim.ERROR:</span><br><span class="line"><span class="keyword">return</span> &amp;pb.ProposalResponse&#123;</span><br><span class="line">Response: res,</span><br><span class="line">Payload:  prpBytes,</span><br><span class="line">&#125;, <span class="literal">nil</span></span><br><span class="line"><span class="keyword">case</span> up.ChannelID() == <span class="string">&quot;&quot;</span>:</span><br><span class="line"><span class="comment">// Chaincode invocations without a channel ID is a broken concept</span></span><br><span class="line"><span class="comment">// that should be removed in the future.  For now, return unendorsed</span></span><br><span class="line"><span class="comment">// success.</span></span><br><span class="line"><span class="keyword">return</span> &amp;pb.ProposalResponse&#123;</span><br><span class="line">Response: res,</span><br><span class="line">&#125;, <span class="literal">nil</span></span><br><span class="line"><span class="keyword">case</span> res.Status &gt;= shim.ERRORTHRESHOLD:</span><br><span class="line">meterLabels = <span class="built_in">append</span>(meterLabels, <span class="string">&quot;chaincodeerror&quot;</span>, strconv.FormatBool(<span class="literal">true</span>))</span><br><span class="line">e.Metrics.EndorsementsFailed.With(meterLabels...).Add(<span class="number">1</span>)</span><br><span class="line">logger.Debugf(<span class="string">&quot;chaincode error %d&quot;</span>, res.Status)</span><br><span class="line"><span class="keyword">return</span> &amp;pb.ProposalResponse&#123;</span><br><span class="line">Response: res,</span><br><span class="line">&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">escc := cdLedger.EndorsementPlugin</span><br><span class="line"></span><br><span class="line">logger.Debugf(<span class="string">&quot;escc for chaincode %s is %s&quot;</span>, up.ChaincodeName, escc)</span><br><span class="line"></span><br><span class="line"><span class="comment">// Note, mPrpBytes is the same as prpBytes by default endorsement plugin, but others could change it.</span></span><br><span class="line">endorsement, mPrpBytes, err := e.Support.EndorseWithPlugin(escc, up.ChannelID(), prpBytes, up.SignedProposal)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">meterLabels = <span class="built_in">append</span>(meterLabels, <span class="string">&quot;chaincodeerror&quot;</span>, strconv.FormatBool(<span class="literal">false</span>))</span><br><span class="line">e.Metrics.EndorsementsFailed.With(meterLabels...).Add(<span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, errors.WithMessage(err, <span class="string">&quot;endorsing with plugin failed&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> &amp;pb.ProposalResponse&#123;</span><br><span class="line">Version:     <span class="number">1</span>,</span><br><span class="line">Endorsement: endorsement,</span><br><span class="line">Payload:     mPrpBytes,</span><br><span class="line">Response:    res,</span><br><span class="line">&#125;, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// determine whether or not a transaction simulator should be</span></span><br><span class="line"><span class="comment">// obtained for a proposal.</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">acquireTxSimulator</span><span class="params">(chainID <span class="keyword">string</span>, chaincodeName <span class="keyword">string</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> chainID == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// ¯\_(ツ)_/¯ locking.</span></span><br><span class="line"><span class="comment">// Don&#x27;t get a simulator for the query and config system chaincode.</span></span><br><span class="line"><span class="comment">// These don&#x27;t need the simulator and its read lock results in deadlocks.</span></span><br><span class="line"><span class="keyword">switch</span> chaincodeName &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&quot;qscc&quot;</span>, <span class="string">&quot;cscc&quot;</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// shorttxid replicates the chaincode package function to shorten txids.</span></span><br><span class="line"><span class="comment">// ~~TODO utilize a common shorttxid utility across packages.~~</span></span><br><span class="line"><span class="comment">// TODO use a formal type for transaction ID and make it a stringer</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">shorttxid</span><span class="params">(txid <span class="keyword">string</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(txid) &lt; <span class="number">8</span> &#123;</span><br><span class="line"><span class="keyword">return</span> txid</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> txid[<span class="number">0</span>:<span class="number">8</span>]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">CreateCCEventBytes</span><span class="params">(ccevent *pb.ChaincodeEvent)</span> <span class="params">([]<span class="keyword">byte</span>, error)</span></span> &#123;</span><br><span class="line"><span class="keyword">if</span> ccevent == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> proto.Marshal(ccevent)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">decorateLogger</span><span class="params">(logger *flogging.FabricLogger, txParams *ccprovider.TransactionParams)</span> *<span class="title">flogging</span>.<span class="title">FabricLogger</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> logger.With(<span class="string">&quot;channel&quot;</span>, txParams.ChannelID, <span class="string">&quot;txID&quot;</span>, shorttxid(txParams.TxID))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="验证系统链码-Validator-System-Chaincode-VSCC"><a href="#验证系统链码-Validator-System-Chaincode-VSCC" class="headerlink" title="验证系统链码 (Validator System Chaincode, VSCC)"></a>验证系统链码 (<em>Validator System Chaincode</em>, VSCC)</h1><blockquote><p>/core/committer/txvalidator/v14/vscc_validator.go</p></blockquote><p>被记账节点(validator)调用，根据合约的背书政策验证交易的有效性和背书的正确性。</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> txvalidator</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line"><span class="string">&quot;fmt&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;github.com/golang/protobuf/proto&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/hyperledger/fabric-protos-go/common&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/hyperledger/fabric-protos-go/peer&quot;</span></span><br><span class="line">commonerrors <span class="string">&quot;github.com/hyperledger/fabric/common/errors&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/hyperledger/fabric/common/policydsl&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/hyperledger/fabric/core/common/ccprovider&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/hyperledger/fabric/core/common/sysccprovider&quot;</span></span><br><span class="line">validation <span class="string">&quot;github.com/hyperledger/fabric/core/handlers/validation/api&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/hyperledger/fabric/core/ledger/kvledger/txmgmt/rwsetutil&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/hyperledger/fabric/protoutil&quot;</span></span><br><span class="line"><span class="string">&quot;github.com/pkg/errors&quot;</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// VsccValidatorImpl is the implementation used to call</span></span><br><span class="line"><span class="comment">// the vscc chaincode and validate block transactions</span></span><br><span class="line"><span class="keyword">type</span> VsccValidatorImpl <span class="keyword">struct</span> &#123;</span><br><span class="line">channelID       <span class="keyword">string</span></span><br><span class="line">cr              ChannelResources</span><br><span class="line">pluginValidator *PluginValidator</span><br><span class="line">&#125; <span class="comment">// 用于调用vscc链码并验证区块事务</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// newVSCCValidator creates new vscc validator</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">newVSCCValidator</span><span class="params">(channelID <span class="keyword">string</span>, cr ChannelResources, pluginValidator *PluginValidator)</span> *<span class="title">VsccValidatorImpl</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;VsccValidatorImpl&#123;</span><br><span class="line">channelID:       channelID,</span><br><span class="line">cr:              cr,</span><br><span class="line">pluginValidator: pluginValidator,</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">getChaincodeHeaderExtension</span><span class="params">(hdr *common.Header)</span> <span class="params">(*peer.ChaincodeHeaderExtension, error)</span></span> &#123;</span><br><span class="line">chdr, err := protoutil.UnmarshalChannelHeader(hdr.ChannelHeader)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">chaincodeHdrExt := &amp;peer.ChaincodeHeaderExtension&#123;&#125;</span><br><span class="line">err = proto.Unmarshal(chdr.Extension, chaincodeHdrExt)</span><br><span class="line"><span class="keyword">return</span> chaincodeHdrExt, errors.Wrap(err, <span class="string">&quot;error unmarshaling ChaincodeHeaderExtension&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// VSCCValidateTx executes vscc validation for transaction</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v *VsccValidatorImpl)</span> <span class="title">VSCCValidateTx</span><span class="params">(seq <span class="keyword">int</span>, payload *common.Payload, envBytes []<span class="keyword">byte</span>, block *common.Block)</span> <span class="params">(error, peer.TxValidationCode)</span></span> &#123;</span><br><span class="line">chainID := v.channelID</span><br><span class="line">logger.Debugf(<span class="string">&quot;[%s] VSCCValidateTx starts for bytes %p&quot;</span>, chainID, envBytes)</span><br><span class="line"></span><br><span class="line"><span class="comment">// get header extensions so we have the chaincode ID</span></span><br><span class="line">hdrExt, err := getChaincodeHeaderExtension(payload.Header)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err, peer.TxValidationCode_BAD_HEADER_EXTENSION</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// get channel header</span></span><br><span class="line">chdr, err := protoutil.UnmarshalChannelHeader(payload.Header.ChannelHeader)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> err, peer.TxValidationCode_BAD_CHANNEL_HEADER</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* obtain the list of namespaces we&#x27;re writing stuff to;</span></span><br><span class="line"><span class="comment">   at first, we establish a few facts about this invocation:</span></span><br><span class="line"><span class="comment">   1) which namespaces does it write to?</span></span><br><span class="line"><span class="comment">   2) does it write to LSCC&#x27;s namespace?</span></span><br><span class="line"><span class="comment">   3) does it write to any cc that cannot be invoked? */</span></span><br><span class="line">writesToLSCC := <span class="literal">false</span></span><br><span class="line">writesToNonInvokableSCC := <span class="literal">false</span></span><br><span class="line">respPayload, err := protoutil.GetActionFromEnvelope(envBytes)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> errors.WithMessage(err, <span class="string">&quot;GetActionFromEnvelope failed&quot;</span>), peer.TxValidationCode_BAD_RESPONSE_PAYLOAD</span><br><span class="line">&#125;</span><br><span class="line">txRWSet := &amp;rwsetutil.TxRwSet&#123;&#125;</span><br><span class="line"><span class="keyword">if</span> err = txRWSet.FromProtoBytes(respPayload.Results); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> errors.WithMessage(err, <span class="string">&quot;txRWSet.FromProtoBytes failed&quot;</span>), peer.TxValidationCode_BAD_RWSET</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Verify the header extension and response payload contain the ChaincodeId</span></span><br><span class="line"><span class="keyword">if</span> hdrExt.ChaincodeId == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> errors.New(<span class="string">&quot;nil ChaincodeId in header extension&quot;</span>), peer.TxValidationCode_INVALID_OTHER_REASON</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> respPayload.ChaincodeId == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> errors.New(<span class="string">&quot;nil ChaincodeId in ChaincodeAction&quot;</span>), peer.TxValidationCode_INVALID_OTHER_REASON</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// get name and version of the cc we invoked</span></span><br><span class="line">ccID := hdrExt.ChaincodeId.Name</span><br><span class="line">ccVer := respPayload.ChaincodeId.Version</span><br><span class="line"></span><br><span class="line"><span class="comment">// sanity check on ccID</span></span><br><span class="line"><span class="keyword">if</span> ccID == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">err = errors.New(<span class="string">&quot;invalid chaincode ID&quot;</span>)</span><br><span class="line">logger.Errorf(<span class="string">&quot;%+v&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span> err, peer.TxValidationCode_INVALID_OTHER_REASON</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ccID != respPayload.ChaincodeId.Name &#123;</span><br><span class="line">err = errors.Errorf(<span class="string">&quot;inconsistent ccid info (%s/%s)&quot;</span>, ccID, respPayload.ChaincodeId.Name)</span><br><span class="line">logger.Errorf(<span class="string">&quot;%+v&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span> err, peer.TxValidationCode_INVALID_OTHER_REASON</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// sanity check on ccver</span></span><br><span class="line"><span class="keyword">if</span> ccVer == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line">err = errors.New(<span class="string">&quot;invalid chaincode version&quot;</span>)</span><br><span class="line">logger.Errorf(<span class="string">&quot;%+v&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span> err, peer.TxValidationCode_INVALID_OTHER_REASON</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> wrNamespace []<span class="keyword">string</span></span><br><span class="line">alwaysEnforceOriginalNamespace := v.cr.Capabilities().V1_2Validation()</span><br><span class="line"><span class="keyword">if</span> alwaysEnforceOriginalNamespace &#123;</span><br><span class="line">wrNamespace = <span class="built_in">append</span>(wrNamespace, ccID)</span><br><span class="line"><span class="keyword">if</span> respPayload.Events != <span class="literal">nil</span> &#123;</span><br><span class="line">ccEvent := &amp;peer.ChaincodeEvent&#123;&#125;</span><br><span class="line"><span class="keyword">if</span> err = proto.Unmarshal(respPayload.Events, ccEvent); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> errors.Wrapf(err, <span class="string">&quot;invalid chaincode event&quot;</span>), peer.TxValidationCode_INVALID_OTHER_REASON</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ccEvent.ChaincodeId != ccID &#123;</span><br><span class="line"><span class="keyword">return</span> errors.Errorf(<span class="string">&quot;chaincode event chaincode id does not match chaincode action chaincode id&quot;</span>), peer.TxValidationCode_INVALID_OTHER_REASON</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">namespaces := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">struct</span>&#123;&#125;)</span><br><span class="line"><span class="keyword">for</span> _, ns := <span class="keyword">range</span> txRWSet.NsRwSets &#123;</span><br><span class="line"><span class="comment">// check to make sure there is no duplicate namespace in txRWSet</span></span><br><span class="line"><span class="keyword">if</span> _, ok := namespaces[ns.NameSpace]; ok &#123;</span><br><span class="line"><span class="keyword">return</span> errors.Errorf(<span class="string">&quot;duplicate namespace &#x27;%s&#x27; in txRWSet&quot;</span>, ns.NameSpace),</span><br><span class="line">peer.TxValidationCode_ILLEGAL_WRITESET</span><br><span class="line">&#125;</span><br><span class="line">namespaces[ns.NameSpace] = <span class="keyword">struct</span>&#123;&#125;&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !v.txWritesToNamespace(ns) &#123;</span><br><span class="line"><span class="keyword">continue</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Check to make sure we did not already populate this chaincode</span></span><br><span class="line"><span class="comment">// name to avoid checking the same namespace twice</span></span><br><span class="line"><span class="keyword">if</span> ns.NameSpace != ccID || !alwaysEnforceOriginalNamespace &#123;</span><br><span class="line">wrNamespace = <span class="built_in">append</span>(wrNamespace, ns.NameSpace)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !writesToLSCC &amp;&amp; ns.NameSpace == <span class="string">&quot;lscc&quot;</span> &#123;</span><br><span class="line">writesToLSCC = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !writesToNonInvokableSCC &amp;&amp; IsSysCCAndNotInvokableCC2CC(ns.NameSpace) &#123;</span><br><span class="line">writesToNonInvokableSCC = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !writesToNonInvokableSCC &amp;&amp; IsSysCCAndNotInvokableExternal(ns.NameSpace) &#123;</span><br><span class="line">writesToNonInvokableSCC = <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// we&#x27;ve gathered all the info required to proceed to validation;</span></span><br><span class="line"><span class="comment">// validation will behave differently depending on the type of</span></span><br><span class="line"><span class="comment">// chaincode (system vs. application)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> !IsSysCC(ccID) &#123;</span><br><span class="line"><span class="comment">// if we&#x27;re here, we know this is an invocation of an application chaincode;</span></span><br><span class="line"><span class="comment">// first of all, we make sure that:</span></span><br><span class="line"><span class="comment">// 1) we don&#x27;t write to LSCC - an application chaincode is free to invoke LSCC</span></span><br><span class="line"><span class="comment">//    for instance to get information about itself or another chaincode; however</span></span><br><span class="line"><span class="comment">//    these legitimate invocations only ready from LSCC&#x27;s namespace; currently</span></span><br><span class="line"><span class="comment">//    only two functions of LSCC write to its namespace: deploy and upgrade and</span></span><br><span class="line"><span class="comment">//    neither should be used by an application chaincode</span></span><br><span class="line"><span class="keyword">if</span> writesToLSCC &#123;</span><br><span class="line"><span class="keyword">return</span> errors.Errorf(<span class="string">&quot;chaincode %s attempted to write to the namespace of LSCC&quot;</span>, ccID),</span><br><span class="line">peer.TxValidationCode_ILLEGAL_WRITESET</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 2) we don&#x27;t write to the namespace of a chaincode that we cannot invoke - if</span></span><br><span class="line"><span class="comment">//    the chaincode cannot be invoked in the first place, there&#x27;s no legitimate</span></span><br><span class="line"><span class="comment">//    way in which a transaction has a write set that writes to it; additionally</span></span><br><span class="line"><span class="comment">//    we don&#x27;t have any means of verifying whether the transaction had the rights</span></span><br><span class="line"><span class="comment">//    to perform that write operation because in v1, system chaincodes do not have</span></span><br><span class="line"><span class="comment">//    any endorsement policies to speak of. So if the chaincode can&#x27;t be invoked</span></span><br><span class="line"><span class="comment">//    it can&#x27;t be written to by an invocation of an application chaincode</span></span><br><span class="line"><span class="keyword">if</span> writesToNonInvokableSCC &#123;</span><br><span class="line"><span class="keyword">return</span> errors.Errorf(<span class="string">&quot;chaincode %s attempted to write to the namespace of a system chaincode that cannot be invoked&quot;</span>, ccID),</span><br><span class="line">peer.TxValidationCode_ILLEGAL_WRITESET</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// validate *EACH* read write set according to its chaincode&#x27;s endorsement policy</span></span><br><span class="line"><span class="keyword">for</span> _, ns := <span class="keyword">range</span> wrNamespace &#123;</span><br><span class="line"><span class="comment">// Get latest chaincode version, vscc and validate policy</span></span><br><span class="line">txcc, vscc, policy, err := v.GetInfoForValidate(chdr, ns)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">logger.Errorf(<span class="string">&quot;GetInfoForValidate for txId = %s returned error: %+v&quot;</span>, chdr.TxId, err)</span><br><span class="line"><span class="keyword">return</span> err, peer.TxValidationCode_INVALID_OTHER_REASON</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// if the namespace corresponds to the cc that was originally</span></span><br><span class="line"><span class="comment">// invoked, we check that the version of the cc that was</span></span><br><span class="line"><span class="comment">// invoked corresponds to the version that lscc has returned</span></span><br><span class="line"><span class="keyword">if</span> ns == ccID &amp;&amp; txcc.ChaincodeVersion != ccVer &#123;</span><br><span class="line">err = errors.Errorf(<span class="string">&quot;chaincode %s:%s/%s didn&#x27;t match %s:%s/%s in lscc&quot;</span>, ccID, ccVer, chdr.ChannelId, txcc.ChaincodeName, txcc.ChaincodeVersion, chdr.ChannelId)</span><br><span class="line">logger.Errorf(<span class="string">&quot;%+v&quot;</span>, err)</span><br><span class="line"><span class="keyword">return</span> err, peer.TxValidationCode_EXPIRED_CHAINCODE</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// do VSCC validation</span></span><br><span class="line">ctx := &amp;Context&#123;</span><br><span class="line">Seq:       seq,</span><br><span class="line">Envelope:  envBytes,</span><br><span class="line">Block:     block,</span><br><span class="line">TxID:      chdr.TxId,</span><br><span class="line">Channel:   chdr.ChannelId,</span><br><span class="line">Namespace: ns,</span><br><span class="line">Policy:    policy,</span><br><span class="line">VSCCName:  vscc.ChaincodeName,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err = v.VSCCValidateTxForCC(ctx); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">switch</span> err.(<span class="keyword">type</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> *commonerrors.VSCCEndorsementPolicyError:</span><br><span class="line"><span class="keyword">return</span> err, peer.TxValidationCode_ENDORSEMENT_POLICY_FAILURE</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">return</span> err, peer.TxValidationCode_INVALID_OTHER_REASON</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// make sure that we can invoke this system chaincode - if the chaincode</span></span><br><span class="line"><span class="comment">// cannot be invoked through a proposal to this peer, we have to drop the</span></span><br><span class="line"><span class="comment">// transaction; if we didn&#x27;t, we wouldn&#x27;t know how to decide whether it&#x27;s</span></span><br><span class="line"><span class="comment">// valid or not because in v1, system chaincodes have no endorsement policy</span></span><br><span class="line"><span class="keyword">if</span> IsSysCCAndNotInvokableExternal(ccID) &#123;</span><br><span class="line"><span class="keyword">return</span> errors.Errorf(<span class="string">&quot;committing an invocation of cc %s is illegal&quot;</span>, ccID),</span><br><span class="line">peer.TxValidationCode_ILLEGAL_WRITESET</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// Get latest chaincode version, vscc and validate policy</span></span><br><span class="line">_, vscc, policy, err := v.GetInfoForValidate(chdr, ccID)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">logger.Errorf(<span class="string">&quot;GetInfoForValidate for txId = %s returned error: %+v&quot;</span>, chdr.TxId, err)</span><br><span class="line"><span class="keyword">return</span> err, peer.TxValidationCode_INVALID_OTHER_REASON</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// validate the transaction as an invocation of this system chaincode;</span></span><br><span class="line"><span class="comment">// vscc will have to do custom validation for this system chaincode</span></span><br><span class="line"><span class="comment">// currently, VSCC does custom validation for LSCC only; if an hlf</span></span><br><span class="line"><span class="comment">// user creates a new system chaincode which is invokable from the outside</span></span><br><span class="line"><span class="comment">// they have to modify VSCC to provide appropriate validation</span></span><br><span class="line">ctx := &amp;Context&#123;</span><br><span class="line">Seq:       seq,</span><br><span class="line">Envelope:  envBytes,</span><br><span class="line">Block:     block,</span><br><span class="line">TxID:      chdr.TxId,</span><br><span class="line">Channel:   chdr.ChannelId,</span><br><span class="line">Namespace: ccID,</span><br><span class="line">Policy:    policy,</span><br><span class="line">VSCCName:  vscc.ChaincodeName,</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> err = v.VSCCValidateTxForCC(ctx); err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">switch</span> err.(<span class="keyword">type</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> *commonerrors.VSCCEndorsementPolicyError:</span><br><span class="line"><span class="keyword">return</span> err, peer.TxValidationCode_ENDORSEMENT_POLICY_FAILURE</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">return</span> err, peer.TxValidationCode_INVALID_OTHER_REASON</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">logger.Debugf(<span class="string">&quot;[%s] VSCCValidateTx completes env bytes %p&quot;</span>, chainID, envBytes)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, peer.TxValidationCode_VALID</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v *VsccValidatorImpl)</span> <span class="title">VSCCValidateTxForCC</span><span class="params">(ctx *Context)</span> <span class="title">error</span></span> &#123;</span><br><span class="line">logger.Debug(<span class="string">&quot;Validating&quot;</span>, ctx, <span class="string">&quot;with plugin&quot;</span>)</span><br><span class="line">err := v.pluginValidator.ValidateWithPlugin(ctx)</span><br><span class="line"><span class="keyword">if</span> err == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// If the error is a pluggable validation execution error, cast it to the common errors ExecutionFailureError.</span></span><br><span class="line"><span class="keyword">if</span> e, isExecutionError := err.(*validation.ExecutionFailureError); isExecutionError &#123;</span><br><span class="line"><span class="keyword">return</span> &amp;commonerrors.VSCCExecutionFailureError&#123;Err: e&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Else, treat it as an endorsement error.</span></span><br><span class="line"><span class="keyword">return</span> &amp;commonerrors.VSCCEndorsementPolicyError&#123;Err: err&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v *VsccValidatorImpl)</span> <span class="title">getCDataForCC</span><span class="params">(chid, ccid <span class="keyword">string</span>)</span> <span class="params">(*ccprovider.ChaincodeData, error)</span></span> &#123;</span><br><span class="line">l := v.cr.Ledger()</span><br><span class="line"><span class="keyword">if</span> l == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, errors.New(<span class="string">&quot;nil ledger instance&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">qe, err := l.NewQueryExecutor()</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, errors.WithMessage(err, <span class="string">&quot;could not retrieve QueryExecutor&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">defer</span> qe.Done()</span><br><span class="line"></span><br><span class="line">bytes, err := qe.GetState(<span class="string">&quot;lscc&quot;</span>, ccid)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, &amp;commonerrors.VSCCInfoLookupFailureError&#123;</span><br><span class="line">Reason: fmt.Sprintf(<span class="string">&quot;Could not retrieve state for chaincode %s, error %s&quot;</span>, ccid, err),</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> bytes == <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, errors.Errorf(<span class="string">&quot;lscc&#x27;s state for [%s] not found.&quot;</span>, ccid)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cd := &amp;ccprovider.ChaincodeData&#123;&#125;</span><br><span class="line">err = proto.Unmarshal(bytes, cd)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, errors.Wrap(err, <span class="string">&quot;unmarshalling ChaincodeQueryResponse failed&quot;</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> cd.Vscc == <span class="string">&quot;&quot;</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, errors.Errorf(<span class="string">&quot;lscc&#x27;s state for [%s] is invalid, vscc field must be set&quot;</span>, ccid)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(cd.Policy) == <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, errors.Errorf(<span class="string">&quot;lscc&#x27;s state for [%s] is invalid, policy field must be set&quot;</span>, ccid)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> cd, err</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// GetInfoForValidate gets the ChaincodeInstance(with latest version) of tx, vscc and policy from lscc</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v *VsccValidatorImpl)</span> <span class="title">GetInfoForValidate</span><span class="params">(chdr *common.ChannelHeader, ccID <span class="keyword">string</span>)</span> <span class="params">(*sysccprovider.ChaincodeInstance, *sysccprovider.ChaincodeInstance, []<span class="keyword">byte</span>, error)</span></span> &#123;</span><br><span class="line">cc := &amp;sysccprovider.ChaincodeInstance&#123;</span><br><span class="line">ChannelID:     chdr.ChannelId,</span><br><span class="line">ChaincodeName: ccID,</span><br><span class="line">&#125;</span><br><span class="line">vscc := &amp;sysccprovider.ChaincodeInstance&#123;</span><br><span class="line">ChannelID:     chdr.ChannelId,</span><br><span class="line">ChaincodeName: <span class="string">&quot;vscc&quot;</span>, <span class="comment">// default vscc for system chaincodes</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">var</span> policy []<span class="keyword">byte</span></span><br><span class="line"><span class="keyword">var</span> err error</span><br><span class="line"><span class="keyword">if</span> !IsSysCC(ccID) &#123;</span><br><span class="line"><span class="comment">// when we are validating a chaincode that is not a</span></span><br><span class="line"><span class="comment">// system CC, we need to ask the CC to give us the name</span></span><br><span class="line"><span class="comment">// of VSCC and of the policy that should be used</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// obtain name of the VSCC and the policy</span></span><br><span class="line">cd, err := v.getCDataForCC(chdr.ChannelId, ccID)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line">msg := fmt.Sprintf(<span class="string">&quot;Unable to get chaincode data from ledger for txid %s, due to %s&quot;</span>, chdr.TxId, err)</span><br><span class="line">logger.Errorf(msg)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, <span class="literal">nil</span>, <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line">cc.ChaincodeName = cd.Name</span><br><span class="line">cc.ChaincodeVersion = cd.Version</span><br><span class="line">vscc.ChaincodeName, policy = cd.Vscc, cd.Policy</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="comment">// when we are validating a system CC, we use the default</span></span><br><span class="line"><span class="comment">// VSCC and a default policy that requires one signature</span></span><br><span class="line"><span class="comment">// from any of the members of the channel</span></span><br><span class="line">p := policydsl.SignedByAnyMember(v.cr.GetMSPIDs())</span><br><span class="line">policy, err = protoutil.Marshal(p)</span><br><span class="line"><span class="keyword">if</span> err != <span class="literal">nil</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">nil</span>, <span class="literal">nil</span>, <span class="literal">nil</span>, err</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> cc, vscc, policy, <span class="literal">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// txWritesToNamespace returns true if the supplied NsRwSet</span></span><br><span class="line"><span class="comment">// performs a ledger write</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(v *VsccValidatorImpl)</span> <span class="title">txWritesToNamespace</span><span class="params">(ns *rwsetutil.NsRwSet)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="comment">// check for public writes first</span></span><br><span class="line"><span class="keyword">if</span> ns.KvRwSet != <span class="literal">nil</span> &amp;&amp; <span class="built_in">len</span>(ns.KvRwSet.Writes) &gt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// only look at collection data if we support that capability</span></span><br><span class="line"><span class="keyword">if</span> v.cr.Capabilities().PrivateChannelData() &#123;</span><br><span class="line"><span class="comment">// check for private writes for all collections</span></span><br><span class="line"><span class="keyword">for</span> _, c := <span class="keyword">range</span> ns.CollHashedRwSets &#123;</span><br><span class="line"><span class="keyword">if</span> c.HashedRwSet != <span class="literal">nil</span> &amp;&amp; <span class="built_in">len</span>(c.HashedRwSet.HashedWrites) &gt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// only look at private metadata writes if we support that capability</span></span><br><span class="line"><span class="keyword">if</span> v.cr.Capabilities().KeyLevelEndorsement() &#123;</span><br><span class="line"><span class="comment">// private metadata updates</span></span><br><span class="line"><span class="keyword">if</span> c.HashedRwSet != <span class="literal">nil</span> &amp;&amp; <span class="built_in">len</span>(c.HashedRwSet.MetadataWrites) &gt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// only look at metadata writes if we support that capability</span></span><br><span class="line"><span class="keyword">if</span> v.cr.Capabilities().KeyLevelEndorsement() &#123;</span><br><span class="line"><span class="comment">// public metadata updates</span></span><br><span class="line"><span class="keyword">if</span> ns.KvRwSet != <span class="literal">nil</span> &amp;&amp; <span class="built_in">len</span>(ns.KvRwSet.MetadataWrites) &gt; <span class="number">0</span> &#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">IsSysCCAndNotInvokableExternal</span><span class="params">(name <span class="keyword">string</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> name == <span class="string">&quot;vscc&quot;</span> || name == <span class="string">&quot;escc&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">IsSysCC</span><span class="params">(name <span class="keyword">string</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> name == <span class="string">&quot;vscc&quot;</span> || name == <span class="string">&quot;escc&quot;</span> || name == <span class="string">&quot;lscc&quot;</span> || name == <span class="string">&quot;qscc&quot;</span> || name == <span class="string">&quot;cscc&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">IsSysCCAndNotInvokableCC2CC</span><span class="params">(name <span class="keyword">string</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line"><span class="keyword">return</span> name == <span class="string">&quot;vscc&quot;</span> || name == <span class="string">&quot;escc&quot;</span> || name == <span class="string">&quot;cscc&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;p&gt;Fabric系统链码部分&lt;/p&gt;</summary>
    
    
    
    
    <category term="fabric" scheme="https://s0uthwood.github.io/tags/fabric/"/>
    
    <category term="go" scheme="https://s0uthwood.github.io/tags/go/"/>
    
  </entry>
  
  <entry>
    <title>gRPC 介绍</title>
    <link href="https://s0uthwood.github.io/2020/12/11/gRPC-%E4%BB%8B%E7%BB%8D/"/>
    <id>https://s0uthwood.github.io/2020/12/11/gRPC-%E4%BB%8B%E7%BB%8D/</id>
    <published>2020-12-10T18:12:29.000Z</published>
    <updated>2020-12-11T17:46:50.094Z</updated>
    
    <content type="html"><![CDATA[<p>学习gRPC框架原理</p><a id="more"></a><h1 id="简介"><a href="#简介" class="headerlink" title="简介"></a>简介</h1><blockquote><p>A high-performance, open-source universal RPC framework</p></blockquote><p>gRPC框架具有高性能，开源，跨语言的特点，使用了RPC框架，基于HTTP/2设计。</p><blockquote><p>RPC(<em>remote procedure call</em>，远程过程调用)框架提供了一套机制，使得应用程序之间可以进行通信，遵从server/client模型。<br>RPC将一个服务调用封装在一个本地方法中，让调用者像使用本地方法一样调用服务，对其屏蔽实现细节。具体的实现则通过调用方和服务方的协议，基于TCP连接进行数据交互达成。</p><p>在本地调用过程中，通常需要通过接口，调用具体实现，最终获取相应的数据。<br>而在RPC中，本地获取到接口，随后通过网络，调用远程的实现。在使用网络时，需要通过数据序列化来传输数据。</p></blockquote><p>在gRPC中，支持多个语言的应用程序的远程调用，数据交换格式则采用了<em>Protocol Buffer</em>。</p><p><img data-src="gRPC-basic.png" alt="gRPC-basic"></p><p>如上图所示，左侧为c++语言编写的客户端，其中包含了接口的具体实现。右侧为Ruby和Java客户端，其中对接口进行了调用。客户端获取接口后，将数据通过<em>Protocol Buffer</em>的序列化处理后交给服务端，服务端调用具体实现，并把数据同样以序列化的形式返回给客户端。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;学习gRPC框架原理&lt;/p&gt;</summary>
    
    
    
    
    <category term="fabric" scheme="https://s0uthwood.github.io/tags/fabric/"/>
    
    <category term="rpc" scheme="https://s0uthwood.github.io/tags/rpc/"/>
    
  </entry>
  
  <entry>
    <title>BabyRSA WriteUp</title>
    <link href="https://s0uthwood.github.io/2020/12/09/BabyRSA-WriteUp/"/>
    <id>https://s0uthwood.github.io/2020/12/09/BabyRSA-WriteUp/</id>
    <published>2020-12-09T15:27:25.000Z</published>
    <updated>2020-12-11T17:46:04.529Z</updated>
    
    <content type="html"><![CDATA[<p>题目来源：N1CTF 2019</p><a id="more"></a><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util <span class="keyword">import</span> number</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> flag</span><br><span class="line">N = <span class="number">23981306327188221819291352455300124608114670714977979223022816906368788909398653961976023086718129607035805397846230124785550919468973090809881210560931396002918119995710297723411794214888622784232065592366390586879306041418300835178522354945438521139847806375923379136235993890801176301812907708937658277646761892297209069757559519399120988948212988924583632878840216559421398253025960456164998680766732013248599742397199862820924441357624187811402515396393385081892966284318521068948266144251848088067639941653475035145362236917008153460707675427945577597137822575880268720238301307972813226576071488632898694390629</span></span><br><span class="line">e = <span class="number">0x10001</span></span><br><span class="line">m = number.bytes_to_long(flag)</span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;flag.enc&#x27;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">while</span> m:</span><br><span class="line">        padding = random.randint(<span class="number">0</span>, <span class="number">2</span>**<span class="number">1000</span>) ** <span class="number">2</span></span><br><span class="line">        message = padding &lt;&lt; <span class="number">1</span> + m % <span class="number">2</span></span><br><span class="line">        cipher = <span class="built_in">pow</span>(message, e, N)</span><br><span class="line">        f.write(<span class="built_in">hex</span>(cipher)+<span class="string">&#x27;n&#x27;</span>)</span><br><span class="line">        m /= <span class="number">2</span></span><br></pre></td></tr></table></figure><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>首先阅读代码。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">while</span> m:</span><br><span class="line">    <span class="comment"># several operations</span></span><br><span class="line">    m /= <span class="number">2</span></span><br></pre></td></tr></table></figure><p>由上述代码部分以及过程中出现了<code>m % 2</code>操作可知，flag的二进制数据每一位被存进了<code>key.enc</code>文件的每行数据中，因此对<code>key.enc</code>文件的每一行进行读取，只要能够判断该位为0还是1，即可完成解密。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">padding = random.randint(<span class="number">0</span>, <span class="number">2</span>**<span class="number">1000</span>) ** <span class="number">2</span></span><br><span class="line">message = padding &lt;&lt; <span class="built_in">pow</span>(m, p - <span class="number">1</span>, p) + m % <span class="number">2</span></span><br><span class="line">cipher = <span class="built_in">pow</span>(message, e, N)</span><br></pre></td></tr></table></figure><p>由上述代码可知，$c\equiv m^e\ (\mathrm{mod}\ N), m = r^2\cdot 2^{1+flag\%2}$ （r为random结果），因此<code>m%2=1</code>时，有$c\equiv r^2\cdot 2^2\equiv (2^er^e)^2\ (\mathrm{mod}\ N)$，而<code>m%2=0</code>时，有$c\equiv 2^e\cdot r^{2^e}$。</p><p>首先猜测可以通过破解RSA密码，将加密信息还原为明文信息，判断该数整除2的奇数次方还是偶数次方即可得知该位的二进制数。使用factordb网站失败后贼心不死，又尝试了网上找的多种攻击脚本，发现均无法分解，于是寻找其它方法。</p><p>观察<del>README.md</del>发现，本题可以尝试用二次剩余求解。<code>m%2=1</code>时，有$c\equiv (2^er^e)^2\ (\mathrm{mod}\ N)$，<code>m%2=0</code>时，有$c\equiv (2\cdot r^2)^e\ (\mathrm{mod}\ N)$，因此，当c为N的二次剩余时，对应<code>m%2=1</code>，c为N的二次非剩余时，对应<code>m%2=0</code>。</p><p>可以使用Jacobi判断是否为二次剩余。只需满足$\left(\dfrac{2^e\cdot r^{2^e}}{N}\right)=-1$即可求解。由于$\left(\dfrac{2^e\cdot r^{2^e}}{N}\right)=\left(\dfrac{2}{p}\right)\left(\dfrac{2}{q}\right)$，所以当<code>m%2=0</code>时，Jacobi计算结果仅取决于p和q，且在实际计算中发现存在Jacobi计算结果为-1的情况，又因为<code>m%2=1</code>时Jacobi计算结果必然为1，说明本题中2分别是p和q的二次剩余和二次非剩余，可得下式</p><script type="math/tex; mode=display">\left(\dfrac{c}{N}\right)= \begin{cases}\left(\dfrac{2}{p}\right)\left(\dfrac{2}{q}\right)=-1,m\%2=0\\1, m\%2=1\end{cases}</script><p>因此可以用Jacobi来计算flag的二进制结果。</p><h1 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> AITMCLab.Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">jacobi</span>(<span class="params">a, b</span>):</span></span><br><span class="line">    res = <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> a == <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">-1</span>) ** ((b * b - <span class="number">1</span>) / <span class="number">8</span>)</span><br><span class="line">    <span class="keyword">if</span> a == b - <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> (<span class="number">-1</span>) ** ((b - <span class="number">1</span>) / <span class="number">2</span>)</span><br><span class="line">    <span class="keyword">if</span> a == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> a % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        res *= jacobi(<span class="number">2</span>, b)</span><br><span class="line">        a /= <span class="number">2</span></span><br><span class="line">    res *= (<span class="number">-1</span>)**((a - <span class="number">1</span>) * (b - <span class="number">1</span>) / <span class="number">4</span>) * jacobi(b % a, a)</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line">n = <span class="number">23981306327188221819291352455300124608114670714977979223022816906368788909398653961976023086718129607035805397846230124785550919468973090809881210560931396002918119995710297723411794214888622784232065592366390586879306041418300835178522354945438521139847806375923379136235993890801176301812907708937658277646761892297209069757559519399120988948212988924583632878840216559421398253025960456164998680766732013248599742397199862820924441357624187811402515396393385081892966284318521068948266144251848088067639941653475035145362236917008153460707675427945577597137822575880268720238301307972813226576071488632898694390629</span></span><br><span class="line">flag = <span class="number">0</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;key.enc&#x27;</span>, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">        line = line.strip(<span class="string">&quot;L\n&quot;</span>)    <span class="comment"># Filter out &quot;L\n&quot; at the end of line</span></span><br><span class="line">        cur = <span class="built_in">int</span>(line, <span class="number">16</span>)         <span class="comment"># Convert hax string to number</span></span><br><span class="line">        <span class="keyword">if</span> (jacobi(cur, n) == <span class="number">1</span>):</span><br><span class="line">            flag += <span class="number">1</span> &lt;&lt; i</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">        <span class="built_in">print</span> flag</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> flag</span><br><span class="line"><span class="built_in">print</span> long_to_bytes(flag)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>首先从<code>key.enc</code>中逐行读取，并对每一行结尾的’L\n’进行过滤，将其转换为整数cur后，计算Jacobi符号$J\left( cur, N\right)$。计算Jacobi符号时主要使用二次互反律进行计算（可以再使用其它定律进行加速，但没必要）。</p><p>由于第一行储存的为flag的最后一位（即从后往前储存），因此进行<code>flag += 1 &lt;&lt; i</code>即可将相应位置的二进制结果还原。</p><h1 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h1><p>N1CTF\{You_can_leak_the_jacobi_symbol_from_RSA\}</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>这道题在代码阅读上难度较低，唯一需要留意的地方就是<code>padding &lt;&lt; pow(m, p - 1, p) + m % 2</code>这个运算的优先级问题（感谢bg的注释提示）。把代码转换成数学公式后，二次剩余的方法就比较明显了，需要注意的是<code>Jacobi</code>符号无法准确判断二次剩余与二次非剩余（感谢bg指出了这个问题），简单推导后发现这个方法有一定的使用条件，如果题目中的p和q不满足一定的条件，这个方法就无法正确区分0和1。</p><hr><p>后经大佬提醒发现这道题用的是Goldwasser-Micali密码（上课走神实锤了）。简单对比发现，当GM密码选取的x满足<code>J(x, p) = 1</code>且<code>J(x, q) = -1</code>时，可能能够利用本题的方法进行破解。因此选取的x不能仅满足是n的二次非剩余，需要同时是p和q的二次非剩余。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;题目来源：N1CTF 2019&lt;/p&gt;</summary>
    
    
    
    
    <category term="crypto" scheme="https://s0uthwood.github.io/tags/crypto/"/>
    
  </entry>
  
  <entry>
    <title>not RSA WriteUp</title>
    <link href="https://s0uthwood.github.io/2020/12/09/not-RSA-WriteUp/"/>
    <id>https://s0uthwood.github.io/2020/12/09/not-RSA-WriteUp/</id>
    <published>2020-12-09T14:34:12.000Z</published>
    <updated>2020-12-09T15:27:53.269Z</updated>
    
    <content type="html"><![CDATA[<p>题目来源：安恒四月赛（DASCTF 2020）</p><a id="more"></a><h1 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> AITMCLab.libnum <span class="keyword">import</span> gcd, invmod, s2n</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> isPrime</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> flag</span><br><span class="line">p = <span class="number">104879397075344024438671231239628115011303349344697797964879592144922079000957</span> </span><br><span class="line">q = <span class="number">104879397075344024438671231239628115011303349344697797964879592144922079001013</span></span><br><span class="line"><span class="keyword">assert</span> isPrime(p) <span class="keyword">and</span> isPrime(q)</span><br><span class="line">n = p * q</span><br><span class="line">flag = s2n(flag)</span><br><span class="line">r = randint(<span class="number">1</span>, n)</span><br><span class="line">c = (<span class="built_in">pow</span>(n + <span class="number">1</span>, flag, n * n) * <span class="built_in">pow</span>(r, n, n * n)) % (n * n)</span><br><span class="line"><span class="built_in">print</span> c</span><br><span class="line"><span class="comment"># c = 13134489820394613222282607681686272081419875146946401883172682167011759113388373349180457979897848113275982219264879081189886853062717764580364698888338032141434053832247476010400449272010082460437747190468766740274587999336359171283098137261396013153130265440425676242061845667887640808895666325466803989428</span></span><br></pre></td></tr></table></figure><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>代码很简单，就是道纯数学题</p><p>由源码：</p><p>$c\equiv (n+1)^f\cdot r^n\ (\mathrm{mod}\ n^2)$</p><p>根据二项式定理：</p><p>$c\equiv (fn+1)\cdot r^n\ (mod\ n^2)$</p><p>左右两式同乘$\varphi(n)$次方，得$c^{\varphi(n)}\equiv (fn+1)^{\varphi(n)}\cdot r^{n\varphi(n)}\ (mod\ n^2)$</p><p>由$\varphi(n^2)=n\cdot \varphi(n)$且当$r\neq p$或$r\neq q$时有，$gcd(r,n)=1$可知，$r^{n\varphi(n)}\equiv 1\ (mod\ n^2)$，可得：</p><p>$c^{\varphi(n)}\equiv (fn+1)^{\varphi(n)}\ (mod\ n^2)$</p><p>因为r为随机数，所以$r\neq p,q$的概率为$\dfrac{2}{n}$，可认为$gcd(r,n)=1$成立。</p><p>再次使用二次项定理，可得$c^{\varphi(n)}\equiv fn\varphi(n)+1\ (mod\ n^2)$</p><p>由费曼小定理可知$c^{\varphi(n)}\equiv 1\ (mod\ n)$，即$n|c^{\varphi(n)}-1$，因此将1移到同余式左边并对同余式同除n，得：</p><p>$\dfrac{c^{\varphi(n)}-1}{n}\equiv f\varphi(n)\ (mod\ n)$</p><p>对于左式，设$\dfrac{c^{\varphi(n)}-1}{n}=kn+r’$</p><p>$c^{\varphi(n)}=kn^2+rn+1$</p><p>只需求解出$rn+1$即可，因此可以对$c^{\varphi(n)}$进行模$n^2$，实现时可直接使用python中的pow函数。</p><p>将左式求解后，化为求解$\varphi(n)\cdot f\equiv r’\ (mod\ n)$，即$f\equiv \varphi(n)^{-1}\cdot r’\ (mod\ n)$</p><h1 id="代码"><a href="#代码" class="headerlink" title="代码"></a>代码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> AITMCLab.libnum <span class="keyword">import</span> s2n, invmod, n2s</span><br><span class="line"></span><br><span class="line">c = <span class="number">131344898203946132222826076816862720814198751469464018831726821670</span> <span class="number">117591133883733491804579798978481132759822192648790811898868530627</span> <span class="number">177645803646988883380321414340538322474760104004492720100824604377</span> <span class="number">471904687667402745879993363591712830981372613960131531302654404256</span> <span class="number">76242061845667887640808895666325466803989428</span></span><br><span class="line">p = <span class="number">104879397075344024438671231239628115011303349344697797964879592144</span> <span class="number">922079000957</span> </span><br><span class="line">q = <span class="number">104879397075344024438671231239628115011303349344697797964879592144</span> <span class="number">922079001013</span></span><br><span class="line">phi_n = (p - <span class="number">1</span>) * (q - <span class="number">1</span>)</span><br><span class="line">n = p * q</span><br><span class="line">r = (<span class="built_in">pow</span>(c, phi_n, n * n) - <span class="number">1</span>) // n</span><br><span class="line"><span class="built_in">print</span> n2s(r * invmod(phi_n, n) % n)</span><br></pre></td></tr></table></figure><h1 id="答案"><a href="#答案" class="headerlink" title="答案"></a>答案</h1><p>flag\{can_you_find_me??\}</p><h1 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h1><p>纯数学题</p><p>学长带着推了一遍。。。这也太难了。。。</p><p>听说是<em>paillier</em>加密，果然不是RSA</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;题目来源：安恒四月赛（DASCTF 2020）&lt;/p&gt;</summary>
    
    
    
    
    <category term="crypto" scheme="https://s0uthwood.github.io/tags/crypto/"/>
    
  </entry>
  
  <entry>
    <title>fabric学习1-架构</title>
    <link href="https://s0uthwood.github.io/2020/12/08/fabric%E5%AD%A6%E4%B9%A01-%E6%9E%B6%E6%9E%84/"/>
    <id>https://s0uthwood.github.io/2020/12/08/fabric%E5%AD%A6%E4%B9%A01-%E6%9E%B6%E6%9E%84/</id>
    <published>2020-12-07T17:33:07.000Z</published>
    <updated>2020-12-18T11:31:13.645Z</updated>
    
    <content type="html"><![CDATA[<p>参考文献：<a href="/download/1801.10228.pdf">Hyperledger Fabric: A Distributed Operation System for Permissioned Blockchains</a></p><a id="more"></a><h1 id="架构"><a href="#架构" class="headerlink" title="架构"></a>架构</h1><h2 id="整体结构"><a href="#整体结构" class="headerlink" title="整体结构"></a>整体结构</h2><p>Fabric是一个许可区块链的分布式操作系统，可以执行多种编程语言编写的分布式应用。它能够在一个只能追加的数据结构中安全地跟踪执行历史，并且没有内置的加密账本。</p><p>Fabric使用了“执行-order-验证”的区块链架构，而没有遵顼标准的“order-执行”设计。其整体的分布式应用可以分为两个部分</p><ul><li><p>智能合约，称为链码 (<em>Chaincode</em>) ，是一段实现了应用逻辑的程序代码，并在执行过程中运行。链码是Fabric分布式应用的核心部分，可能会被未受信任的开发者修改。有一种特殊的链码被用于管理区块链系统并维护参数，被称为系统链码 (<em>system chaincode</em>) </p></li><li><p>背书政策 (<em>endorsement policy</em>) 在验证阶段进行评价。许可政策无法被未受信任的开发者选择或修改。其在区块链中充当一个用于事物验证的静态库，且只能通过链码进行参数化。只有指定的管理员有权限使用系统管理功能修改。</p></li></ul><p>“执行-排序-验证”结构示意图：</p><p><img data-src="execute-order-validate.png" alt=""></p><p>一个客户端向背书政策指定的peer节点(peers)发送交易。这个交易被特殊的peer节点执行并且记录输出信息，这一步骤被称为背书。执行完成后，交易进入了排序(ordering)阶段，在这一个阶段中，使用了一种可插入的共识协议来产生一个完成排序的已背书交易的序列，并按区块分组。这些交易被广播到所有的节点。这个序列的顺序由输出和状态的依赖性决定。在验证阶段，每个peer节点都需要根据背书政策和执行的一致性对已背书交易的状态变化进行验证。所有peer节点都已相同的顺序进行验证，因此结果具有确定性。</p><p>Fabric网络支持多个区块链链接到同一个排序服务上。每个区块链被称为一个通道(<em>Channel</em>)，可以有不同的peer节点作为其成员。这些通道可以被用来分离不同的区块链之间的状态，但每个通道的共识并不一致，并且通道中的交易顺序是相互分开的。认为所有排序都是可信的部署，可以通过通道访问控制来实现对节点的控制。</p><p>其中的节点可分为：客户端、peer节点（其中一部分为背书节点）、排序服务节点(OSN, <em>Ordering Service Nodes</em> or <em>orderers</em>)</p><h2 id="交易的三个阶段"><a href="#交易的三个阶段" class="headerlink" title="交易的三个阶段"></a>交易的三个阶段</h2><p><img data-src="transaction_flow.png" alt="transaction_flow"></p><h3 id="执行阶段"><a href="#执行阶段" class="headerlink" title="执行阶段"></a>执行阶段</h3><p>在执行阶段，客户端签署并发送一个交易提案给一个或多个背书节点来执行（根据背书政策，每个chaincode都有特定的一组背书节点）。一个交易提案包含了提交客户端的身份（根据MSP），交易的载荷、参数、链码标识符、每个客户端只能使用一次的nonce（随机值或计数器），以及客户端标识符和nonce生成的交易标识符。</p><p>背书节点会对交易提案进行模拟，在指定的区块链链码上执行操作。模拟操作在背书节点的本地区块链状态中进行模拟，不与其它节点同步，也不会将模拟的结果永久化到帐本中。区块链的状态仍然由节点交易管理器(<em>Peer Transaction Manager</em>)维护。一个链码创建的状态只能限定在该链码上，不能被其他的链码直接访问。需要注意的是，链码只能维护GetState、PutState、DelState操作访问的内容（<em>可能意思是：需要使用这些接口进行访问，不能直接修改，猜测状态权限为private</em>）。给予适当的权限，链码可以调用同一个通道的链码，并访问其状态。</p><p>在模拟后，背书节点会产生一个<em>writeset</em>，其中包括模拟产生的状态更新，和一个<em>readset</em>，代表交易提案模拟的版本依赖（模拟时的所有密钥以及对应的版本号）。在模拟结束后，背书节点会以加密的方式签署一份“背书”消息，包括了<em>writeset</em>和<em>readset</em>（包括交易id和背书节点的一些数据），随后以响应的方式发送给客户端。客户端收集背书，直到满足链码的背书政策，开始交易。特别的，这要求政策决定的所有背书节点都返回相同的<em>writeset</em>和<em>readset</em>。然后，客户端将继续创建交易，并传递给排序阶段。</p><h3 id="排序阶段"><a href="#排序阶段" class="headerlink" title="排序阶段"></a>排序阶段</h3><p>客户端收集到足够的背书后，将会把交易组装起来并发送给排序服务端。整个交易包括了载荷(<em>payload</em>)（包括参数的链码操作）、交易元数据、背书的集合。排序阶段对每个通道的所有提交建立了一个排序。排序服务端会将多个交易分成块，输出包含交易的哈希链序列，以提高广播协议的吞吐量。</p><ul><li><code>broadcast(tx)</code>：客户端调用这个函数来广播交易<code>tx</code>，包含了载荷和签名。</li><li><code>B</code> $\leftarrow$ <code>deliver(s)</code>：客户端调用这个函数来获取非负序列号<code>s</code>的区块<code>B</code>，$B=([tx_1,tx_2,\ldots,tx_k],h)$，$h$为<code>s-1</code>区块的哈希值。</li></ul><p>排序服务确保了一个通道中的交付区块被完全排序，确保安全。</p><p>然而，每一个单独的排序实现都允许在客户端请求中保证自己的活跃性与公平性。</p><p>由于区块链中包含了大量的节点，但仅有少部分节点实现了排序服务，因此Fabric可以配置使用内置的gossip服务，将排序服务中交付的区块分发给所有的节点。</p><h3 id="验证阶段"><a href="#验证阶段" class="headerlink" title="验证阶段"></a>验证阶段</h3><p>排序服务会把区块直接分发给各个节点（或通过<em>gossip</em>）。随后，一个新的区块进入验证阶段，包含三个连续步骤：</p><ul><li>并行执行区块中所有的交易的背书政策评估。评估是验证系统链码(VSCC, <em>validation system chaincode</em>)的任务。VSCC是一个静态库，是区块链配置的一部分，负责根据链码中的背书政策验证背书。如果不满足，这个交易会被标记为无效，并被忽略。</li><li>对块中的所有交易进行读写冲突检查(<em>read-write conflict check</em>)（版本号比较）。对于每个交易，将会对比其中readset的版本号和节点本地存储的账本当前状态中的版本号，确保版本相同。如果版本不匹配，交易会被标记为无效，并被忽略。</li><li>最后进行账本的更新阶段，在这个阶段，区块被追加到本地存储的账本中，并且更新区块链的状态。将区块添加到账本时，前两步的检查结果将被持久化以掩码的形式表示区块中的交易有效。这有助于后面进行重建状态。此外，所有的状态更新都是通过将<em>writeset</em>中的键值对写入本地完成的。</li></ul><h2 id="信任与故障模型"><a href="#信任与故障模型" class="headerlink" title="信任与故障模型"></a>信任与故障模型</h2><p>Fabric可以适应灵活的信任和故障假设。通常情况下，所有的客户端都被认为是潜在的恶意用户或是<em>Byzantine</em>。节点都被归入组织(<em>organization</em>)并且每个组织组成一个信任域(<em>trust domain</em>)。每个节点信任其组织内部的其他节点，而不信任其他组织的节点。排序服务同样认为所有的节点（或客户端）都是潜在的拜占庭。</p><p>Fabric网络的完整性依赖于排序服务的一致性。排序服务的信任模型取决于其实现。</p><p>在Fabric中，分布式应用可以定义自己的信任假设，通过背书政策来传达，并且独立于排序服务实现的共识的信任假设。</p><h1 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h1><p>Fabric使用了gRPC架构实现客户端、节点和排序服务之间的通信。</p><h2 id="成员身份管理服务（MSP）"><a href="#成员身份管理服务（MSP）" class="headerlink" title="成员身份管理服务（MSP）"></a>成员身份管理服务（MSP）</h2><p>成员身份管理服务(MSP, <em>membership service provider</em>)维护了系统中所有节点（客户端、节点、排序服务）的身分，并负责发布节点的凭证，用于认证和授权。节点之间的所有交互都是通过已认证的消息（通常是数字签名）发生的。成员身份管理包括每个节点的组件，可以认证交易、验证交易的完整性、签署并确认背书、验证其他的区块链操作。MSP中还包括了用于密钥管理和节点注册的工具。</p><p>MSP是抽象的，可以有不同的实例。Fabric中，默认的MSP实现可以处理基于数字签名的PKI认证方法，并且容纳商业认证机构(CA)。Fabric提供了独立的CA——Fabric-CA。</p><p>Fabric允许设置区块链网络的两种模式。在离线模式下，凭证由CA生成，并分发到所有节点。peer节点和排序节点只能在离线模式下注册。对于客户端的注册，Fabric-CA提供了在线模式，向客户端发送加密凭证。MSP的配置必须要确保所有的节点都能识别相同的身份和认证认定为有效（特别是所有的peer节点）。</p><p>例如，当多个组织在同一个区块链网络中时，MSP需要能够允许身份的联合。每个组织向自己的成员发放身份，每个peer节点都能识别所有组织的成员。这可以通过多个MSP实例来实现。例如，在每个组织和一个MSP之间建立一个映射。</p><h2 id="排序服务"><a href="#排序服务" class="headerlink" title="排序服务"></a>排序服务</h2><p>排序服务可管理多个通道，对每个通道，都提供如下三个服务：</p><ol><li><em>Atomic broadcast</em>，用于对交易进行排序，实现广播和分发</li><li>重新配置(<em>reconfiguration</em>)通道，成员通过广播一个配置更新事物(<em>configuration update transaction</em>)修改通道。</li><li>（可选择）访问控制(<em>access control</em>)，在这些配置中，排序服务作为可信的实体，限制交易的广播和指定peer节点和客户端的块的接收</li></ol><p>排序服务通过系统通道上的生成块进行引导。生成块携带了配置事务(<em>configuration transaction</em>)，定义了排序服务的操作。</p><p>当前版本的实现由OSN组成，OSN实现了描述的操作并且通过系统通道通信。实际的<em>atomic broadcast</em>函数由基于<em>ZooKeeper</em>的Kafka实例提供，这个实例提供了可以扩展的发布-订阅消息，在节点崩溃后仍具有强一致性(<em>consistency</em>)。这个实现可以运行在与OSN分离的物理节点上。OSN作为peers和Kafka实例之间的代理。</p><p>OSN直接将收到的新交易注入到广播中。OSN将从广播中接收到的交易转换成块。只要满足三个情况之一，块就会被断开。</p><ul><li>区块包含了交易允许的最大值</li><li>区块达到最大大小</li><li>从接收到第一个交易后超过某特定时间</li></ul><p>批处理的过程是确定的，因此在所有节点上都会产生相同的区块。考虑到从广播中接收的交易数据流，前两项情况是已经确定的。对于第三个条件，当节点读入块中的第一个交易时，会开启一个计时器。如果计时器超时后，这个区块仍然没有断开，OSN会在通道上广播一个特殊的“到时断开(<em>time-to-cut</em>)”交易，其中记录了需要断开的区块的序列号。另一方面，每个OSN在收到“到时断开”交易后，会根据其给定的序列号，立即切断新的区块。这个交易是原子性的分发给所有连接的OSN，所以区块中都包含相同的交易列表。OSN将最近交付的一系列区块直接持久化到文件系统中，因此可以通过分发回答peer节点来回收区块。</p><h2 id="Peer-Gossip"><a href="#Peer-Gossip" class="headerlink" title="Peer Gossip"></a>Peer Gossip</h2><p>将三个阶段分开的好处是在开发的时候可以独立扩展。然而，由于共识算法往往有带宽限制，排序服务的吞吐量被节点的网络容量所限制。共识无法通过增加节点而扩展，反而会让吞吐量降低。然而，由于排序和验证是分开的，在排序阶段后，重要的是如何有效地广播执行阶段的结果，以交给peer节点进行验证。此外，还有如何对新加入的peer节点和长期断开的peer节点进行状态转移。这两个问题就是gossip组件所需要解决的。Fabric gossip利用流行组播(<em>epidemic multicast</em>)来解决这个问题。区块是由排序服务签署的。这意味着一个peer节点在收到所有区块后，可以独立的组装为区块链并验证其完整性。</p><p>gossip的通信基于gRPC，利用TLS（传输层安全协议）进行相互识别，使得每一方都可以将TLS凭证与远程peer节点的身份绑定。gossip组件用来维护系统中当前在线的peer节点的成员视图。所有的peer节点通过定期传播成员数据独立建立一个本地视图。此外，一个peer节点可以在网络崩溃或者中断后重新连入成员视图。</p><p>Fabric的gossip组件采用了两个阶段进行信息的传播：</p><ul><li>在<em>push</em>阶段，每个peer节点从成员视图中选择一个随机的活跃邻居集合，并向他们发送信息</li><li>在<em>pull</em>阶段，每个peer节点定期探测一个随机选择的peer节点集合，并请求缺失的信息</li></ul><blockquote><p>研究表明，同时使用这两种方法可以优化可用带宽并确保所有peer节点有很高的概率接收到所有信息。</p></blockquote><p>为了减少从排序节点向网络中发送的区块的负载，协议同时在peer中选择了一个领导者(<em>elects a leader peer</em>)，代表peer节点从排序服务中<em>pull</em>区块，并启动gossip分发。这个机制对领导者出现故障具有弹性。</p><h2 id="分布式账本-Ledger"><a href="#分布式账本-Ledger" class="headerlink" title="分布式账本(Ledger)"></a>分布式账本(<em>Ledger</em>)</h2><p>账本组件在各个peer节点中维持分布式账本并建立持久性的存储，并实现账本的模拟、验证和更新阶段。整体上由一个区块存储(<em>block store</em>)和一个peer节点交易管理器(<em>peer transaction manager</em>)组成。</p><h3 id="区块存储-Ledger-Block-Store"><a href="#区块存储-Ledger-Block-Store" class="headerlink" title="区块存储(Ledger Block Store)"></a>区块存储(Ledger Block Store)</h3><p>账本区块存储持久化交易区块，并以一组仅追加文件的形式实现。由于区块无法被改变，并以一个特定的顺序到达，一个仅追加的结构能够带来最好的性能。此外，区块存储中维护了一些索引(<em>indices</em>)，用来随机访问区块或区块中的交易。</p><h3 id="peer交易管理器-Peer-Transaction-Manager"><a href="#peer交易管理器-Peer-Transaction-Manager" class="headerlink" title="peer交易管理器(Peer Transaction Manager)"></a>peer交易管理器(Peer Transaction Manager)</h3><p>peer节点交易管理器(PTM)保持版本键值对处于最新状态。它能为每一个唯一的条目(<em>entry</em>)的<em>key</em>以(<em>key</em>,<em>val</em>, <em>ver</em>)存储一个元组，其中包含了最近存储的值<em>val</em>，和最新的版本号<em>var</em>。版本由区块序列号和区块内的交易序列号组成，因此版本号都是唯一且递增的。PTM使用了本地键值存储来识别版本变量，具体实现使用了LevelDB和Apache CouchDB。</p><p>在模拟时，PTM提供了一个稳定的最新状态快照。<strong>执行阶段</strong>中提到，PTM在<em>readset</em>中为GetState访问的每个条目记录一个元组(<em>key</em>, <em>ver</em>)，在<em>writeset</em>中为交易调用PutState更新的每个条目记录一个元组(<em>key</em>, <em>val</em>)。此外，PTM支持范围查询(<em>range queries</em>)，并计算出查询结果的加密哈希（一组(<em>key</em>, <em>ver</em>)元组），并将查询字符串和哈希添加到readset中。</p><p>在验证阶段，PTM依次验证一个区块中的所有交易，检查交易是否与之前的任何交易产生冲突。对于readset中的所有key，如果readset中的版本记录与最新状态的版本不同，PTM就会把这个交易标记为无效。对于范围查找，PTM会重新执行查询并与之前的<em>readset</em>比较哈希值，确保不发生错误的读取。</p><h3 id="崩溃处理"><a href="#崩溃处理" class="headerlink" title="崩溃处理"></a>崩溃处理</h3><p>账本组件在更新时需要能处理peer节点的崩溃。</p><p>在接收到一个新区块后，PTM已经对其进行了验证，并使用了掩码将区块中的交易标记为有效或无效。此时，账本将区块写入账本的区块存储中，刷新到磁盘，随后更新区块存储的索引。随后，PTM将所有有效交易的<em>writeset</em>状态变化应用到本地存储中。最后，计算并持久化一个<em>savepoint</em>的值，表示成功应用区块数量的最大值。从崩溃中恢复时，<em>savepoint</em>值用来从持久化块中恢复索引和最新状态。</p><h2 id="链码执行"><a href="#链码执行" class="headerlink" title="链码执行"></a>链码执行</h2><p>Chaincode在一个与其余peer节点松散耦合的环境中执行。支持增添新的链码编程语言的插件。目前支持Go、Java和Node。</p><p>每个用户级或应用链码都在Docker容器环境中的独立进程中执行，这使得链码和peer节点之间相互隔离，简化了链码的生命周期管理（启动、停止、中止）。链码和peer节点通过gRCP通信。通过松散的耦合关系，peer节点不知道链码具体使用了什么语言实现。</p><p>不同于应用链码，系统链码直接在peer节点的进程中运行，可以实现Fabric所需要的特定功能，可以用于用户链码之间的隔离限制过多的情况。</p><h2 id="配置和系统链码"><a href="#配置和系统链码" class="headerlink" title="配置和系统链码"></a>配置和系统链码</h2><p>Fabric通过通道配置(<em>channel configuration</em>)和系统链码(<em>system chaincodes</em>)进行定制。</p><p>Fabric中每个通道都会形成一个逻辑区块链。通道的配置由元数据进行维护，并永久保留在配置区块(<em>configuration blocks</em>)中。每个配置区块都会包含完整的通道配置，并不会包括任何其他的东西。每个区块链都以一个配置区块开始，称之为创世块(<em>genesis block</em>)，用于引导通道。通道的配置包括：</p><ol><li>参与节点的MSP定义；</li><li>OSN的网络地址；</li><li>共识实现和配许服务的共享配置，比如大小和超时等设置；</li><li>管理对排序服务操作（广播和分发）访问的规则；</li><li>管理如何修改通道配置的各个部分的规则。</li></ol><p>通道的配置可以使用通道配置更新事务(<em>channel configuration update transaction</em>)进行更新，其中需要包括对配置进行的修改和一组签名。排序节点通过使用当前的配置验证该签名是否得到授权，来评估此次更新是否有效。然后，排序节点生成一个新的配置区块，嵌入新的配置和配置更新事务。Peer节点接收后，根据当前的配置验证更新是否得到了授权，有效则进行配置更新。</p><p>在部署应用链码时，会<u>参考</u>一个认可系统链码（<em>endorsement system chaincode</em>, ESCC）和一个验证系统链码（<em>validation system chaincode</em>, VSCC）。这两个链码的选择使得ESCC输出的背书，可以作为VSCC输入的一部分进行验证。ESCC将一个提案和提案模拟的结果作为输入。如果结果符合要求，则ESCC产生一个包含结果和认可的响应。对于默认的ESCC，这个背书只是peer节点的本地签名身份的签名。VSCC将一个事务作为输入，并输出该事务是否有效。对于默认的VSCC，背书被收集，并根据为链码指定的背书策略进行评估。进一步的系统链码实现其他支持功能，如链码生命周期。</p><blockquote><p>系统链码的核心代码在/fabric/core/common/sysccprovider和/fabric/core/scc下</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;参考文献：&lt;a href=&quot;/download/1801.10228.pdf&quot;&gt;Hyperledger Fabric: A Distributed Operation System for Permissioned Blockchains&lt;/a&gt;&lt;/p&gt;</summary>
    
    
    
    
    <category term="crypto" scheme="https://s0uthwood.github.io/tags/crypto/"/>
    
    <category term="fabric" scheme="https://s0uthwood.github.io/tags/fabric/"/>
    
  </entry>
  
  <entry>
    <title>基物实验</title>
    <link href="https://s0uthwood.github.io/2020/11/17/%E5%9F%BA%E7%89%A9%E5%AE%9E%E9%AA%8C/"/>
    <id>https://s0uthwood.github.io/2020/11/17/%E5%9F%BA%E7%89%A9%E5%AE%9E%E9%AA%8C/</id>
    <published>2020-11-17T15:16:05.000Z</published>
    <updated>2021-01-01T17:03:36.282Z</updated>
    
    <content type="html"><![CDATA[<p>记录一下自己做实验时的各种坑与总结的经验，以后可以提醒提醒学弟。</p><a id="more"></a><h1 id="分光仪"><a href="#分光仪" class="headerlink" title="分光仪"></a>分光仪</h1><p>实验时间：2020年9月21日</p><p>这是我做的第一个实验，成功AK（手动狗头）</p><h2 id="调整"><a href="#调整" class="headerlink" title="调整"></a>调整</h2><p>第一步的粗调非常重要，决定了你接下来的调整速度。个人经验是在实验前千万不要去玩那些螺丝，也许上个人已经调好了，上来随便调一调就合格，可以直接做实验。</p><p>按照正常的方法去调整就行，遇到的唯一困难就是转180°后找不到绿十字了，这时可以考虑先用眼睛去找，确定了绿十字反射回来的位置之后再去调目镜和平台，后面按照视频里或者老师讲的做就可以，应该没什么难度。</p><h2 id="测量三棱镜的顶角"><a href="#测量三棱镜的顶角" class="headerlink" title="测量三棱镜的顶角"></a>测量三棱镜的顶角</h2><p>这个实验还是挺水的。。。随便测测就行了。顶角是60°，测量结果应该是120°</p><h2 id="最小偏向角法测量棱镜的折射率"><a href="#最小偏向角法测量棱镜的折射率" class="headerlink" title="最小偏向角法测量棱镜的折射率"></a>最小偏向角法测量棱镜的折射率</h2><p>这个实验最大的坑就是“最小偏向角”一定要旋转三棱镜的摆放位置，直到折射光的偏转最小。（折射光在右手边就让光尽可能靠左，左手边就尽可能靠右）</p><p>后面应该就不需要去动三棱镜了，钠光的入射光应该是可以找到的。</p><p>最终的测量结果应该在50°50′左右。</p><h2 id="掠入射法测量棱镜的折射率"><a href="#掠入射法测量棱镜的折射率" class="headerlink" title="掠入射法测量棱镜的折射率"></a>掠入射法测量棱镜的折射率</h2><p>当时做这个实验的时候主要是不知道怎么摆放。。。好在最后找了个做过的大佬，画了个草图。</p><p><img data-src="掠入射测量棱镜的折射率.jpg" alt=""></p><p>最终的测量结果应该在39°左右。</p><p>如果时间不够用的话，一个省时间的技巧是在测下一组数据的时候不动目镜，只转动刻度盘，这样就可以少调整一次。（如果彻底没有时间了，那就测量一组，然后写到第五组的位置上，剩下的数据全靠编。我室友就这么硬水过的。。。）</p><h2 id="干涉法测平板玻璃折射率"><a href="#干涉法测平板玻璃折射率" class="headerlink" title="干涉法测平板玻璃折射率"></a>干涉法测平板玻璃折射率</h2><p>这个实验做了也不算积分，而且至少要1小时的时间，所以就没做（也没人做）。</p><h1 id="示波器"><a href="#示波器" class="headerlink" title="示波器"></a>示波器</h1><p>实验时间：2020年10月26日</p><p>做的第一个非光学实验（绪论除外），没能AK，后面就决定重回光学的怀抱了。</p><h2 id="示波器的使用"><a href="#示波器的使用" class="headerlink" title="示波器的使用"></a>示波器的使用</h2><p>这个还是挺简单的，但建议速度一定要快，给后面两个实验留点时间。</p><p>需要注意的是，这个实验老师是会查现象的，所以最好不要尝试去水。其实水的目的不是混分，都是现象做出来了，只是时间不够时的一个手段而已，非常不建议滥用，毕竟做出实验现象还是很爽的。</p><h2 id="二极管伏安特性曲线"><a href="#二极管伏安特性曲线" class="headerlink" title="二极管伏安特性曲线"></a>二极管伏安特性曲线</h2><p>当时按照电路图连了电路，结果发现线貌似不够用，打算先测量声速。</p><p>然后就没有然后了</p><h2 id="声速测量"><a href="#声速测量" class="headerlink" title="声速测量"></a>声速测量</h2><p>测量声速的时候遇到了好几个坑。</p><ol><li>实验前和实验后一定要记得调整频率，使得振幅最大，并记录下来。</li><li>实验的线材和器材有毒，各种连接不稳定，最后是用笔袋支撑着线才能做实验的。</li><li>我当时老师要求振幅法和李萨如法都要用，很耽误时间，建议先做第二个实验。不过我当时的老师人比较好，让我们几个人拖延了一会，硬是把数据记完了，而且没有查实验器材。</li></ol><h1 id="迈克尔逊干涉"><a href="#迈克尔逊干涉" class="headerlink" title="迈克尔逊干涉"></a>迈克尔逊干涉</h1><p>实验时间：2020年11月9日</p><p>第二个光学实验，也AK了。让人不禁感叹，光学实验真的是适合刷积分啊。</p><h2 id="迈克尔逊干涉-1"><a href="#迈克尔逊干涉-1" class="headerlink" title="迈克尔逊干涉"></a>迈克尔逊干涉</h2><p>这个实验老师会讲好久（但里面有不少干货，建议认真听），我当时足足讲了1小时20分钟，讲到最后我都直接开激光偷偷调整了。</p><p>整个调整步骤有四步，一步一步来就行，别忘了第一步是调激光入射光就行（我做完实验才发现这个事情，还好最后没出现问题）。如果发现自己找不到水平一排的三个亮点，可能是入射光没有完全射到各个镜子上，调整的时候出现问题了还是动脑子想一想吧，毕竟遇到的问题真的是各种各样的都有。</p><p>如果发现迈克尔逊环很密的话，可能是反射镜位置不太对，调整到老师推荐的位置，然后拧一拧应该就能出来。</p><p>装置的空程差真的让人绝望，我一开始大概转了60圈才消除掉，</p><p>数的时候真的可能会数错。。。建议十个十个数。技巧就是一定要数内缩环，外扩真的纠结应该数到哪里。</p><h2 id="牛顿环干涉"><a href="#牛顿环干涉" class="headerlink" title="牛顿环干涉"></a>牛顿环干涉</h2><p>感觉牛顿环是最简单的实验了，只需要调好反射镜的位置和目镜的高度就行。重点是不要数错环，我当时是从11数到20。。。建议从6数到15。</p><p>数错了重新数其实也浪费不了多少时间，如果懒的话就继续编数据大法吧。。。</p><h2 id="劈尖干涉"><a href="#劈尖干涉" class="headerlink" title="劈尖干涉"></a>劈尖干涉</h2><p>这个实验的劈尖干涉应该是来得及做的，我当时最后有几十分钟的时间来纠结应该怎么做（其实想法一直都没问题，但我的仪器测量范围有问题，浪费了巨量时间）。当时认识的大佬没做这个实验，于是只能自己摸索了。下面是我总结的实验步骤。</p><ol><li><p>本实验的样本无须自己制作。</p></li><li><p>做实验过程中遇到的唯一障碍在于测量“细丝位置到尖端的距离”。我遇到的样本为一张纸，因此与图片中的细丝有些小差别。实际操作中的装置如下图所示（左侧是尖端，右侧的小横线是纸张）。图片中的L就是需要测量的部分。具体做法大致就是把装置侧过来，显微镜对焦，然后从尖端量到纸张即可。</p><p><img data-src="劈尖装置示意图.jpg" alt=""></p></li><li><p>我用的仪器貌似有问题。。。小于25mm的部分手轮转不过去，最后还是借室友的仪器做的……</p></li><li><p>在测量干涉条纹宽度时，显微镜物镜可能会被螺丝卡住，建议把装置倒过来测量，把四个突出来的螺丝放在下面当支柱。。。</p></li><li><p>我的测量结果是$L\approx39\ \mathrm{mm}$, $n=5$时$l\approx5.6\ \mathrm{mm}$。反正最后处理时别忘了还有个$n$就行，刚开始算出来的结果给我人都看傻了，最后算的大概是$50\mu m$，感觉小了一些，不过至少还有点靠谱。</p></li></ol><h1 id="钠光干涉"><a href="#钠光干涉" class="headerlink" title="钠光干涉"></a>钠光干涉</h1><p>时间：2020年11月16日</p><p>第三个光学实验，第一个非必修实验。</p><p>这次没有AK（这句话导致我险些被室友暴打）。还是大意了，没有闪。</p><h2 id="钠光双棱镜"><a href="#钠光双棱镜" class="headerlink" title="钠光双棱镜"></a>钠光双棱镜</h2><p>本实验的仪器调整步骤很坑，耽误了巨量时间。。。最后只能卡点强行搞完双棱镜的实验。</p><p>我最后总结的调整方法：</p><ol><li>前面用ppt或者书上的方法都行，毕竟各个元器件的高度之类的还是比较好调的。</li><li>到最后找大小像和干涉条纹时，一定要先找干涉条纹，老师也强调了，但没说怎么操作。。。搞得我各种前后移动最后还是找不到。最后发现是双棱镜和狭缝不平行所导致的。</li><li>最好的方法是先参考别人的报告摆放好狭缝和双棱镜的位置（这样可以确保有20个条纹），让目镜紧贴双棱镜，旋转双棱镜或调整狭缝宽度以找到清晰的干涉条纹，再把目镜拉到正确的位置，找大小像并把叉丝调到中心。</li><li>实验室的双棱镜上半部分是空的，会漏光。所以如果发现目镜拉远后干涉条纹被光盖住了，可以试试把双棱镜位置提高一点。</li></ol><p>另外，感觉目镜手轮的4和5很容易读错，读的时候一定要注意一点。仪器的位置最好和已有实验报告的位置差不多，可以对着别人的数据检查，不然最后数据偏差过大就傻了。这种东西能水过去就尽量水过去吧。。。</p><h2 id="钠光劳埃镜"><a href="#钠光劳埃镜" class="headerlink" title="钠光劳埃镜"></a>钠光劳埃镜</h2><p>勉强做完双棱镜，gg。祝xdm好运。</p><h1 id="稳态法测不良导体热导率"><a href="#稳态法测不良导体热导率" class="headerlink" title="稳态法测不良导体热导率"></a>稳态法测不良导体热导率</h1><p>时间：2020年12月5日</p><p>第一个热学实验，英文实验+研究性实验</p><p>热学实验就离谱。把装置调好之后等着就行了，建议带个作业去写，或者把器材的数据简单处理一下。大概得等1个多小时吧，加热盘温度到达75℃之后再等散热盘温度稳定就行了。实际操作的时候不一定非要到75℃，毕竟示数会有误差，加到74.9℃之后发现一直没变化就可以记录了。（试验台在过道边上是真的坑，走来走去的对实验结果真的有影响）</p><p>英文实验熟悉了老师的口语之后还是可以听懂的。我当时的老师人很好，和他说了想做研究性实验之后说可以让我们一直搞到下午上课前，后来直接让我们去没人的实验台做实验了（最后大概拖了30分钟）。</p><p>我做的研究性实验就是做了个无风扇的实验，然后两个实验进行对比，结论是有风扇实验系统误差高，无风扇实验偶然误差高，并为实验在风扇上提出了两个改进方案。做研究性实验的话建议去知网找找，我就是在知网找到一篇比较风扇的论文，然后自己做实验，实验原理找了个物竞大佬教。</p><p>（感觉上课和老师聊研究性实验的时候，全班同学都在用一种怪异的眼神看着我…）</p><h1 id="电位差计及其应用"><a href="#电位差计及其应用" class="headerlink" title="电位差计及其应用"></a>电位差计及其应用</h1><p>时间：2020年12月14日</p><p>第一次真正意义上的电学实验</p><p>积分已经够了，所以这次实验就比较划水</p><h2 id="自足电位差计"><a href="#自足电位差计" class="headerlink" title="自足电位差计"></a>自足电位差计</h2><p>实验的电路黑板上已经画出来了，照着连接就行。这个实验不需要电流表，使用两个电阻箱进行实验。先根据标准电压的电压值（随环境温度变化）调$R_1$（比如$E_N=1.01842V$时，$R_1=1018.4\Omega$），然后调$R_2$使得灵敏测微计无偏即可。后面就照常测量即可，一些细节老师课上都会讲。老师用万用表测出来的可能有偏差（我当时是万用表结果低了$0.004V$左右）。</p><h2 id="箱式电位差计测量电压"><a href="#箱式电位差计测量电压" class="headerlink" title="箱式电位差计测量电压"></a>箱式电位差计测量电压</h2><p>按照老师讲的去连线就行，特别注意，在最后读数的时候需要把粗调旋钮按下去。</p><p>如果没有反应，也有可能是不小心把电源关上了。</p><p>后面的实验就没有做，因为没做啥准备工作，现场也没想好怎么测量…</p><h1 id="绪论实验"><a href="#绪论实验" class="headerlink" title="绪论实验"></a>绪论实验</h1><p>实验时间：2020年10月12日</p><p>绪论实验没什么好说的，就是上来会有个小测验，建议稍微准备一下。我那次雨课堂测试，十几个人平均分3.8/10，就nm离谱。</p><p>绪论的报告要求会略高一点点，既要列出公式也要把数值带进去的式子写上，最后再写答案。计算步骤直接上知乎抄吧。</p><p>听说最后的给分都挺低，4分就算不错了。也不知道是不是真的。</p>]]></content>
    
    
    <summary type="html">&lt;p&gt;记录一下自己做实验时的各种坑与总结的经验，以后可以提醒提醒学弟。&lt;/p&gt;</summary>
    
    
    
    
    <category term="物理" scheme="https://s0uthwood.github.io/tags/%E7%89%A9%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>My Latex Cheatsheet</title>
    <link href="https://s0uthwood.github.io/2020/11/15/My-Latex-Cheatsheet/"/>
    <id>https://s0uthwood.github.io/2020/11/15/My-Latex-Cheatsheet/</id>
    <published>2020-11-15T15:45:58.000Z</published>
    <updated>2020-12-12T04:17:09.463Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>整理一下自己用过的latex命令。</p><p><del>先占个坑，还没想好怎么写…</del></p><p>现在想好怎么写了，慢慢填坑吧。。。</p><a id="more"></a><h1 id="标题及基础设置"><a href="#标题及基础设置" class="headerlink" title="标题及基础设置"></a>标题及基础设置</h1><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\documentclass</span>[a4paper, zihao=-4, UTF8]&#123;ctexart&#125;</span><br><span class="line"><span class="keyword">\CTEXsetup</span>[format=&#123;<span class="keyword">\Large</span><span class="keyword">\bfseries</span>&#125;]&#123;section&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\title</span>&#123;&#125;</span><br><span class="line"><span class="keyword">\author</span>&#123;&#125;</span><br><span class="line"><span class="keyword">\date</span>&#123;&#125;</span><br><span class="line"><span class="keyword">\pagesytle</span>&#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">%\setcounter&#123;section&#125;&#123;-1&#125;   % section start from 0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\maketitle</span></span><br><span class="line"><span class="keyword">\section</span>&#123;&#125;</span><br><span class="line"><span class="keyword">\section</span>[short title]&#123;&#125;</span><br><span class="line"><span class="keyword">\label</span>&#123;sec:section<span class="built_in">_</span>with<span class="built_in">_</span>short<span class="built_in">_</span>title&#125;</span><br><span class="line">section <span class="keyword">\ref</span>&#123;sec:section<span class="built_in">_</span>with<span class="built_in">_</span>short<span class="built_in">_</span>title&#125; is a section with a short title. <span class="comment">%交叉引用</span></span><br><span class="line"><span class="keyword">\section</span>*&#123;&#125;</span><br><span class="line"><span class="keyword">\subsection</span>&#123;&#125;</span><br><span class="line"><span class="keyword">\subsection</span>*&#123;&#125;</span><br><span class="line"><span class="keyword">\subsubsection</span>&#123;&#125;</span><br><span class="line"><span class="keyword">\subsubsection</span>*&#123;&#125;</span><br><span class="line"><span class="keyword">\paragraph</span>&#123;&#125;</span><br><span class="line"><span class="keyword">\par</span></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure><h1 id="数学符号"><a href="#数学符号" class="headerlink" title="数学符号"></a>数学符号</h1><h2 id="常用数学符号"><a href="#常用数学符号" class="headerlink" title="常用数学符号"></a>常用数学符号</h2><div class="table-container"><table><thead><tr><th style="text-align:center">Code</th><th style="text-align:center">Latex</th><th style="text-align:center">Code</th><th style="text-align:center">Latex</th></tr></thead><tbody><tr><td style="text-align:center">\because</td><td style="text-align:center">$\because$</td><td style="text-align:center">\therefore</td><td style="text-align:center">$\therefore$</td></tr><tr><td style="text-align:center">\frac{a}{b}</td><td style="text-align:center">$\frac{a}{b}$</td><td style="text-align:center">\dfrac{a}{b}</td><td style="text-align:center">$\dfrac{a}{b}$</td></tr><tr><td style="text-align:center">\cdot</td><td style="text-align:center">$\cdot$</td><td style="text-align:center">\cdots</td><td style="text-align:center">$\cdots$</td></tr><tr><td style="text-align:center">\ldots</td><td style="text-align:center">$\ldots$</td><td style="text-align:center">\infty</td><td style="text-align:center">$\infty$</td></tr><tr><td style="text-align:center">\log</td><td style="text-align:center">$\log$</td><td style="text-align:center">\lim</td><td style="text-align:center">$\lim$</td></tr><tr><td style="text-align:center">\sin</td><td style="text-align:center">$\sin$</td><td style="text-align:center">\cos</td><td style="text-align:center">$\cos$</td></tr><tr><td style="text-align:center">\rightarrow</td><td style="text-align:center">$\rightarrow$</td><td style="text-align:center">\int_{0}^{1}</td><td style="text-align:center">$\int_{0}^{1}$</td></tr><tr><td style="text-align:center">\iint</td><td style="text-align:center">$\iint$</td><td style="text-align:center">\oint</td><td style="text-align:center">$\oint$</td></tr><tr><td style="text-align:center">\oiint</td><td style="text-align:center">$\oiint$</td><td style="text-align:center">\iiint</td><td style="text-align:center">$\iiint$</td></tr><tr><td style="text-align:center">\in</td><td style="text-align:center">$\in$</td><td style="text-align:center">\notin</td><td style="text-align:center">$\notin$</td></tr><tr><td style="text-align:center">\forall</td><td style="text-align:center">$\forall$</td><td style="text-align:center">\exist</td><td style="text-align:center">$\exist$</td></tr><tr><td style="text-align:center">\sqrt{a}</td><td style="text-align:center">$\sqrt{a}$</td><td style="text-align:center">\exist</td><td style="text-align:center">$\exist$</td></tr></tbody></table></div><p>\sum\limits_{i=1}^{10}:  $\sum\limits_{i=1}^{10}$ </p><p>\prod\limits_{i=1}^{10}: $\prod\limits_{i=1}^{10}$</p><p>\lim\limits_{i\rightarrow+\infty}: $\lim\limits_{i\rightarrow+\infty}$</p><h2 id="希腊字母"><a href="#希腊字母" class="headerlink" title="希腊字母"></a>希腊字母</h2><div class="table-container"><table><thead><tr><th style="text-align:center">Code</th><th style="text-align:center">Latex</th><th style="text-align:center">Code</th><th style="text-align:center">Latex</th></tr></thead><tbody><tr><td style="text-align:center">\alpha</td><td style="text-align:center">$\alpha$</td><td style="text-align:center">\varepsilon</td><td style="text-align:center">$\varepsilon$</td></tr><tr><td style="text-align:center">\delta</td><td style="text-align:center">$\delta$</td><td style="text-align:center">\pi</td><td style="text-align:center">$\pi$</td></tr><tr><td style="text-align:center">\rho</td><td style="text-align:center">$\rho$</td><td style="text-align:center">\lambda</td><td style="text-align:center">$\lambda$</td></tr><tr><td style="text-align:center">\varphi</td><td style="text-align:center">$\varphi$</td><td style="text-align:center">\mu</td><td style="text-align:center">$\mu$</td></tr><tr><td style="text-align:center">\Delta</td><td style="text-align:center">$\Delta$</td><td style="text-align:center">\Sigma</td><td style="text-align:center">$\Sigma$</td></tr><tr><td style="text-align:center">\Pi</td><td style="text-align:center">$\Pi$</td><td style="text-align:center">\theta</td><td style="text-align:center">$\theta$</td></tr></tbody></table></div><h2 id="二元运算符"><a href="#二元运算符" class="headerlink" title="二元运算符"></a>二元运算符</h2><div class="table-container"><table><thead><tr><th style="text-align:center">Code</th><th style="text-align:center">Latex</th><th style="text-align:center">Code</th><th style="text-align:center">Latex</th></tr></thead><tbody><tr><td style="text-align:center">\equiv</td><td style="text-align:center">$\equiv$</td><td style="text-align:center">\neq</td><td style="text-align:center">$\neq$</td></tr><tr><td style="text-align:center">\leqslant</td><td style="text-align:center">$\leqslant$</td><td style="text-align:center">\geqslant</td><td style="text-align:center">$\geqslant$</td></tr><tr><td style="text-align:center">\sim</td><td style="text-align:center">$\sim$</td><td style="text-align:center">\approx</td><td style="text-align:center">$\approx$</td></tr><tr><td style="text-align:center">\mid</td><td style="text-align:center">$\mid$</td><td style="text-align:center">\nmid</td><td style="text-align:center">$\nmid$</td></tr><tr><td style="text-align:center">\pm</td><td style="text-align:center">$\pm$</td><td style="text-align:center">\times</td><td style="text-align:center">$\times$</td></tr><tr><td style="text-align:center">\cup</td><td style="text-align:center">$\cup$</td><td style="text-align:center">\cap</td><td style="text-align:center">$\cap$</td></tr><tr><td style="text-align:center">\subset</td><td style="text-align:center">$\subset$</td><td style="text-align:center">\supset</td><td style="text-align:center">$\supset$</td></tr></tbody></table></div><h2 id="括号"><a href="#括号" class="headerlink" title="括号"></a>括号</h2><div class="table-container"><table><thead><tr><th style="text-align:center">Code</th><th style="text-align:center">Latex</th><th style="text-align:center">Code</th><th style="text-align:center">Latex</th></tr></thead><tbody><tr><td style="text-align:center">\left( \right)</td><td style="text-align:center">$\left(\right)$</td><td style="text-align:center">\left[ \right]</td><td style="text-align:center">$\left[\right]$</td></tr><tr><td style="text-align:center">\left\\{ \right\\}</td><td style="text-align:center">$\left\{\right\}$</td><td style="text-align:center">\left\lbrace \right\rbrace</td><td style="text-align:center">$\left\lbrace\right\rbrace$</td></tr><tr><td style="text-align:center">\left&lt; \right&gt;</td><td style="text-align:center">$\left&lt;\right&gt;$</td><td style="text-align:center">\left) \right(</td><td style="text-align:center">$\left) \right($</td></tr><tr><td style="text-align:center">\left&#124; \right&#124;</td><td style="text-align:center">$\left&#124;\right&#124;$</td><td style="text-align:center">\left\\&#124; \right\\\&#124;</td><td style="text-align:center">$\left\&#124; \right\&#124;$</td></tr><tr><td style="text-align:center">\left\{ \right.</td><td style="text-align:center">$\left\{ \right.$</td><td style="text-align:center"></td></tr></tbody></table></div><h1 id="图片"><a href="#图片" class="headerlink" title="图片"></a>图片</h1><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\usepackage</span>&#123;graphicx&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;subfigure&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;caption2&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\renewcommand</span>&#123;<span class="keyword">\figurename</span>&#125;&#123;图&#125;</span><br><span class="line"><span class="keyword">\renewcommand</span>&#123;<span class="keyword">\captionlabeldelim</span>&#125;&#123;.&#125;</span><br><span class="line"><span class="keyword">\renewcommand</span>&#123;<span class="keyword">\thesubfigure</span>&#125; &#123;<span class="keyword">\thefigure</span>.<span class="keyword">\arabic</span>&#123;subfigure&#125;&#125; <span class="keyword">\makeatletter</span></span><br><span class="line"><span class="keyword">\renewcommand</span>&#123;<span class="keyword">\@thesubfigure</span>&#125;&#123;<span class="keyword">\thesubfigure</span>:<span class="keyword">\space</span>&#125; <span class="keyword">\renewcommand</span>&#123;<span class="keyword">\p@subfigure</span>&#125;&#123;&#125; <span class="keyword">\makeatother</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;figure&#125;[h]</span><br><span class="line"><span class="keyword">\centering</span></span><br><span class="line"><span class="keyword">\includegraphics</span>[width=0.8<span class="keyword">\textwidth</span>]&#123;filepath/pngname.png&#125;</span><br><span class="line"><span class="keyword">\caption</span>&#123;caption of this figure&#125;</span><br><span class="line"><span class="keyword">\label</span>&#123;label of this figure&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;figure&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;figure&#125;[H]</span><br><span class="line"><span class="keyword">\centering</span></span><br><span class="line"><span class="keyword">\subfigure</span>[caption of this subfigure-1]&#123;</span><br><span class="line"><span class="keyword">\includegraphics</span>[width=0.45<span class="keyword">\textwidth</span>]&#123;filepath/pngname&#125;</span><br><span class="line"><span class="keyword">\label</span>&#123;label of this subfigure-1&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">\subfigure</span>[caption of this subfigure-2]&#123;</span><br><span class="line"><span class="keyword">\includegraphics</span>[width=0.45<span class="keyword">\textwidth</span>]&#123;filepath/pngname&#125;</span><br><span class="line"><span class="keyword">\label</span>&#123;label of this subfigure-2&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">\caption</span>&#123;caption of figures&#125;</span><br><span class="line"><span class="keyword">\label</span>&#123;label of figures&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;figure&#125;</span><br><span class="line">use <span class="keyword">\ref</span>&#123;label of this figure&#125; to quote it. <span class="comment">%交叉引用</span></span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure><h1 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h1><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\usepackage</span>&#123;listings&#125;</span><br><span class="line"><span class="keyword">\usepackage</span>&#123;xcolor&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\setmonofont</span>&#123;Consolas&#125;</span><br><span class="line"><span class="keyword">\setsansfont</span>&#123;Consolas&#125;</span><br><span class="line"><span class="keyword">\lstset</span>&#123;</span><br><span class="line">columns=fixed,</span><br><span class="line">breakatwhitespace=true,</span><br><span class="line">breaklines=true,</span><br><span class="line">breakindent=26pt,</span><br><span class="line">captionpos=bl,</span><br><span class="line">numbers=left,</span><br><span class="line">frame=shadowbox,</span><br><span class="line">basicstyle=<span class="keyword">\ttfamily</span>,</span><br><span class="line">keywordstyle=<span class="keyword">\ttfamily</span><span class="keyword">\color</span>&#123;blue&#125;,</span><br><span class="line">numberstyle=<span class="keyword">\footnotesize</span><span class="keyword">\color</span>&#123;darkgray&#125;,</span><br><span class="line">commentstyle=<span class="keyword">\ttfamily</span><span class="keyword">\it</span><span class="keyword">\color</span>[RGB]&#123;0,96,96&#125;,</span><br><span class="line">stringstyle=<span class="keyword">\ttfamily</span><span class="keyword">\color</span>&#123;magenta&#125;,</span><br><span class="line">showstringspaces=false,</span><br><span class="line">language=Java,</span><br><span class="line">identifierstyle=<span class="keyword">\ttfamily</span>,</span><br><span class="line">tabsize=4,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;lstlisting&#125;[title=&#123;<span class="keyword">\bf</span> your.title&#125;]</span><br><span class="line"><span class="comment">% put your code here</span></span><br><span class="line"><span class="keyword">\end</span>&#123;lstlisting&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure><h1 id="作者"><a href="#作者" class="headerlink" title="作者"></a>作者</h1><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\usepackage</span>&#123;authblk&#125;</span><br><span class="line"><span class="keyword">\renewcommand</span>*&#123;<span class="keyword">\Affilfont</span>&#125;&#123;<span class="keyword">\small</span>&#125; <span class="comment">% 修改机构名称的字体与大小</span></span><br><span class="line"><span class="keyword">\renewcommand</span><span class="keyword">\Authand</span>&#123;, &#125; <span class="comment">% 去掉 and 前的逗号</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\title</span>&#123;<span class="keyword">\textbf</span>&#123;Title&#125; &#125;</span><br><span class="line"><span class="keyword">\author</span>[1]&#123;xxx&#125;</span><br><span class="line"><span class="keyword">\author</span>[2]&#123;xxx&#125;</span><br><span class="line"><span class="keyword">\affil</span>[1]&#123;(<span class="keyword">\it</span> 北京xx大学<span class="keyword">\ </span>xx学院,<span class="keyword">\ </span><span class="keyword">\rm</span> 0000)&#125;</span><br><span class="line"><span class="keyword">\affil</span>[2]&#123;(<span class="keyword">\it</span> 北京xx大学<span class="keyword">\ </span>xx学院,<span class="keyword">\ </span><span class="keyword">\rm</span> 0000)&#125;</span><br><span class="line"><span class="keyword">\date</span>&#123;&#125;</span><br></pre></td></tr></table></figure><h1 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h1><p>中英文摘要</p><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\newcommand</span>&#123;<span class="keyword">\enabstractname</span>&#125;&#123;Abstract&#125;</span><br><span class="line"><span class="keyword">\newcommand</span>&#123;<span class="keyword">\cnabstractname</span>&#125;&#123;摘要&#125;</span><br><span class="line"><span class="keyword">\newenvironment</span>&#123;cnabstract&#125;&#123;<span class="comment">%</span></span><br><span class="line"><span class="keyword">\par</span><span class="keyword">\small</span></span><br><span class="line"><span class="keyword">\noindent</span><span class="keyword">\mbox</span>&#123;&#125;<span class="keyword">\hfill</span>&#123;<span class="keyword">\bfseries</span> <span class="keyword">\cnabstractname</span>&#125;<span class="keyword">\hfill</span><span class="keyword">\mbox</span>&#123;&#125;<span class="keyword">\par</span></span><br><span class="line"><span class="keyword">\vskip</span> 2.5ex&#125;&#123;<span class="keyword">\par</span><span class="keyword">\vskip</span> 2.5ex&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\newenvironment</span>&#123;enabstract&#125;&#123;<span class="comment">%</span></span><br><span class="line"><span class="keyword">\par</span><span class="keyword">\small</span></span><br><span class="line"><span class="keyword">\noindent</span><span class="keyword">\mbox</span>&#123;&#125;<span class="keyword">\hfill</span>&#123;<span class="keyword">\bfseries</span> <span class="keyword">\enabstractname</span>&#125;<span class="keyword">\hfill</span><span class="keyword">\mbox</span>&#123;&#125;<span class="keyword">\par</span></span><br><span class="line"><span class="keyword">\vskip</span> 1.5ex&#125;&#123;<span class="keyword">\par</span><span class="keyword">\vskip</span> 2.5ex&#125; </span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;cnabstract&#125;</span><br><span class="line">xxx</span><br><span class="line"></span><br><span class="line"><span class="keyword">\textbf</span>&#123;关键词：&#125;xxx;xxx;xxx</span><br><span class="line"><span class="keyword">\end</span>&#123;cnabstract&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;enabstract&#125;</span><br><span class="line">xxx</span><br><span class="line"></span><br><span class="line"><span class="keyword">\textbf</span>&#123;Keywords:&#125;xxx;xxx;xxx;</span><br><span class="line"><span class="keyword">\end</span>&#123;enabstract&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure><h1 id="交叉引用"><a href="#交叉引用" class="headerlink" title="交叉引用"></a>交叉引用</h1><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\usepackage</span>&#123;hyperref&#125;</span><br><span class="line"><span class="keyword">\hypersetup</span>&#123;</span><br><span class="line">colorlinks=true,</span><br><span class="line">citecolor=blue,</span><br><span class="line">linkcolor=blue</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\ref</span>&#123;label&#125;</span><br><span class="line"><span class="keyword">\nameref</span>&#123;label&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\cite</span>&#123;1&#125; <span class="comment">% cite a reference</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;thebibliography&#125;&#123;99&#125; <span class="comment">% reference</span></span><br><span class="line"><span class="keyword">\bibitem</span>&#123;1&#125;</span><br><span class="line">xxx,xxx,xxx</span><br><span class="line"><span class="keyword">\end</span>&#123;thebibliography&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure><h1 id="附录"><a href="#附录" class="headerlink" title="附录"></a>附录</h1><figure class="highlight latex"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">\usepackage</span>&#123;appendix&#125;</span><br><span class="line"><span class="keyword">\renewcommand</span>&#123;<span class="keyword">\appendixname</span>&#125;&#123;Appendix~<span class="keyword">\Alph</span>&#123;section&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">\begin</span>&#123;document&#125;</span><br><span class="line"><span class="keyword">\newpage</span></span><br><span class="line"><span class="keyword">\appendix</span></span><br><span class="line"><span class="keyword">\section</span>&#123;xxxxx&#125;</span><br><span class="line"><span class="keyword">\end</span>&#123;document&#125;</span><br></pre></td></tr></table></figure><h1 id="画图"><a href="#画图" class="headerlink" title="画图"></a>画图</h1><p>闲得无聊查了一下，惊奇地发现Latex甚至可以画图，而且功能极其庞大，甚至有老哥画了个印度地图。。。</p><p><a href="https://texample.net/tikz/examples/">https://texample.net/tikz/examples/</a></p><p>找到个网站。要用的时候到里面找吧。</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;整理一下自己用过的latex命令。&lt;/p&gt;
&lt;p&gt;&lt;del&gt;先占个坑，还没想好怎么写…&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;现在想好怎么写了，慢慢填坑吧。。。&lt;/p&gt;</summary>
    
    
    
    
    <category term="Latex" scheme="https://s0uthwood.github.io/tags/Latex/"/>
    
  </entry>
  
  <entry>
    <title>First Crypto</title>
    <link href="https://s0uthwood.github.io/2020/11/15/First-Crypto/"/>
    <id>https://s0uthwood.github.io/2020/11/15/First-Crypto/</id>
    <published>2020-11-14T19:01:50.000Z</published>
    <updated>2020-11-16T09:28:23.734Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>前段时间学习信安数基，助教学长就配套出了道Quiz，来给我们练手。这两天决定记录一下学习过程，就拿来来给博客练手（手动狗头）。</p><a id="more"></a><p><del>一个大四的老同志，来，出题，来，欺负，我们大二的小学弟，这好吗？这不好。还好我是有备而来</del></p><p>废话说到这里，先上题目</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">from</span> AITMCLab.Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"><span class="keyword">from</span> AITMCLab.Crypto.Util.number <span class="keyword">import</span> bytes_to_long</span><br><span class="line"><span class="keyword">from</span> AITMCLab.Crypto.Util.number <span class="keyword">import</span> getRandomNBitInteger</span><br><span class="line"><span class="keyword">from</span> AITMCLab.Crypto.Util.number <span class="keyword">import</span> getPrime</span><br><span class="line"><span class="keyword">from</span> AITMCLab.Crypto.Util.number <span class="keyword">import</span> isPrime</span><br><span class="line"><span class="keyword">from</span> AITMCLab.Crypto.Util.number <span class="keyword">import</span> inverse</span><br><span class="line"><span class="keyword">from</span> secret <span class="keyword">import</span> flag</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">nextPrime</span>(<span class="params">n</span>):</span></span><br><span class="line">    n += <span class="number">2</span> <span class="keyword">if</span> n &amp; <span class="number">1</span> <span class="keyword">else</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> isPrime(n):</span><br><span class="line">        n += <span class="number">2</span></span><br><span class="line">    <span class="keyword">return</span> n</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init</span>(<span class="params">S, K</span>):</span></span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    k = []</span><br><span class="line">    K = <span class="built_in">list</span>(K)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(K)):</span><br><span class="line">        K[i] = <span class="built_in">ord</span>(K[i])</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">        S.append(i)</span><br><span class="line">        k.append(K[i % <span class="built_in">len</span>(K)])</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">256</span>):</span><br><span class="line">        j = (j + S[i] + k[i]) % <span class="number">256</span></span><br><span class="line">        S[i], S[j] = S[j], S[i]</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Encrypt</span>(<span class="params">key, D</span>):</span></span><br><span class="line">    S=[]</span><br><span class="line">    init(S, key)</span><br><span class="line">    i = j = <span class="number">0</span></span><br><span class="line">    result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> a <span class="keyword">in</span> D:</span><br><span class="line">        a = <span class="built_in">ord</span>(a)</span><br><span class="line">        i = (i + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">        j = (j + S[i]) % <span class="number">256</span></span><br><span class="line">        S[i], S[j] = S[j], S[i]</span><br><span class="line">        k = <span class="built_in">chr</span>(a ^ S[(S[i] + S[j]) % <span class="number">256</span>])</span><br><span class="line">        result += k</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">Decrypt</span>(<span class="params">key, D</span>):</span></span><br><span class="line">    S = []</span><br><span class="line">    init(S, key)</span><br><span class="line">    i = j = <span class="number">0</span></span><br><span class="line">    result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> a <span class="keyword">in</span> D:</span><br><span class="line">        a = <span class="built_in">ord</span>(a)</span><br><span class="line">        i = (i + <span class="number">1</span>) % <span class="number">256</span></span><br><span class="line">        j = (j + S[i]) % <span class="number">256</span></span><br><span class="line">        S[i], S[j] = S[j], S[i]</span><br><span class="line">        k = <span class="built_in">chr</span>(a ^ S[(S[i] + S[j]) % <span class="number">256</span>])</span><br><span class="line">        result += k</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    key = long_to_bytes(getRandomNBitInteger(<span class="number">100</span>))</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;key =&#x27;</span>, bytes_to_long(key)</span><br><span class="line">    e = getPrime(<span class="number">512</span>)</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;e =&#x27;</span>, e</span><br><span class="line"></span><br><span class="line">    E = nextPrime(e)</span><br><span class="line">    f = math.factorial(e) % E</span><br><span class="line"></span><br><span class="line">    d = long_to_bytes(f)</span><br><span class="line"></span><br><span class="line">    c1 = bytes_to_long(Encrypt(key, d))</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;c1 =&#x27;</span>, c1</span><br><span class="line"></span><br><span class="line">    c2 = bytes_to_long(Encrypt(key, flag))</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;c2 =&#x27;</span>, c2</span><br><span class="line"></span><br><span class="line"><span class="comment"># e = 11248112333656902878308992204660514716130692202019193081806766887380465145401754698746718075268681481388695805324253817155823465013590321091178897918430457</span></span><br><span class="line"><span class="comment"># c1 = 11792816667683654209610238149228683194178884298019505853565076663183883681365400495420305428570416004628438524072440231323696408946395141935772862600031614</span></span><br><span class="line"><span class="comment"># c2 = 81946333492800053045881242964212560642046177081574600318494251620269838444004879162713842</span></span><br></pre></td></tr></table></figure><h1 id="思路"><a href="#思路" class="headerlink" title="思路"></a>思路</h1><p>首先阅读主函数部分，显然这道题需要先通过e, E求解f，以此得到d，随后再利用d, c1, c2来求解flag。</p><h2 id="求解f"><a href="#求解f" class="headerlink" title="求解f"></a>求解f</h2><p>题目中的$f=e!\mathrm{mod} E$ ，但由于e过大，显然无法直接计算得到。观察发现，$e!$ 当中的绝大多数部分可以两两配对组成模$E$的逆元，因此猜测可能存在类似于$(E-1)!\equiv 1\ (\mathrm{mod}\ E)$ 的规律，如果满足这个规律，我们就可以通过计算$\prod\limits_{i=e+1}^{E-1}i\ (\mathrm{mod}\ E)$ 的逆元得到f。</p><p>经过几次简单的检验，猜测规律为$(E-2)!\equiv 1\ (\mathrm{mod}\ E)$ （后得知为Wilson定理，当时还没学…），因此只需要计算$tmp\equiv \prod\limits_{i=e+1}^{E-2}i\ (\mathrm{mod}\ E),\ f\cdot tmp\equiv 1\ (\mathrm{mod}\ E)$ 即可得到$f$。</p><h2 id="求解flag"><a href="#求解flag" class="headerlink" title="求解flag"></a>求解flag</h2><p>得到了 f 后，可以直接利用<code>long_to_bytes(f)</code>来得到 d 。为求解 flag，初步设想为利用加密函数求解 key，随后直接利用解密函数求解 flag。阅读<code>Encrypt</code>函数和<code>Decrypt</code>函数后发现加解密函数完全一致，且实际的加解密过程只有异或运算，说明 d 到 c1 的运算步骤与 flag 到 c2 的运算步骤完全相同且可逆，因此求解时没必要求出 key。进一步分析后发现加密算法大致是将 key 转化成某个固定的数组，并与明文依次进行异或运算得到密文，也就是说经过了 init 函数和多次交换位置（交换的次序也是固定的）后的数列才是真正的密钥。</p><p>因此，只需要将 c1, c2 和 d 转换成 bytes，然后对每一位取 <code>ord</code> 后进行异或运算，组成的数字取 <code>chr</code> 后加到答案字符串后面，即可得到 flag。</p><h1 id="源代码"><a href="#源代码" class="headerlink" title="源代码"></a>源代码</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"><span class="keyword">from</span> AITMCLab.libnum.modular <span class="keyword">import</span> invmod</span><br><span class="line"><span class="keyword">from</span> AITMCLab.Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"><span class="keyword">from</span> AITMCLab.Crypto.Util.number <span class="keyword">import</span> bytes_to_long</span><br><span class="line"><span class="keyword">from</span> AITMCLab.Crypto.Util.number <span class="keyword">import</span> isPrime</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">nextPrime</span>(<span class="params">n</span>):</span></span><br><span class="line">    n += <span class="number">2</span> <span class="keyword">if</span> n &amp; <span class="number">1</span> <span class="keyword">else</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> isPrime(n):</span><br><span class="line">        n += <span class="number">2</span></span><br><span class="line">    <span class="keyword">return</span> n</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    e = <span class="number">11248112333656902878308992204660514716130692202019193081806766887380465145401754698746718075268681481388695805324253817155823465013590321091178897918430457</span></span><br><span class="line">    c1 = <span class="number">5120829596353532760839054347975234579355835073413768618360492980516438193909447500996222328143719619379838946544412967584025416378147246422705451415437468</span></span><br><span class="line">    c2 = <span class="number">17985907282297772406857113433926323639543183645704827789984971602150950301590677893419082</span></span><br><span class="line">    E = nextPrime(e)</span><br><span class="line">    f_1 = <span class="number">1</span></span><br><span class="line">    i = e + <span class="number">1</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; E - <span class="number">1</span>:</span><br><span class="line">        f_1 *= i</span><br><span class="line">        f_1 %= E</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">    f = invmod(f_1, E)</span><br><span class="line">    <span class="comment"># 以上为求解f的过程</span></span><br><span class="line">    d = long_to_bytes(f)</span><br><span class="line">    c1_bytes = long_to_bytes(c1)</span><br><span class="line">    c2_bytes = lone_to_bytes(c2)</span><br><span class="line">    flag = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(c2_bytes)):</span><br><span class="line">        flag += <span class="built_in">chr</span>(<span class="built_in">ord</span>(c2_bytes[i]) ^ <span class="built_in">ord</span>(c1_bytes[i]) ^ <span class="built_in">ord</span>(d[i]))</span><br><span class="line">    <span class="built_in">print</span> flag</span><br></pre></td></tr></table></figure><h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><p>flag{Congratulation!_quiz1_passed!!!}</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h1&gt;&lt;p&gt;前段时间学习信安数基，助教学长就配套出了道Quiz，来给我们练手。这两天决定记录一下学习过程，就拿来来给博客练手（手动狗头）。&lt;/p&gt;</summary>
    
    
    
    
    <category term="crypto" scheme="https://s0uthwood.github.io/tags/crypto/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://s0uthwood.github.io/2020/11/15/hello-world/"/>
    <id>https://s0uthwood.github.io/2020/11/15/hello-world/</id>
    <published>2020-11-14T17:50:43.650Z</published>
    <updated>2020-11-17T19:04:22.712Z</updated>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><a id="more"></a><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <summary type="html">&lt;p&gt;Welcome to &lt;a href=&quot;https://hexo.io/&quot;&gt;Hexo&lt;/a&gt;! This is your very first post. Check &lt;a href=&quot;https://hexo.io/docs/&quot;&gt;documentation&lt;/a&gt; for more info. If you get any problems when using Hexo, you can find the answer in &lt;a href=&quot;https://hexo.io/docs/troubleshooting.html&quot;&gt;troubleshooting&lt;/a&gt; or you can ask me on &lt;a href=&quot;https://github.com/hexojs/hexo/issues&quot;&gt;GitHub&lt;/a&gt;.&lt;/p&gt;</summary>
    
    
    
    
  </entry>
  
</feed>
